# 1 "proyecto1.s"
# 1 "<built-in>" 1
# 1 "proyecto1.s" 2
;Archivo: proyecto1.S
;Dispositivo: PIC16F887
;Autor; Jose Alejandro Rodriguez Porras
;Compilador: pic-as (v2.31) MPLABX V5.40
;
;Programa: Proyecto 1: Semaforos de 3 vias, con displays de 10 a 20
; segundos y modo de configuraci√≥n
;
;Hardware: 8 displays 7seg en el puerto A, LEDs en el puerto C,E
; transistores en el puerto D y LEDs y pushbuttons en
; el puerto B
;
;Creado: 21 de marzo, 2021
;Ultima modificacion: 6 de abril, 2021

PROCESSOR 16F887

# 1 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\xc.inc" 1 3






# 1 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\pic.inc" 1 3



# 1 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\pic_as_chip_select.inc" 1 3
# 2734 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\pic_as_chip_select.inc" 3
# 1 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\proc\\pic16f887.inc" 1 3
# 48 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\proc\\pic16f887.inc" 3
INDF equ 0000h



TMR0 equ 0001h



PCL equ 0002h



STATUS equ 0003h

STATUS_C_POSN equ 0000h
STATUS_C_POSITION equ 0000h
STATUS_C_SIZE equ 0001h
STATUS_C_LENGTH equ 0001h
STATUS_C_MASK equ 0001h
STATUS_DC_POSN equ 0001h
STATUS_DC_POSITION equ 0001h
STATUS_DC_SIZE equ 0001h
STATUS_DC_LENGTH equ 0001h
STATUS_DC_MASK equ 0002h
STATUS_Z_POSN equ 0002h
STATUS_Z_POSITION equ 0002h
STATUS_Z_SIZE equ 0001h
STATUS_Z_LENGTH equ 0001h
STATUS_Z_MASK equ 0004h
STATUS_nPD_POSN equ 0003h
STATUS_nPD_POSITION equ 0003h
STATUS_nPD_SIZE equ 0001h
STATUS_nPD_LENGTH equ 0001h
STATUS_nPD_MASK equ 0008h
STATUS_nTO_POSN equ 0004h
STATUS_nTO_POSITION equ 0004h
STATUS_nTO_SIZE equ 0001h
STATUS_nTO_LENGTH equ 0001h
STATUS_nTO_MASK equ 0010h
STATUS_RP_POSN equ 0005h
STATUS_RP_POSITION equ 0005h
STATUS_RP_SIZE equ 0002h
STATUS_RP_LENGTH equ 0002h
STATUS_RP_MASK equ 0060h
STATUS_IRP_POSN equ 0007h
STATUS_IRP_POSITION equ 0007h
STATUS_IRP_SIZE equ 0001h
STATUS_IRP_LENGTH equ 0001h
STATUS_IRP_MASK equ 0080h
STATUS_RP0_POSN equ 0005h
STATUS_RP0_POSITION equ 0005h
STATUS_RP0_SIZE equ 0001h
STATUS_RP0_LENGTH equ 0001h
STATUS_RP0_MASK equ 0020h
STATUS_RP1_POSN equ 0006h
STATUS_RP1_POSITION equ 0006h
STATUS_RP1_SIZE equ 0001h
STATUS_RP1_LENGTH equ 0001h
STATUS_RP1_MASK equ 0040h
STATUS_CARRY_POSN equ 0000h
STATUS_CARRY_POSITION equ 0000h
STATUS_CARRY_SIZE equ 0001h
STATUS_CARRY_LENGTH equ 0001h
STATUS_CARRY_MASK equ 0001h
STATUS_ZERO_POSN equ 0002h
STATUS_ZERO_POSITION equ 0002h
STATUS_ZERO_SIZE equ 0001h
STATUS_ZERO_LENGTH equ 0001h
STATUS_ZERO_MASK equ 0004h



FSR equ 0004h



PORTA equ 0005h

PORTA_RA0_POSN equ 0000h
PORTA_RA0_POSITION equ 0000h
PORTA_RA0_SIZE equ 0001h
PORTA_RA0_LENGTH equ 0001h
PORTA_RA0_MASK equ 0001h
PORTA_RA1_POSN equ 0001h
PORTA_RA1_POSITION equ 0001h
PORTA_RA1_SIZE equ 0001h
PORTA_RA1_LENGTH equ 0001h
PORTA_RA1_MASK equ 0002h
PORTA_RA2_POSN equ 0002h
PORTA_RA2_POSITION equ 0002h
PORTA_RA2_SIZE equ 0001h
PORTA_RA2_LENGTH equ 0001h
PORTA_RA2_MASK equ 0004h
PORTA_RA3_POSN equ 0003h
PORTA_RA3_POSITION equ 0003h
PORTA_RA3_SIZE equ 0001h
PORTA_RA3_LENGTH equ 0001h
PORTA_RA3_MASK equ 0008h
PORTA_RA4_POSN equ 0004h
PORTA_RA4_POSITION equ 0004h
PORTA_RA4_SIZE equ 0001h
PORTA_RA4_LENGTH equ 0001h
PORTA_RA4_MASK equ 0010h
PORTA_RA5_POSN equ 0005h
PORTA_RA5_POSITION equ 0005h
PORTA_RA5_SIZE equ 0001h
PORTA_RA5_LENGTH equ 0001h
PORTA_RA5_MASK equ 0020h
PORTA_RA6_POSN equ 0006h
PORTA_RA6_POSITION equ 0006h
PORTA_RA6_SIZE equ 0001h
PORTA_RA6_LENGTH equ 0001h
PORTA_RA6_MASK equ 0040h
PORTA_RA7_POSN equ 0007h
PORTA_RA7_POSITION equ 0007h
PORTA_RA7_SIZE equ 0001h
PORTA_RA7_LENGTH equ 0001h
PORTA_RA7_MASK equ 0080h



PORTB equ 0006h

PORTB_RB0_POSN equ 0000h
PORTB_RB0_POSITION equ 0000h
PORTB_RB0_SIZE equ 0001h
PORTB_RB0_LENGTH equ 0001h
PORTB_RB0_MASK equ 0001h
PORTB_RB1_POSN equ 0001h
PORTB_RB1_POSITION equ 0001h
PORTB_RB1_SIZE equ 0001h
PORTB_RB1_LENGTH equ 0001h
PORTB_RB1_MASK equ 0002h
PORTB_RB2_POSN equ 0002h
PORTB_RB2_POSITION equ 0002h
PORTB_RB2_SIZE equ 0001h
PORTB_RB2_LENGTH equ 0001h
PORTB_RB2_MASK equ 0004h
PORTB_RB3_POSN equ 0003h
PORTB_RB3_POSITION equ 0003h
PORTB_RB3_SIZE equ 0001h
PORTB_RB3_LENGTH equ 0001h
PORTB_RB3_MASK equ 0008h
PORTB_RB4_POSN equ 0004h
PORTB_RB4_POSITION equ 0004h
PORTB_RB4_SIZE equ 0001h
PORTB_RB4_LENGTH equ 0001h
PORTB_RB4_MASK equ 0010h
PORTB_RB5_POSN equ 0005h
PORTB_RB5_POSITION equ 0005h
PORTB_RB5_SIZE equ 0001h
PORTB_RB5_LENGTH equ 0001h
PORTB_RB5_MASK equ 0020h
PORTB_RB6_POSN equ 0006h
PORTB_RB6_POSITION equ 0006h
PORTB_RB6_SIZE equ 0001h
PORTB_RB6_LENGTH equ 0001h
PORTB_RB6_MASK equ 0040h
PORTB_RB7_POSN equ 0007h
PORTB_RB7_POSITION equ 0007h
PORTB_RB7_SIZE equ 0001h
PORTB_RB7_LENGTH equ 0001h
PORTB_RB7_MASK equ 0080h



PORTC equ 0007h

PORTC_RC0_POSN equ 0000h
PORTC_RC0_POSITION equ 0000h
PORTC_RC0_SIZE equ 0001h
PORTC_RC0_LENGTH equ 0001h
PORTC_RC0_MASK equ 0001h
PORTC_RC1_POSN equ 0001h
PORTC_RC1_POSITION equ 0001h
PORTC_RC1_SIZE equ 0001h
PORTC_RC1_LENGTH equ 0001h
PORTC_RC1_MASK equ 0002h
PORTC_RC2_POSN equ 0002h
PORTC_RC2_POSITION equ 0002h
PORTC_RC2_SIZE equ 0001h
PORTC_RC2_LENGTH equ 0001h
PORTC_RC2_MASK equ 0004h
PORTC_RC3_POSN equ 0003h
PORTC_RC3_POSITION equ 0003h
PORTC_RC3_SIZE equ 0001h
PORTC_RC3_LENGTH equ 0001h
PORTC_RC3_MASK equ 0008h
PORTC_RC4_POSN equ 0004h
PORTC_RC4_POSITION equ 0004h
PORTC_RC4_SIZE equ 0001h
PORTC_RC4_LENGTH equ 0001h
PORTC_RC4_MASK equ 0010h
PORTC_RC5_POSN equ 0005h
PORTC_RC5_POSITION equ 0005h
PORTC_RC5_SIZE equ 0001h
PORTC_RC5_LENGTH equ 0001h
PORTC_RC5_MASK equ 0020h
PORTC_RC6_POSN equ 0006h
PORTC_RC6_POSITION equ 0006h
PORTC_RC6_SIZE equ 0001h
PORTC_RC6_LENGTH equ 0001h
PORTC_RC6_MASK equ 0040h
PORTC_RC7_POSN equ 0007h
PORTC_RC7_POSITION equ 0007h
PORTC_RC7_SIZE equ 0001h
PORTC_RC7_LENGTH equ 0001h
PORTC_RC7_MASK equ 0080h



PORTD equ 0008h

PORTD_RD0_POSN equ 0000h
PORTD_RD0_POSITION equ 0000h
PORTD_RD0_SIZE equ 0001h
PORTD_RD0_LENGTH equ 0001h
PORTD_RD0_MASK equ 0001h
PORTD_RD1_POSN equ 0001h
PORTD_RD1_POSITION equ 0001h
PORTD_RD1_SIZE equ 0001h
PORTD_RD1_LENGTH equ 0001h
PORTD_RD1_MASK equ 0002h
PORTD_RD2_POSN equ 0002h
PORTD_RD2_POSITION equ 0002h
PORTD_RD2_SIZE equ 0001h
PORTD_RD2_LENGTH equ 0001h
PORTD_RD2_MASK equ 0004h
PORTD_RD3_POSN equ 0003h
PORTD_RD3_POSITION equ 0003h
PORTD_RD3_SIZE equ 0001h
PORTD_RD3_LENGTH equ 0001h
PORTD_RD3_MASK equ 0008h
PORTD_RD4_POSN equ 0004h
PORTD_RD4_POSITION equ 0004h
PORTD_RD4_SIZE equ 0001h
PORTD_RD4_LENGTH equ 0001h
PORTD_RD4_MASK equ 0010h
PORTD_RD5_POSN equ 0005h
PORTD_RD5_POSITION equ 0005h
PORTD_RD5_SIZE equ 0001h
PORTD_RD5_LENGTH equ 0001h
PORTD_RD5_MASK equ 0020h
PORTD_RD6_POSN equ 0006h
PORTD_RD6_POSITION equ 0006h
PORTD_RD6_SIZE equ 0001h
PORTD_RD6_LENGTH equ 0001h
PORTD_RD6_MASK equ 0040h
PORTD_RD7_POSN equ 0007h
PORTD_RD7_POSITION equ 0007h
PORTD_RD7_SIZE equ 0001h
PORTD_RD7_LENGTH equ 0001h
PORTD_RD7_MASK equ 0080h



PORTE equ 0009h

PORTE_RE0_POSN equ 0000h
PORTE_RE0_POSITION equ 0000h
PORTE_RE0_SIZE equ 0001h
PORTE_RE0_LENGTH equ 0001h
PORTE_RE0_MASK equ 0001h
PORTE_RE1_POSN equ 0001h
PORTE_RE1_POSITION equ 0001h
PORTE_RE1_SIZE equ 0001h
PORTE_RE1_LENGTH equ 0001h
PORTE_RE1_MASK equ 0002h
PORTE_RE2_POSN equ 0002h
PORTE_RE2_POSITION equ 0002h
PORTE_RE2_SIZE equ 0001h
PORTE_RE2_LENGTH equ 0001h
PORTE_RE2_MASK equ 0004h
PORTE_RE3_POSN equ 0003h
PORTE_RE3_POSITION equ 0003h
PORTE_RE3_SIZE equ 0001h
PORTE_RE3_LENGTH equ 0001h
PORTE_RE3_MASK equ 0008h



PCLATH equ 000Ah



INTCON equ 000Bh

INTCON_RBIF_POSN equ 0000h
INTCON_RBIF_POSITION equ 0000h
INTCON_RBIF_SIZE equ 0001h
INTCON_RBIF_LENGTH equ 0001h
INTCON_RBIF_MASK equ 0001h
INTCON_INTF_POSN equ 0001h
INTCON_INTF_POSITION equ 0001h
INTCON_INTF_SIZE equ 0001h
INTCON_INTF_LENGTH equ 0001h
INTCON_INTF_MASK equ 0002h
INTCON_T0IF_POSN equ 0002h
INTCON_T0IF_POSITION equ 0002h
INTCON_T0IF_SIZE equ 0001h
INTCON_T0IF_LENGTH equ 0001h
INTCON_T0IF_MASK equ 0004h
INTCON_RBIE_POSN equ 0003h
INTCON_RBIE_POSITION equ 0003h
INTCON_RBIE_SIZE equ 0001h
INTCON_RBIE_LENGTH equ 0001h
INTCON_RBIE_MASK equ 0008h
INTCON_INTE_POSN equ 0004h
INTCON_INTE_POSITION equ 0004h
INTCON_INTE_SIZE equ 0001h
INTCON_INTE_LENGTH equ 0001h
INTCON_INTE_MASK equ 0010h
INTCON_T0IE_POSN equ 0005h
INTCON_T0IE_POSITION equ 0005h
INTCON_T0IE_SIZE equ 0001h
INTCON_T0IE_LENGTH equ 0001h
INTCON_T0IE_MASK equ 0020h
INTCON_PEIE_POSN equ 0006h
INTCON_PEIE_POSITION equ 0006h
INTCON_PEIE_SIZE equ 0001h
INTCON_PEIE_LENGTH equ 0001h
INTCON_PEIE_MASK equ 0040h
INTCON_GIE_POSN equ 0007h
INTCON_GIE_POSITION equ 0007h
INTCON_GIE_SIZE equ 0001h
INTCON_GIE_LENGTH equ 0001h
INTCON_GIE_MASK equ 0080h
INTCON_TMR0IF_POSN equ 0002h
INTCON_TMR0IF_POSITION equ 0002h
INTCON_TMR0IF_SIZE equ 0001h
INTCON_TMR0IF_LENGTH equ 0001h
INTCON_TMR0IF_MASK equ 0004h
INTCON_TMR0IE_POSN equ 0005h
INTCON_TMR0IE_POSITION equ 0005h
INTCON_TMR0IE_SIZE equ 0001h
INTCON_TMR0IE_LENGTH equ 0001h
INTCON_TMR0IE_MASK equ 0020h



PIR1 equ 000Ch

PIR1_TMR1IF_POSN equ 0000h
PIR1_TMR1IF_POSITION equ 0000h
PIR1_TMR1IF_SIZE equ 0001h
PIR1_TMR1IF_LENGTH equ 0001h
PIR1_TMR1IF_MASK equ 0001h
PIR1_TMR2IF_POSN equ 0001h
PIR1_TMR2IF_POSITION equ 0001h
PIR1_TMR2IF_SIZE equ 0001h
PIR1_TMR2IF_LENGTH equ 0001h
PIR1_TMR2IF_MASK equ 0002h
PIR1_CCP1IF_POSN equ 0002h
PIR1_CCP1IF_POSITION equ 0002h
PIR1_CCP1IF_SIZE equ 0001h
PIR1_CCP1IF_LENGTH equ 0001h
PIR1_CCP1IF_MASK equ 0004h
PIR1_SSPIF_POSN equ 0003h
PIR1_SSPIF_POSITION equ 0003h
PIR1_SSPIF_SIZE equ 0001h
PIR1_SSPIF_LENGTH equ 0001h
PIR1_SSPIF_MASK equ 0008h
PIR1_TXIF_POSN equ 0004h
PIR1_TXIF_POSITION equ 0004h
PIR1_TXIF_SIZE equ 0001h
PIR1_TXIF_LENGTH equ 0001h
PIR1_TXIF_MASK equ 0010h
PIR1_RCIF_POSN equ 0005h
PIR1_RCIF_POSITION equ 0005h
PIR1_RCIF_SIZE equ 0001h
PIR1_RCIF_LENGTH equ 0001h
PIR1_RCIF_MASK equ 0020h
PIR1_ADIF_POSN equ 0006h
PIR1_ADIF_POSITION equ 0006h
PIR1_ADIF_SIZE equ 0001h
PIR1_ADIF_LENGTH equ 0001h
PIR1_ADIF_MASK equ 0040h



PIR2 equ 000Dh

PIR2_CCP2IF_POSN equ 0000h
PIR2_CCP2IF_POSITION equ 0000h
PIR2_CCP2IF_SIZE equ 0001h
PIR2_CCP2IF_LENGTH equ 0001h
PIR2_CCP2IF_MASK equ 0001h
PIR2_ULPWUIF_POSN equ 0002h
PIR2_ULPWUIF_POSITION equ 0002h
PIR2_ULPWUIF_SIZE equ 0001h
PIR2_ULPWUIF_LENGTH equ 0001h
PIR2_ULPWUIF_MASK equ 0004h
PIR2_BCLIF_POSN equ 0003h
PIR2_BCLIF_POSITION equ 0003h
PIR2_BCLIF_SIZE equ 0001h
PIR2_BCLIF_LENGTH equ 0001h
PIR2_BCLIF_MASK equ 0008h
PIR2_EEIF_POSN equ 0004h
PIR2_EEIF_POSITION equ 0004h
PIR2_EEIF_SIZE equ 0001h
PIR2_EEIF_LENGTH equ 0001h
PIR2_EEIF_MASK equ 0010h
PIR2_C1IF_POSN equ 0005h
PIR2_C1IF_POSITION equ 0005h
PIR2_C1IF_SIZE equ 0001h
PIR2_C1IF_LENGTH equ 0001h
PIR2_C1IF_MASK equ 0020h
PIR2_C2IF_POSN equ 0006h
PIR2_C2IF_POSITION equ 0006h
PIR2_C2IF_SIZE equ 0001h
PIR2_C2IF_LENGTH equ 0001h
PIR2_C2IF_MASK equ 0040h
PIR2_OSFIF_POSN equ 0007h
PIR2_OSFIF_POSITION equ 0007h
PIR2_OSFIF_SIZE equ 0001h
PIR2_OSFIF_LENGTH equ 0001h
PIR2_OSFIF_MASK equ 0080h



TMR1L equ 000Eh



TMR1H equ 000Fh



T1CON equ 0010h

T1CON_TMR1ON_POSN equ 0000h
T1CON_TMR1ON_POSITION equ 0000h
T1CON_TMR1ON_SIZE equ 0001h
T1CON_TMR1ON_LENGTH equ 0001h
T1CON_TMR1ON_MASK equ 0001h
T1CON_TMR1CS_POSN equ 0001h
T1CON_TMR1CS_POSITION equ 0001h
T1CON_TMR1CS_SIZE equ 0001h
T1CON_TMR1CS_LENGTH equ 0001h
T1CON_TMR1CS_MASK equ 0002h
T1CON_nT1SYNC_POSN equ 0002h
T1CON_nT1SYNC_POSITION equ 0002h
T1CON_nT1SYNC_SIZE equ 0001h
T1CON_nT1SYNC_LENGTH equ 0001h
T1CON_nT1SYNC_MASK equ 0004h
T1CON_T1OSCEN_POSN equ 0003h
T1CON_T1OSCEN_POSITION equ 0003h
T1CON_T1OSCEN_SIZE equ 0001h
T1CON_T1OSCEN_LENGTH equ 0001h
T1CON_T1OSCEN_MASK equ 0008h
T1CON_T1CKPS_POSN equ 0004h
T1CON_T1CKPS_POSITION equ 0004h
T1CON_T1CKPS_SIZE equ 0002h
T1CON_T1CKPS_LENGTH equ 0002h
T1CON_T1CKPS_MASK equ 0030h
T1CON_TMR1GE_POSN equ 0006h
T1CON_TMR1GE_POSITION equ 0006h
T1CON_TMR1GE_SIZE equ 0001h
T1CON_TMR1GE_LENGTH equ 0001h
T1CON_TMR1GE_MASK equ 0040h
T1CON_T1GINV_POSN equ 0007h
T1CON_T1GINV_POSITION equ 0007h
T1CON_T1GINV_SIZE equ 0001h
T1CON_T1GINV_LENGTH equ 0001h
T1CON_T1GINV_MASK equ 0080h
T1CON_T1INSYNC_POSN equ 0002h
T1CON_T1INSYNC_POSITION equ 0002h
T1CON_T1INSYNC_SIZE equ 0001h
T1CON_T1INSYNC_LENGTH equ 0001h
T1CON_T1INSYNC_MASK equ 0004h
T1CON_T1CKPS0_POSN equ 0004h
T1CON_T1CKPS0_POSITION equ 0004h
T1CON_T1CKPS0_SIZE equ 0001h
T1CON_T1CKPS0_LENGTH equ 0001h
T1CON_T1CKPS0_MASK equ 0010h
T1CON_T1CKPS1_POSN equ 0005h
T1CON_T1CKPS1_POSITION equ 0005h
T1CON_T1CKPS1_SIZE equ 0001h
T1CON_T1CKPS1_LENGTH equ 0001h
T1CON_T1CKPS1_MASK equ 0020h
T1CON_T1GIV_POSN equ 0007h
T1CON_T1GIV_POSITION equ 0007h
T1CON_T1GIV_SIZE equ 0001h
T1CON_T1GIV_LENGTH equ 0001h
T1CON_T1GIV_MASK equ 0080h
T1CON_T1SYNC_POSN equ 0002h
T1CON_T1SYNC_POSITION equ 0002h
T1CON_T1SYNC_SIZE equ 0001h
T1CON_T1SYNC_LENGTH equ 0001h
T1CON_T1SYNC_MASK equ 0004h



TMR2 equ 0011h



T2CON equ 0012h

T2CON_T2CKPS_POSN equ 0000h
T2CON_T2CKPS_POSITION equ 0000h
T2CON_T2CKPS_SIZE equ 0002h
T2CON_T2CKPS_LENGTH equ 0002h
T2CON_T2CKPS_MASK equ 0003h
T2CON_TMR2ON_POSN equ 0002h
T2CON_TMR2ON_POSITION equ 0002h
T2CON_TMR2ON_SIZE equ 0001h
T2CON_TMR2ON_LENGTH equ 0001h
T2CON_TMR2ON_MASK equ 0004h
T2CON_TOUTPS_POSN equ 0003h
T2CON_TOUTPS_POSITION equ 0003h
T2CON_TOUTPS_SIZE equ 0004h
T2CON_TOUTPS_LENGTH equ 0004h
T2CON_TOUTPS_MASK equ 0078h
T2CON_T2CKPS0_POSN equ 0000h
T2CON_T2CKPS0_POSITION equ 0000h
T2CON_T2CKPS0_SIZE equ 0001h
T2CON_T2CKPS0_LENGTH equ 0001h
T2CON_T2CKPS0_MASK equ 0001h
T2CON_T2CKPS1_POSN equ 0001h
T2CON_T2CKPS1_POSITION equ 0001h
T2CON_T2CKPS1_SIZE equ 0001h
T2CON_T2CKPS1_LENGTH equ 0001h
T2CON_T2CKPS1_MASK equ 0002h
T2CON_TOUTPS0_POSN equ 0003h
T2CON_TOUTPS0_POSITION equ 0003h
T2CON_TOUTPS0_SIZE equ 0001h
T2CON_TOUTPS0_LENGTH equ 0001h
T2CON_TOUTPS0_MASK equ 0008h
T2CON_TOUTPS1_POSN equ 0004h
T2CON_TOUTPS1_POSITION equ 0004h
T2CON_TOUTPS1_SIZE equ 0001h
T2CON_TOUTPS1_LENGTH equ 0001h
T2CON_TOUTPS1_MASK equ 0010h
T2CON_TOUTPS2_POSN equ 0005h
T2CON_TOUTPS2_POSITION equ 0005h
T2CON_TOUTPS2_SIZE equ 0001h
T2CON_TOUTPS2_LENGTH equ 0001h
T2CON_TOUTPS2_MASK equ 0020h
T2CON_TOUTPS3_POSN equ 0006h
T2CON_TOUTPS3_POSITION equ 0006h
T2CON_TOUTPS3_SIZE equ 0001h
T2CON_TOUTPS3_LENGTH equ 0001h
T2CON_TOUTPS3_MASK equ 0040h



SSPBUF equ 0013h



SSPCON equ 0014h

SSPCON_SSPM_POSN equ 0000h
SSPCON_SSPM_POSITION equ 0000h
SSPCON_SSPM_SIZE equ 0004h
SSPCON_SSPM_LENGTH equ 0004h
SSPCON_SSPM_MASK equ 000Fh
SSPCON_CKP_POSN equ 0004h
SSPCON_CKP_POSITION equ 0004h
SSPCON_CKP_SIZE equ 0001h
SSPCON_CKP_LENGTH equ 0001h
SSPCON_CKP_MASK equ 0010h
SSPCON_SSPEN_POSN equ 0005h
SSPCON_SSPEN_POSITION equ 0005h
SSPCON_SSPEN_SIZE equ 0001h
SSPCON_SSPEN_LENGTH equ 0001h
SSPCON_SSPEN_MASK equ 0020h
SSPCON_SSPOV_POSN equ 0006h
SSPCON_SSPOV_POSITION equ 0006h
SSPCON_SSPOV_SIZE equ 0001h
SSPCON_SSPOV_LENGTH equ 0001h
SSPCON_SSPOV_MASK equ 0040h
SSPCON_WCOL_POSN equ 0007h
SSPCON_WCOL_POSITION equ 0007h
SSPCON_WCOL_SIZE equ 0001h
SSPCON_WCOL_LENGTH equ 0001h
SSPCON_WCOL_MASK equ 0080h
SSPCON_SSPM0_POSN equ 0000h
SSPCON_SSPM0_POSITION equ 0000h
SSPCON_SSPM0_SIZE equ 0001h
SSPCON_SSPM0_LENGTH equ 0001h
SSPCON_SSPM0_MASK equ 0001h
SSPCON_SSPM1_POSN equ 0001h
SSPCON_SSPM1_POSITION equ 0001h
SSPCON_SSPM1_SIZE equ 0001h
SSPCON_SSPM1_LENGTH equ 0001h
SSPCON_SSPM1_MASK equ 0002h
SSPCON_SSPM2_POSN equ 0002h
SSPCON_SSPM2_POSITION equ 0002h
SSPCON_SSPM2_SIZE equ 0001h
SSPCON_SSPM2_LENGTH equ 0001h
SSPCON_SSPM2_MASK equ 0004h
SSPCON_SSPM3_POSN equ 0003h
SSPCON_SSPM3_POSITION equ 0003h
SSPCON_SSPM3_SIZE equ 0001h
SSPCON_SSPM3_LENGTH equ 0001h
SSPCON_SSPM3_MASK equ 0008h



CCPR1L equ 0015h



CCPR1H equ 0016h



CCP1CON equ 0017h

CCP1CON_CCP1M_POSN equ 0000h
CCP1CON_CCP1M_POSITION equ 0000h
CCP1CON_CCP1M_SIZE equ 0004h
CCP1CON_CCP1M_LENGTH equ 0004h
CCP1CON_CCP1M_MASK equ 000Fh
CCP1CON_DC1B_POSN equ 0004h
CCP1CON_DC1B_POSITION equ 0004h
CCP1CON_DC1B_SIZE equ 0002h
CCP1CON_DC1B_LENGTH equ 0002h
CCP1CON_DC1B_MASK equ 0030h
CCP1CON_P1M_POSN equ 0006h
CCP1CON_P1M_POSITION equ 0006h
CCP1CON_P1M_SIZE equ 0002h
CCP1CON_P1M_LENGTH equ 0002h
CCP1CON_P1M_MASK equ 00C0h
CCP1CON_CCP1M0_POSN equ 0000h
CCP1CON_CCP1M0_POSITION equ 0000h
CCP1CON_CCP1M0_SIZE equ 0001h
CCP1CON_CCP1M0_LENGTH equ 0001h
CCP1CON_CCP1M0_MASK equ 0001h
CCP1CON_CCP1M1_POSN equ 0001h
CCP1CON_CCP1M1_POSITION equ 0001h
CCP1CON_CCP1M1_SIZE equ 0001h
CCP1CON_CCP1M1_LENGTH equ 0001h
CCP1CON_CCP1M1_MASK equ 0002h
CCP1CON_CCP1M2_POSN equ 0002h
CCP1CON_CCP1M2_POSITION equ 0002h
CCP1CON_CCP1M2_SIZE equ 0001h
CCP1CON_CCP1M2_LENGTH equ 0001h
CCP1CON_CCP1M2_MASK equ 0004h
CCP1CON_CCP1M3_POSN equ 0003h
CCP1CON_CCP1M3_POSITION equ 0003h
CCP1CON_CCP1M3_SIZE equ 0001h
CCP1CON_CCP1M3_LENGTH equ 0001h
CCP1CON_CCP1M3_MASK equ 0008h
CCP1CON_DC1B0_POSN equ 0004h
CCP1CON_DC1B0_POSITION equ 0004h
CCP1CON_DC1B0_SIZE equ 0001h
CCP1CON_DC1B0_LENGTH equ 0001h
CCP1CON_DC1B0_MASK equ 0010h
CCP1CON_DC1B1_POSN equ 0005h
CCP1CON_DC1B1_POSITION equ 0005h
CCP1CON_DC1B1_SIZE equ 0001h
CCP1CON_DC1B1_LENGTH equ 0001h
CCP1CON_DC1B1_MASK equ 0020h
CCP1CON_P1M0_POSN equ 0006h
CCP1CON_P1M0_POSITION equ 0006h
CCP1CON_P1M0_SIZE equ 0001h
CCP1CON_P1M0_LENGTH equ 0001h
CCP1CON_P1M0_MASK equ 0040h
CCP1CON_P1M1_POSN equ 0007h
CCP1CON_P1M1_POSITION equ 0007h
CCP1CON_P1M1_SIZE equ 0001h
CCP1CON_P1M1_LENGTH equ 0001h
CCP1CON_P1M1_MASK equ 0080h
CCP1CON_CCP1Y_POSN equ 0004h
CCP1CON_CCP1Y_POSITION equ 0004h
CCP1CON_CCP1Y_SIZE equ 0001h
CCP1CON_CCP1Y_LENGTH equ 0001h
CCP1CON_CCP1Y_MASK equ 0010h
CCP1CON_CCP1X_POSN equ 0005h
CCP1CON_CCP1X_POSITION equ 0005h
CCP1CON_CCP1X_SIZE equ 0001h
CCP1CON_CCP1X_LENGTH equ 0001h
CCP1CON_CCP1X_MASK equ 0020h



RCSTA equ 0018h

RCSTA_RX9D_POSN equ 0000h
RCSTA_RX9D_POSITION equ 0000h
RCSTA_RX9D_SIZE equ 0001h
RCSTA_RX9D_LENGTH equ 0001h
RCSTA_RX9D_MASK equ 0001h
RCSTA_OERR_POSN equ 0001h
RCSTA_OERR_POSITION equ 0001h
RCSTA_OERR_SIZE equ 0001h
RCSTA_OERR_LENGTH equ 0001h
RCSTA_OERR_MASK equ 0002h
RCSTA_FERR_POSN equ 0002h
RCSTA_FERR_POSITION equ 0002h
RCSTA_FERR_SIZE equ 0001h
RCSTA_FERR_LENGTH equ 0001h
RCSTA_FERR_MASK equ 0004h
RCSTA_ADDEN_POSN equ 0003h
RCSTA_ADDEN_POSITION equ 0003h
RCSTA_ADDEN_SIZE equ 0001h
RCSTA_ADDEN_LENGTH equ 0001h
RCSTA_ADDEN_MASK equ 0008h
RCSTA_CREN_POSN equ 0004h
RCSTA_CREN_POSITION equ 0004h
RCSTA_CREN_SIZE equ 0001h
RCSTA_CREN_LENGTH equ 0001h
RCSTA_CREN_MASK equ 0010h
RCSTA_SREN_POSN equ 0005h
RCSTA_SREN_POSITION equ 0005h
RCSTA_SREN_SIZE equ 0001h
RCSTA_SREN_LENGTH equ 0001h
RCSTA_SREN_MASK equ 0020h
RCSTA_RX9_POSN equ 0006h
RCSTA_RX9_POSITION equ 0006h
RCSTA_RX9_SIZE equ 0001h
RCSTA_RX9_LENGTH equ 0001h
RCSTA_RX9_MASK equ 0040h
RCSTA_SPEN_POSN equ 0007h
RCSTA_SPEN_POSITION equ 0007h
RCSTA_SPEN_SIZE equ 0001h
RCSTA_SPEN_LENGTH equ 0001h
RCSTA_SPEN_MASK equ 0080h
RCSTA_RCD8_POSN equ 0000h
RCSTA_RCD8_POSITION equ 0000h
RCSTA_RCD8_SIZE equ 0001h
RCSTA_RCD8_LENGTH equ 0001h
RCSTA_RCD8_MASK equ 0001h
RCSTA_RC9_POSN equ 0006h
RCSTA_RC9_POSITION equ 0006h
RCSTA_RC9_SIZE equ 0001h
RCSTA_RC9_LENGTH equ 0001h
RCSTA_RC9_MASK equ 0040h
RCSTA_nRC8_POSN equ 0006h
RCSTA_nRC8_POSITION equ 0006h
RCSTA_nRC8_SIZE equ 0001h
RCSTA_nRC8_LENGTH equ 0001h
RCSTA_nRC8_MASK equ 0040h
RCSTA_RC8_9_POSN equ 0006h
RCSTA_RC8_9_POSITION equ 0006h
RCSTA_RC8_9_SIZE equ 0001h
RCSTA_RC8_9_LENGTH equ 0001h
RCSTA_RC8_9_MASK equ 0040h



TXREG equ 0019h



RCREG equ 001Ah



CCPR2L equ 001Bh



CCPR2H equ 001Ch



CCP2CON equ 001Dh

CCP2CON_CCP2M_POSN equ 0000h
CCP2CON_CCP2M_POSITION equ 0000h
CCP2CON_CCP2M_SIZE equ 0004h
CCP2CON_CCP2M_LENGTH equ 0004h
CCP2CON_CCP2M_MASK equ 000Fh
CCP2CON_DC2B0_POSN equ 0004h
CCP2CON_DC2B0_POSITION equ 0004h
CCP2CON_DC2B0_SIZE equ 0001h
CCP2CON_DC2B0_LENGTH equ 0001h
CCP2CON_DC2B0_MASK equ 0010h
CCP2CON_DC2B1_POSN equ 0005h
CCP2CON_DC2B1_POSITION equ 0005h
CCP2CON_DC2B1_SIZE equ 0001h
CCP2CON_DC2B1_LENGTH equ 0001h
CCP2CON_DC2B1_MASK equ 0020h
CCP2CON_CCP2M0_POSN equ 0000h
CCP2CON_CCP2M0_POSITION equ 0000h
CCP2CON_CCP2M0_SIZE equ 0001h
CCP2CON_CCP2M0_LENGTH equ 0001h
CCP2CON_CCP2M0_MASK equ 0001h
CCP2CON_CCP2M1_POSN equ 0001h
CCP2CON_CCP2M1_POSITION equ 0001h
CCP2CON_CCP2M1_SIZE equ 0001h
CCP2CON_CCP2M1_LENGTH equ 0001h
CCP2CON_CCP2M1_MASK equ 0002h
CCP2CON_CCP2M2_POSN equ 0002h
CCP2CON_CCP2M2_POSITION equ 0002h
CCP2CON_CCP2M2_SIZE equ 0001h
CCP2CON_CCP2M2_LENGTH equ 0001h
CCP2CON_CCP2M2_MASK equ 0004h
CCP2CON_CCP2M3_POSN equ 0003h
CCP2CON_CCP2M3_POSITION equ 0003h
CCP2CON_CCP2M3_SIZE equ 0001h
CCP2CON_CCP2M3_LENGTH equ 0001h
CCP2CON_CCP2M3_MASK equ 0008h
CCP2CON_CCP2Y_POSN equ 0004h
CCP2CON_CCP2Y_POSITION equ 0004h
CCP2CON_CCP2Y_SIZE equ 0001h
CCP2CON_CCP2Y_LENGTH equ 0001h
CCP2CON_CCP2Y_MASK equ 0010h
CCP2CON_CCP2X_POSN equ 0005h
CCP2CON_CCP2X_POSITION equ 0005h
CCP2CON_CCP2X_SIZE equ 0001h
CCP2CON_CCP2X_LENGTH equ 0001h
CCP2CON_CCP2X_MASK equ 0020h



ADRESH equ 001Eh



ADCON0 equ 001Fh

ADCON0_ADON_POSN equ 0000h
ADCON0_ADON_POSITION equ 0000h
ADCON0_ADON_SIZE equ 0001h
ADCON0_ADON_LENGTH equ 0001h
ADCON0_ADON_MASK equ 0001h
ADCON0_GO_nDONE_POSN equ 0001h
ADCON0_GO_nDONE_POSITION equ 0001h
ADCON0_GO_nDONE_SIZE equ 0001h
ADCON0_GO_nDONE_LENGTH equ 0001h
ADCON0_GO_nDONE_MASK equ 0002h
ADCON0_CHS_POSN equ 0002h
ADCON0_CHS_POSITION equ 0002h
ADCON0_CHS_SIZE equ 0004h
ADCON0_CHS_LENGTH equ 0004h
ADCON0_CHS_MASK equ 003Ch
ADCON0_ADCS_POSN equ 0006h
ADCON0_ADCS_POSITION equ 0006h
ADCON0_ADCS_SIZE equ 0002h
ADCON0_ADCS_LENGTH equ 0002h
ADCON0_ADCS_MASK equ 00C0h
ADCON0_GO_POSN equ 0001h
ADCON0_GO_POSITION equ 0001h
ADCON0_GO_SIZE equ 0001h
ADCON0_GO_LENGTH equ 0001h
ADCON0_GO_MASK equ 0002h
ADCON0_CHS0_POSN equ 0002h
ADCON0_CHS0_POSITION equ 0002h
ADCON0_CHS0_SIZE equ 0001h
ADCON0_CHS0_LENGTH equ 0001h
ADCON0_CHS0_MASK equ 0004h
ADCON0_CHS1_POSN equ 0003h
ADCON0_CHS1_POSITION equ 0003h
ADCON0_CHS1_SIZE equ 0001h
ADCON0_CHS1_LENGTH equ 0001h
ADCON0_CHS1_MASK equ 0008h
ADCON0_CHS2_POSN equ 0004h
ADCON0_CHS2_POSITION equ 0004h
ADCON0_CHS2_SIZE equ 0001h
ADCON0_CHS2_LENGTH equ 0001h
ADCON0_CHS2_MASK equ 0010h
ADCON0_CHS3_POSN equ 0005h
ADCON0_CHS3_POSITION equ 0005h
ADCON0_CHS3_SIZE equ 0001h
ADCON0_CHS3_LENGTH equ 0001h
ADCON0_CHS3_MASK equ 0020h
ADCON0_ADCS0_POSN equ 0006h
ADCON0_ADCS0_POSITION equ 0006h
ADCON0_ADCS0_SIZE equ 0001h
ADCON0_ADCS0_LENGTH equ 0001h
ADCON0_ADCS0_MASK equ 0040h
ADCON0_ADCS1_POSN equ 0007h
ADCON0_ADCS1_POSITION equ 0007h
ADCON0_ADCS1_SIZE equ 0001h
ADCON0_ADCS1_LENGTH equ 0001h
ADCON0_ADCS1_MASK equ 0080h
ADCON0_nDONE_POSN equ 0001h
ADCON0_nDONE_POSITION equ 0001h
ADCON0_nDONE_SIZE equ 0001h
ADCON0_nDONE_LENGTH equ 0001h
ADCON0_nDONE_MASK equ 0002h
ADCON0_GO_DONE_POSN equ 0001h
ADCON0_GO_DONE_POSITION equ 0001h
ADCON0_GO_DONE_SIZE equ 0001h
ADCON0_GO_DONE_LENGTH equ 0001h
ADCON0_GO_DONE_MASK equ 0002h



OPTION_REG equ 0081h

OPTION_REG_PS_POSN equ 0000h
OPTION_REG_PS_POSITION equ 0000h
OPTION_REG_PS_SIZE equ 0003h
OPTION_REG_PS_LENGTH equ 0003h
OPTION_REG_PS_MASK equ 0007h
OPTION_REG_PSA_POSN equ 0003h
OPTION_REG_PSA_POSITION equ 0003h
OPTION_REG_PSA_SIZE equ 0001h
OPTION_REG_PSA_LENGTH equ 0001h
OPTION_REG_PSA_MASK equ 0008h
OPTION_REG_T0SE_POSN equ 0004h
OPTION_REG_T0SE_POSITION equ 0004h
OPTION_REG_T0SE_SIZE equ 0001h
OPTION_REG_T0SE_LENGTH equ 0001h
OPTION_REG_T0SE_MASK equ 0010h
OPTION_REG_T0CS_POSN equ 0005h
OPTION_REG_T0CS_POSITION equ 0005h
OPTION_REG_T0CS_SIZE equ 0001h
OPTION_REG_T0CS_LENGTH equ 0001h
OPTION_REG_T0CS_MASK equ 0020h
OPTION_REG_INTEDG_POSN equ 0006h
OPTION_REG_INTEDG_POSITION equ 0006h
OPTION_REG_INTEDG_SIZE equ 0001h
OPTION_REG_INTEDG_LENGTH equ 0001h
OPTION_REG_INTEDG_MASK equ 0040h
OPTION_REG_nRBPU_POSN equ 0007h
OPTION_REG_nRBPU_POSITION equ 0007h
OPTION_REG_nRBPU_SIZE equ 0001h
OPTION_REG_nRBPU_LENGTH equ 0001h
OPTION_REG_nRBPU_MASK equ 0080h
OPTION_REG_PS0_POSN equ 0000h
OPTION_REG_PS0_POSITION equ 0000h
OPTION_REG_PS0_SIZE equ 0001h
OPTION_REG_PS0_LENGTH equ 0001h
OPTION_REG_PS0_MASK equ 0001h
OPTION_REG_PS1_POSN equ 0001h
OPTION_REG_PS1_POSITION equ 0001h
OPTION_REG_PS1_SIZE equ 0001h
OPTION_REG_PS1_LENGTH equ 0001h
OPTION_REG_PS1_MASK equ 0002h
OPTION_REG_PS2_POSN equ 0002h
OPTION_REG_PS2_POSITION equ 0002h
OPTION_REG_PS2_SIZE equ 0001h
OPTION_REG_PS2_LENGTH equ 0001h
OPTION_REG_PS2_MASK equ 0004h



TRISA equ 0085h

TRISA_TRISA0_POSN equ 0000h
TRISA_TRISA0_POSITION equ 0000h
TRISA_TRISA0_SIZE equ 0001h
TRISA_TRISA0_LENGTH equ 0001h
TRISA_TRISA0_MASK equ 0001h
TRISA_TRISA1_POSN equ 0001h
TRISA_TRISA1_POSITION equ 0001h
TRISA_TRISA1_SIZE equ 0001h
TRISA_TRISA1_LENGTH equ 0001h
TRISA_TRISA1_MASK equ 0002h
TRISA_TRISA2_POSN equ 0002h
TRISA_TRISA2_POSITION equ 0002h
TRISA_TRISA2_SIZE equ 0001h
TRISA_TRISA2_LENGTH equ 0001h
TRISA_TRISA2_MASK equ 0004h
TRISA_TRISA3_POSN equ 0003h
TRISA_TRISA3_POSITION equ 0003h
TRISA_TRISA3_SIZE equ 0001h
TRISA_TRISA3_LENGTH equ 0001h
TRISA_TRISA3_MASK equ 0008h
TRISA_TRISA4_POSN equ 0004h
TRISA_TRISA4_POSITION equ 0004h
TRISA_TRISA4_SIZE equ 0001h
TRISA_TRISA4_LENGTH equ 0001h
TRISA_TRISA4_MASK equ 0010h
TRISA_TRISA5_POSN equ 0005h
TRISA_TRISA5_POSITION equ 0005h
TRISA_TRISA5_SIZE equ 0001h
TRISA_TRISA5_LENGTH equ 0001h
TRISA_TRISA5_MASK equ 0020h
TRISA_TRISA6_POSN equ 0006h
TRISA_TRISA6_POSITION equ 0006h
TRISA_TRISA6_SIZE equ 0001h
TRISA_TRISA6_LENGTH equ 0001h
TRISA_TRISA6_MASK equ 0040h
TRISA_TRISA7_POSN equ 0007h
TRISA_TRISA7_POSITION equ 0007h
TRISA_TRISA7_SIZE equ 0001h
TRISA_TRISA7_LENGTH equ 0001h
TRISA_TRISA7_MASK equ 0080h



TRISB equ 0086h

TRISB_TRISB0_POSN equ 0000h
TRISB_TRISB0_POSITION equ 0000h
TRISB_TRISB0_SIZE equ 0001h
TRISB_TRISB0_LENGTH equ 0001h
TRISB_TRISB0_MASK equ 0001h
TRISB_TRISB1_POSN equ 0001h
TRISB_TRISB1_POSITION equ 0001h
TRISB_TRISB1_SIZE equ 0001h
TRISB_TRISB1_LENGTH equ 0001h
TRISB_TRISB1_MASK equ 0002h
TRISB_TRISB2_POSN equ 0002h
TRISB_TRISB2_POSITION equ 0002h
TRISB_TRISB2_SIZE equ 0001h
TRISB_TRISB2_LENGTH equ 0001h
TRISB_TRISB2_MASK equ 0004h
TRISB_TRISB3_POSN equ 0003h
TRISB_TRISB3_POSITION equ 0003h
TRISB_TRISB3_SIZE equ 0001h
TRISB_TRISB3_LENGTH equ 0001h
TRISB_TRISB3_MASK equ 0008h
TRISB_TRISB4_POSN equ 0004h
TRISB_TRISB4_POSITION equ 0004h
TRISB_TRISB4_SIZE equ 0001h
TRISB_TRISB4_LENGTH equ 0001h
TRISB_TRISB4_MASK equ 0010h
TRISB_TRISB5_POSN equ 0005h
TRISB_TRISB5_POSITION equ 0005h
TRISB_TRISB5_SIZE equ 0001h
TRISB_TRISB5_LENGTH equ 0001h
TRISB_TRISB5_MASK equ 0020h
TRISB_TRISB6_POSN equ 0006h
TRISB_TRISB6_POSITION equ 0006h
TRISB_TRISB6_SIZE equ 0001h
TRISB_TRISB6_LENGTH equ 0001h
TRISB_TRISB6_MASK equ 0040h
TRISB_TRISB7_POSN equ 0007h
TRISB_TRISB7_POSITION equ 0007h
TRISB_TRISB7_SIZE equ 0001h
TRISB_TRISB7_LENGTH equ 0001h
TRISB_TRISB7_MASK equ 0080h



TRISC equ 0087h

TRISC_TRISC0_POSN equ 0000h
TRISC_TRISC0_POSITION equ 0000h
TRISC_TRISC0_SIZE equ 0001h
TRISC_TRISC0_LENGTH equ 0001h
TRISC_TRISC0_MASK equ 0001h
TRISC_TRISC1_POSN equ 0001h
TRISC_TRISC1_POSITION equ 0001h
TRISC_TRISC1_SIZE equ 0001h
TRISC_TRISC1_LENGTH equ 0001h
TRISC_TRISC1_MASK equ 0002h
TRISC_TRISC2_POSN equ 0002h
TRISC_TRISC2_POSITION equ 0002h
TRISC_TRISC2_SIZE equ 0001h
TRISC_TRISC2_LENGTH equ 0001h
TRISC_TRISC2_MASK equ 0004h
TRISC_TRISC3_POSN equ 0003h
TRISC_TRISC3_POSITION equ 0003h
TRISC_TRISC3_SIZE equ 0001h
TRISC_TRISC3_LENGTH equ 0001h
TRISC_TRISC3_MASK equ 0008h
TRISC_TRISC4_POSN equ 0004h
TRISC_TRISC4_POSITION equ 0004h
TRISC_TRISC4_SIZE equ 0001h
TRISC_TRISC4_LENGTH equ 0001h
TRISC_TRISC4_MASK equ 0010h
TRISC_TRISC5_POSN equ 0005h
TRISC_TRISC5_POSITION equ 0005h
TRISC_TRISC5_SIZE equ 0001h
TRISC_TRISC5_LENGTH equ 0001h
TRISC_TRISC5_MASK equ 0020h
TRISC_TRISC6_POSN equ 0006h
TRISC_TRISC6_POSITION equ 0006h
TRISC_TRISC6_SIZE equ 0001h
TRISC_TRISC6_LENGTH equ 0001h
TRISC_TRISC6_MASK equ 0040h
TRISC_TRISC7_POSN equ 0007h
TRISC_TRISC7_POSITION equ 0007h
TRISC_TRISC7_SIZE equ 0001h
TRISC_TRISC7_LENGTH equ 0001h
TRISC_TRISC7_MASK equ 0080h



TRISD equ 0088h

TRISD_TRISD0_POSN equ 0000h
TRISD_TRISD0_POSITION equ 0000h
TRISD_TRISD0_SIZE equ 0001h
TRISD_TRISD0_LENGTH equ 0001h
TRISD_TRISD0_MASK equ 0001h
TRISD_TRISD1_POSN equ 0001h
TRISD_TRISD1_POSITION equ 0001h
TRISD_TRISD1_SIZE equ 0001h
TRISD_TRISD1_LENGTH equ 0001h
TRISD_TRISD1_MASK equ 0002h
TRISD_TRISD2_POSN equ 0002h
TRISD_TRISD2_POSITION equ 0002h
TRISD_TRISD2_SIZE equ 0001h
TRISD_TRISD2_LENGTH equ 0001h
TRISD_TRISD2_MASK equ 0004h
TRISD_TRISD3_POSN equ 0003h
TRISD_TRISD3_POSITION equ 0003h
TRISD_TRISD3_SIZE equ 0001h
TRISD_TRISD3_LENGTH equ 0001h
TRISD_TRISD3_MASK equ 0008h
TRISD_TRISD4_POSN equ 0004h
TRISD_TRISD4_POSITION equ 0004h
TRISD_TRISD4_SIZE equ 0001h
TRISD_TRISD4_LENGTH equ 0001h
TRISD_TRISD4_MASK equ 0010h
TRISD_TRISD5_POSN equ 0005h
TRISD_TRISD5_POSITION equ 0005h
TRISD_TRISD5_SIZE equ 0001h
TRISD_TRISD5_LENGTH equ 0001h
TRISD_TRISD5_MASK equ 0020h
TRISD_TRISD6_POSN equ 0006h
TRISD_TRISD6_POSITION equ 0006h
TRISD_TRISD6_SIZE equ 0001h
TRISD_TRISD6_LENGTH equ 0001h
TRISD_TRISD6_MASK equ 0040h
TRISD_TRISD7_POSN equ 0007h
TRISD_TRISD7_POSITION equ 0007h
TRISD_TRISD7_SIZE equ 0001h
TRISD_TRISD7_LENGTH equ 0001h
TRISD_TRISD7_MASK equ 0080h



TRISE equ 0089h

TRISE_TRISE0_POSN equ 0000h
TRISE_TRISE0_POSITION equ 0000h
TRISE_TRISE0_SIZE equ 0001h
TRISE_TRISE0_LENGTH equ 0001h
TRISE_TRISE0_MASK equ 0001h
TRISE_TRISE1_POSN equ 0001h
TRISE_TRISE1_POSITION equ 0001h
TRISE_TRISE1_SIZE equ 0001h
TRISE_TRISE1_LENGTH equ 0001h
TRISE_TRISE1_MASK equ 0002h
TRISE_TRISE2_POSN equ 0002h
TRISE_TRISE2_POSITION equ 0002h
TRISE_TRISE2_SIZE equ 0001h
TRISE_TRISE2_LENGTH equ 0001h
TRISE_TRISE2_MASK equ 0004h
TRISE_TRISE3_POSN equ 0003h
TRISE_TRISE3_POSITION equ 0003h
TRISE_TRISE3_SIZE equ 0001h
TRISE_TRISE3_LENGTH equ 0001h
TRISE_TRISE3_MASK equ 0008h



PIE1 equ 008Ch

PIE1_TMR1IE_POSN equ 0000h
PIE1_TMR1IE_POSITION equ 0000h
PIE1_TMR1IE_SIZE equ 0001h
PIE1_TMR1IE_LENGTH equ 0001h
PIE1_TMR1IE_MASK equ 0001h
PIE1_TMR2IE_POSN equ 0001h
PIE1_TMR2IE_POSITION equ 0001h
PIE1_TMR2IE_SIZE equ 0001h
PIE1_TMR2IE_LENGTH equ 0001h
PIE1_TMR2IE_MASK equ 0002h
PIE1_CCP1IE_POSN equ 0002h
PIE1_CCP1IE_POSITION equ 0002h
PIE1_CCP1IE_SIZE equ 0001h
PIE1_CCP1IE_LENGTH equ 0001h
PIE1_CCP1IE_MASK equ 0004h
PIE1_SSPIE_POSN equ 0003h
PIE1_SSPIE_POSITION equ 0003h
PIE1_SSPIE_SIZE equ 0001h
PIE1_SSPIE_LENGTH equ 0001h
PIE1_SSPIE_MASK equ 0008h
PIE1_TXIE_POSN equ 0004h
PIE1_TXIE_POSITION equ 0004h
PIE1_TXIE_SIZE equ 0001h
PIE1_TXIE_LENGTH equ 0001h
PIE1_TXIE_MASK equ 0010h
PIE1_RCIE_POSN equ 0005h
PIE1_RCIE_POSITION equ 0005h
PIE1_RCIE_SIZE equ 0001h
PIE1_RCIE_LENGTH equ 0001h
PIE1_RCIE_MASK equ 0020h
PIE1_ADIE_POSN equ 0006h
PIE1_ADIE_POSITION equ 0006h
PIE1_ADIE_SIZE equ 0001h
PIE1_ADIE_LENGTH equ 0001h
PIE1_ADIE_MASK equ 0040h



PIE2 equ 008Dh

PIE2_CCP2IE_POSN equ 0000h
PIE2_CCP2IE_POSITION equ 0000h
PIE2_CCP2IE_SIZE equ 0001h
PIE2_CCP2IE_LENGTH equ 0001h
PIE2_CCP2IE_MASK equ 0001h
PIE2_ULPWUIE_POSN equ 0002h
PIE2_ULPWUIE_POSITION equ 0002h
PIE2_ULPWUIE_SIZE equ 0001h
PIE2_ULPWUIE_LENGTH equ 0001h
PIE2_ULPWUIE_MASK equ 0004h
PIE2_BCLIE_POSN equ 0003h
PIE2_BCLIE_POSITION equ 0003h
PIE2_BCLIE_SIZE equ 0001h
PIE2_BCLIE_LENGTH equ 0001h
PIE2_BCLIE_MASK equ 0008h
PIE2_EEIE_POSN equ 0004h
PIE2_EEIE_POSITION equ 0004h
PIE2_EEIE_SIZE equ 0001h
PIE2_EEIE_LENGTH equ 0001h
PIE2_EEIE_MASK equ 0010h
PIE2_C1IE_POSN equ 0005h
PIE2_C1IE_POSITION equ 0005h
PIE2_C1IE_SIZE equ 0001h
PIE2_C1IE_LENGTH equ 0001h
PIE2_C1IE_MASK equ 0020h
PIE2_C2IE_POSN equ 0006h
PIE2_C2IE_POSITION equ 0006h
PIE2_C2IE_SIZE equ 0001h
PIE2_C2IE_LENGTH equ 0001h
PIE2_C2IE_MASK equ 0040h
PIE2_OSFIE_POSN equ 0007h
PIE2_OSFIE_POSITION equ 0007h
PIE2_OSFIE_SIZE equ 0001h
PIE2_OSFIE_LENGTH equ 0001h
PIE2_OSFIE_MASK equ 0080h



PCON equ 008Eh

PCON_nBOR_POSN equ 0000h
PCON_nBOR_POSITION equ 0000h
PCON_nBOR_SIZE equ 0001h
PCON_nBOR_LENGTH equ 0001h
PCON_nBOR_MASK equ 0001h
PCON_nPOR_POSN equ 0001h
PCON_nPOR_POSITION equ 0001h
PCON_nPOR_SIZE equ 0001h
PCON_nPOR_LENGTH equ 0001h
PCON_nPOR_MASK equ 0002h
PCON_SBOREN_POSN equ 0004h
PCON_SBOREN_POSITION equ 0004h
PCON_SBOREN_SIZE equ 0001h
PCON_SBOREN_LENGTH equ 0001h
PCON_SBOREN_MASK equ 0010h
PCON_ULPWUE_POSN equ 0005h
PCON_ULPWUE_POSITION equ 0005h
PCON_ULPWUE_SIZE equ 0001h
PCON_ULPWUE_LENGTH equ 0001h
PCON_ULPWUE_MASK equ 0020h
PCON_nBO_POSN equ 0000h
PCON_nBO_POSITION equ 0000h
PCON_nBO_SIZE equ 0001h
PCON_nBO_LENGTH equ 0001h
PCON_nBO_MASK equ 0001h



OSCCON equ 008Fh

OSCCON_SCS_POSN equ 0000h
OSCCON_SCS_POSITION equ 0000h
OSCCON_SCS_SIZE equ 0001h
OSCCON_SCS_LENGTH equ 0001h
OSCCON_SCS_MASK equ 0001h
OSCCON_LTS_POSN equ 0001h
OSCCON_LTS_POSITION equ 0001h
OSCCON_LTS_SIZE equ 0001h
OSCCON_LTS_LENGTH equ 0001h
OSCCON_LTS_MASK equ 0002h
OSCCON_HTS_POSN equ 0002h
OSCCON_HTS_POSITION equ 0002h
OSCCON_HTS_SIZE equ 0001h
OSCCON_HTS_LENGTH equ 0001h
OSCCON_HTS_MASK equ 0004h
OSCCON_OSTS_POSN equ 0003h
OSCCON_OSTS_POSITION equ 0003h
OSCCON_OSTS_SIZE equ 0001h
OSCCON_OSTS_LENGTH equ 0001h
OSCCON_OSTS_MASK equ 0008h
OSCCON_IRCF_POSN equ 0004h
OSCCON_IRCF_POSITION equ 0004h
OSCCON_IRCF_SIZE equ 0003h
OSCCON_IRCF_LENGTH equ 0003h
OSCCON_IRCF_MASK equ 0070h
OSCCON_IRCF0_POSN equ 0004h
OSCCON_IRCF0_POSITION equ 0004h
OSCCON_IRCF0_SIZE equ 0001h
OSCCON_IRCF0_LENGTH equ 0001h
OSCCON_IRCF0_MASK equ 0010h
OSCCON_IRCF1_POSN equ 0005h
OSCCON_IRCF1_POSITION equ 0005h
OSCCON_IRCF1_SIZE equ 0001h
OSCCON_IRCF1_LENGTH equ 0001h
OSCCON_IRCF1_MASK equ 0020h
OSCCON_IRCF2_POSN equ 0006h
OSCCON_IRCF2_POSITION equ 0006h
OSCCON_IRCF2_SIZE equ 0001h
OSCCON_IRCF2_LENGTH equ 0001h
OSCCON_IRCF2_MASK equ 0040h



OSCTUNE equ 0090h

OSCTUNE_TUN_POSN equ 0000h
OSCTUNE_TUN_POSITION equ 0000h
OSCTUNE_TUN_SIZE equ 0005h
OSCTUNE_TUN_LENGTH equ 0005h
OSCTUNE_TUN_MASK equ 001Fh
OSCTUNE_TUN0_POSN equ 0000h
OSCTUNE_TUN0_POSITION equ 0000h
OSCTUNE_TUN0_SIZE equ 0001h
OSCTUNE_TUN0_LENGTH equ 0001h
OSCTUNE_TUN0_MASK equ 0001h
OSCTUNE_TUN1_POSN equ 0001h
OSCTUNE_TUN1_POSITION equ 0001h
OSCTUNE_TUN1_SIZE equ 0001h
OSCTUNE_TUN1_LENGTH equ 0001h
OSCTUNE_TUN1_MASK equ 0002h
OSCTUNE_TUN2_POSN equ 0002h
OSCTUNE_TUN2_POSITION equ 0002h
OSCTUNE_TUN2_SIZE equ 0001h
OSCTUNE_TUN2_LENGTH equ 0001h
OSCTUNE_TUN2_MASK equ 0004h
OSCTUNE_TUN3_POSN equ 0003h
OSCTUNE_TUN3_POSITION equ 0003h
OSCTUNE_TUN3_SIZE equ 0001h
OSCTUNE_TUN3_LENGTH equ 0001h
OSCTUNE_TUN3_MASK equ 0008h
OSCTUNE_TUN4_POSN equ 0004h
OSCTUNE_TUN4_POSITION equ 0004h
OSCTUNE_TUN4_SIZE equ 0001h
OSCTUNE_TUN4_LENGTH equ 0001h
OSCTUNE_TUN4_MASK equ 0010h



SSPCON2 equ 0091h

SSPCON2_SEN_POSN equ 0000h
SSPCON2_SEN_POSITION equ 0000h
SSPCON2_SEN_SIZE equ 0001h
SSPCON2_SEN_LENGTH equ 0001h
SSPCON2_SEN_MASK equ 0001h
SSPCON2_RSEN_POSN equ 0001h
SSPCON2_RSEN_POSITION equ 0001h
SSPCON2_RSEN_SIZE equ 0001h
SSPCON2_RSEN_LENGTH equ 0001h
SSPCON2_RSEN_MASK equ 0002h
SSPCON2_PEN_POSN equ 0002h
SSPCON2_PEN_POSITION equ 0002h
SSPCON2_PEN_SIZE equ 0001h
SSPCON2_PEN_LENGTH equ 0001h
SSPCON2_PEN_MASK equ 0004h
SSPCON2_RCEN_POSN equ 0003h
SSPCON2_RCEN_POSITION equ 0003h
SSPCON2_RCEN_SIZE equ 0001h
SSPCON2_RCEN_LENGTH equ 0001h
SSPCON2_RCEN_MASK equ 0008h
SSPCON2_ACKEN_POSN equ 0004h
SSPCON2_ACKEN_POSITION equ 0004h
SSPCON2_ACKEN_SIZE equ 0001h
SSPCON2_ACKEN_LENGTH equ 0001h
SSPCON2_ACKEN_MASK equ 0010h
SSPCON2_ACKDT_POSN equ 0005h
SSPCON2_ACKDT_POSITION equ 0005h
SSPCON2_ACKDT_SIZE equ 0001h
SSPCON2_ACKDT_LENGTH equ 0001h
SSPCON2_ACKDT_MASK equ 0020h
SSPCON2_ACKSTAT_POSN equ 0006h
SSPCON2_ACKSTAT_POSITION equ 0006h
SSPCON2_ACKSTAT_SIZE equ 0001h
SSPCON2_ACKSTAT_LENGTH equ 0001h
SSPCON2_ACKSTAT_MASK equ 0040h
SSPCON2_GCEN_POSN equ 0007h
SSPCON2_GCEN_POSITION equ 0007h
SSPCON2_GCEN_SIZE equ 0001h
SSPCON2_GCEN_LENGTH equ 0001h
SSPCON2_GCEN_MASK equ 0080h



PR2 equ 0092h



SSPADD equ 0093h



SSPMSK equ 0093h

SSPMSK_MSK0_POSN equ 0000h
SSPMSK_MSK0_POSITION equ 0000h
SSPMSK_MSK0_SIZE equ 0001h
SSPMSK_MSK0_LENGTH equ 0001h
SSPMSK_MSK0_MASK equ 0001h
SSPMSK_MSK1_POSN equ 0001h
SSPMSK_MSK1_POSITION equ 0001h
SSPMSK_MSK1_SIZE equ 0001h
SSPMSK_MSK1_LENGTH equ 0001h
SSPMSK_MSK1_MASK equ 0002h
SSPMSK_MSK2_POSN equ 0002h
SSPMSK_MSK2_POSITION equ 0002h
SSPMSK_MSK2_SIZE equ 0001h
SSPMSK_MSK2_LENGTH equ 0001h
SSPMSK_MSK2_MASK equ 0004h
SSPMSK_MSK3_POSN equ 0003h
SSPMSK_MSK3_POSITION equ 0003h
SSPMSK_MSK3_SIZE equ 0001h
SSPMSK_MSK3_LENGTH equ 0001h
SSPMSK_MSK3_MASK equ 0008h
SSPMSK_MSK4_POSN equ 0004h
SSPMSK_MSK4_POSITION equ 0004h
SSPMSK_MSK4_SIZE equ 0001h
SSPMSK_MSK4_LENGTH equ 0001h
SSPMSK_MSK4_MASK equ 0010h
SSPMSK_MSK5_POSN equ 0005h
SSPMSK_MSK5_POSITION equ 0005h
SSPMSK_MSK5_SIZE equ 0001h
SSPMSK_MSK5_LENGTH equ 0001h
SSPMSK_MSK5_MASK equ 0020h
SSPMSK_MSK6_POSN equ 0006h
SSPMSK_MSK6_POSITION equ 0006h
SSPMSK_MSK6_SIZE equ 0001h
SSPMSK_MSK6_LENGTH equ 0001h
SSPMSK_MSK6_MASK equ 0040h
SSPMSK_MSK7_POSN equ 0007h
SSPMSK_MSK7_POSITION equ 0007h
SSPMSK_MSK7_SIZE equ 0001h
SSPMSK_MSK7_LENGTH equ 0001h
SSPMSK_MSK7_MASK equ 0080h



SSPSTAT equ 0094h

SSPSTAT_BF_POSN equ 0000h
SSPSTAT_BF_POSITION equ 0000h
SSPSTAT_BF_SIZE equ 0001h
SSPSTAT_BF_LENGTH equ 0001h
SSPSTAT_BF_MASK equ 0001h
SSPSTAT_UA_POSN equ 0001h
SSPSTAT_UA_POSITION equ 0001h
SSPSTAT_UA_SIZE equ 0001h
SSPSTAT_UA_LENGTH equ 0001h
SSPSTAT_UA_MASK equ 0002h
SSPSTAT_R_nW_POSN equ 0002h
SSPSTAT_R_nW_POSITION equ 0002h
SSPSTAT_R_nW_SIZE equ 0001h
SSPSTAT_R_nW_LENGTH equ 0001h
SSPSTAT_R_nW_MASK equ 0004h
SSPSTAT_S_POSN equ 0003h
SSPSTAT_S_POSITION equ 0003h
SSPSTAT_S_SIZE equ 0001h
SSPSTAT_S_LENGTH equ 0001h
SSPSTAT_S_MASK equ 0008h
SSPSTAT_P_POSN equ 0004h
SSPSTAT_P_POSITION equ 0004h
SSPSTAT_P_SIZE equ 0001h
SSPSTAT_P_LENGTH equ 0001h
SSPSTAT_P_MASK equ 0010h
SSPSTAT_D_nA_POSN equ 0005h
SSPSTAT_D_nA_POSITION equ 0005h
SSPSTAT_D_nA_SIZE equ 0001h
SSPSTAT_D_nA_LENGTH equ 0001h
SSPSTAT_D_nA_MASK equ 0020h
SSPSTAT_CKE_POSN equ 0006h
SSPSTAT_CKE_POSITION equ 0006h
SSPSTAT_CKE_SIZE equ 0001h
SSPSTAT_CKE_LENGTH equ 0001h
SSPSTAT_CKE_MASK equ 0040h
SSPSTAT_SMP_POSN equ 0007h
SSPSTAT_SMP_POSITION equ 0007h
SSPSTAT_SMP_SIZE equ 0001h
SSPSTAT_SMP_LENGTH equ 0001h
SSPSTAT_SMP_MASK equ 0080h
SSPSTAT_R_POSN equ 0002h
SSPSTAT_R_POSITION equ 0002h
SSPSTAT_R_SIZE equ 0001h
SSPSTAT_R_LENGTH equ 0001h
SSPSTAT_R_MASK equ 0004h
SSPSTAT_D_POSN equ 0005h
SSPSTAT_D_POSITION equ 0005h
SSPSTAT_D_SIZE equ 0001h
SSPSTAT_D_LENGTH equ 0001h
SSPSTAT_D_MASK equ 0020h
SSPSTAT_I2C_READ_POSN equ 0002h
SSPSTAT_I2C_READ_POSITION equ 0002h
SSPSTAT_I2C_READ_SIZE equ 0001h
SSPSTAT_I2C_READ_LENGTH equ 0001h
SSPSTAT_I2C_READ_MASK equ 0004h
SSPSTAT_I2C_START_POSN equ 0003h
SSPSTAT_I2C_START_POSITION equ 0003h
SSPSTAT_I2C_START_SIZE equ 0001h
SSPSTAT_I2C_START_LENGTH equ 0001h
SSPSTAT_I2C_START_MASK equ 0008h
SSPSTAT_I2C_STOP_POSN equ 0004h
SSPSTAT_I2C_STOP_POSITION equ 0004h
SSPSTAT_I2C_STOP_SIZE equ 0001h
SSPSTAT_I2C_STOP_LENGTH equ 0001h
SSPSTAT_I2C_STOP_MASK equ 0010h
SSPSTAT_I2C_DATA_POSN equ 0005h
SSPSTAT_I2C_DATA_POSITION equ 0005h
SSPSTAT_I2C_DATA_SIZE equ 0001h
SSPSTAT_I2C_DATA_LENGTH equ 0001h
SSPSTAT_I2C_DATA_MASK equ 0020h
SSPSTAT_nW_POSN equ 0002h
SSPSTAT_nW_POSITION equ 0002h
SSPSTAT_nW_SIZE equ 0001h
SSPSTAT_nW_LENGTH equ 0001h
SSPSTAT_nW_MASK equ 0004h
SSPSTAT_nA_POSN equ 0005h
SSPSTAT_nA_POSITION equ 0005h
SSPSTAT_nA_SIZE equ 0001h
SSPSTAT_nA_LENGTH equ 0001h
SSPSTAT_nA_MASK equ 0020h
SSPSTAT_nWRITE_POSN equ 0002h
SSPSTAT_nWRITE_POSITION equ 0002h
SSPSTAT_nWRITE_SIZE equ 0001h
SSPSTAT_nWRITE_LENGTH equ 0001h
SSPSTAT_nWRITE_MASK equ 0004h
SSPSTAT_nADDRESS_POSN equ 0005h
SSPSTAT_nADDRESS_POSITION equ 0005h
SSPSTAT_nADDRESS_SIZE equ 0001h
SSPSTAT_nADDRESS_LENGTH equ 0001h
SSPSTAT_nADDRESS_MASK equ 0020h
SSPSTAT_R_W_POSN equ 0002h
SSPSTAT_R_W_POSITION equ 0002h
SSPSTAT_R_W_SIZE equ 0001h
SSPSTAT_R_W_LENGTH equ 0001h
SSPSTAT_R_W_MASK equ 0004h
SSPSTAT_D_A_POSN equ 0005h
SSPSTAT_D_A_POSITION equ 0005h
SSPSTAT_D_A_SIZE equ 0001h
SSPSTAT_D_A_LENGTH equ 0001h
SSPSTAT_D_A_MASK equ 0020h
SSPSTAT_READ_WRITE_POSN equ 0002h
SSPSTAT_READ_WRITE_POSITION equ 0002h
SSPSTAT_READ_WRITE_SIZE equ 0001h
SSPSTAT_READ_WRITE_LENGTH equ 0001h
SSPSTAT_READ_WRITE_MASK equ 0004h
SSPSTAT_DATA_ADDRESS_POSN equ 0005h
SSPSTAT_DATA_ADDRESS_POSITION equ 0005h
SSPSTAT_DATA_ADDRESS_SIZE equ 0001h
SSPSTAT_DATA_ADDRESS_LENGTH equ 0001h
SSPSTAT_DATA_ADDRESS_MASK equ 0020h



WPUB equ 0095h

WPUB_WPUB_POSN equ 0000h
WPUB_WPUB_POSITION equ 0000h
WPUB_WPUB_SIZE equ 0008h
WPUB_WPUB_LENGTH equ 0008h
WPUB_WPUB_MASK equ 00FFh
WPUB_WPUB0_POSN equ 0000h
WPUB_WPUB0_POSITION equ 0000h
WPUB_WPUB0_SIZE equ 0001h
WPUB_WPUB0_LENGTH equ 0001h
WPUB_WPUB0_MASK equ 0001h
WPUB_WPUB1_POSN equ 0001h
WPUB_WPUB1_POSITION equ 0001h
WPUB_WPUB1_SIZE equ 0001h
WPUB_WPUB1_LENGTH equ 0001h
WPUB_WPUB1_MASK equ 0002h
WPUB_WPUB2_POSN equ 0002h
WPUB_WPUB2_POSITION equ 0002h
WPUB_WPUB2_SIZE equ 0001h
WPUB_WPUB2_LENGTH equ 0001h
WPUB_WPUB2_MASK equ 0004h
WPUB_WPUB3_POSN equ 0003h
WPUB_WPUB3_POSITION equ 0003h
WPUB_WPUB3_SIZE equ 0001h
WPUB_WPUB3_LENGTH equ 0001h
WPUB_WPUB3_MASK equ 0008h
WPUB_WPUB4_POSN equ 0004h
WPUB_WPUB4_POSITION equ 0004h
WPUB_WPUB4_SIZE equ 0001h
WPUB_WPUB4_LENGTH equ 0001h
WPUB_WPUB4_MASK equ 0010h
WPUB_WPUB5_POSN equ 0005h
WPUB_WPUB5_POSITION equ 0005h
WPUB_WPUB5_SIZE equ 0001h
WPUB_WPUB5_LENGTH equ 0001h
WPUB_WPUB5_MASK equ 0020h
WPUB_WPUB6_POSN equ 0006h
WPUB_WPUB6_POSITION equ 0006h
WPUB_WPUB6_SIZE equ 0001h
WPUB_WPUB6_LENGTH equ 0001h
WPUB_WPUB6_MASK equ 0040h
WPUB_WPUB7_POSN equ 0007h
WPUB_WPUB7_POSITION equ 0007h
WPUB_WPUB7_SIZE equ 0001h
WPUB_WPUB7_LENGTH equ 0001h
WPUB_WPUB7_MASK equ 0080h



IOCB equ 0096h

IOCB_IOCB_POSN equ 0000h
IOCB_IOCB_POSITION equ 0000h
IOCB_IOCB_SIZE equ 0008h
IOCB_IOCB_LENGTH equ 0008h
IOCB_IOCB_MASK equ 00FFh
IOCB_IOCB0_POSN equ 0000h
IOCB_IOCB0_POSITION equ 0000h
IOCB_IOCB0_SIZE equ 0001h
IOCB_IOCB0_LENGTH equ 0001h
IOCB_IOCB0_MASK equ 0001h
IOCB_IOCB1_POSN equ 0001h
IOCB_IOCB1_POSITION equ 0001h
IOCB_IOCB1_SIZE equ 0001h
IOCB_IOCB1_LENGTH equ 0001h
IOCB_IOCB1_MASK equ 0002h
IOCB_IOCB2_POSN equ 0002h
IOCB_IOCB2_POSITION equ 0002h
IOCB_IOCB2_SIZE equ 0001h
IOCB_IOCB2_LENGTH equ 0001h
IOCB_IOCB2_MASK equ 0004h
IOCB_IOCB3_POSN equ 0003h
IOCB_IOCB3_POSITION equ 0003h
IOCB_IOCB3_SIZE equ 0001h
IOCB_IOCB3_LENGTH equ 0001h
IOCB_IOCB3_MASK equ 0008h
IOCB_IOCB4_POSN equ 0004h
IOCB_IOCB4_POSITION equ 0004h
IOCB_IOCB4_SIZE equ 0001h
IOCB_IOCB4_LENGTH equ 0001h
IOCB_IOCB4_MASK equ 0010h
IOCB_IOCB5_POSN equ 0005h
IOCB_IOCB5_POSITION equ 0005h
IOCB_IOCB5_SIZE equ 0001h
IOCB_IOCB5_LENGTH equ 0001h
IOCB_IOCB5_MASK equ 0020h
IOCB_IOCB6_POSN equ 0006h
IOCB_IOCB6_POSITION equ 0006h
IOCB_IOCB6_SIZE equ 0001h
IOCB_IOCB6_LENGTH equ 0001h
IOCB_IOCB6_MASK equ 0040h
IOCB_IOCB7_POSN equ 0007h
IOCB_IOCB7_POSITION equ 0007h
IOCB_IOCB7_SIZE equ 0001h
IOCB_IOCB7_LENGTH equ 0001h
IOCB_IOCB7_MASK equ 0080h



VRCON equ 0097h

VRCON_VR_POSN equ 0000h
VRCON_VR_POSITION equ 0000h
VRCON_VR_SIZE equ 0004h
VRCON_VR_LENGTH equ 0004h
VRCON_VR_MASK equ 000Fh
VRCON_VRSS_POSN equ 0004h
VRCON_VRSS_POSITION equ 0004h
VRCON_VRSS_SIZE equ 0001h
VRCON_VRSS_LENGTH equ 0001h
VRCON_VRSS_MASK equ 0010h
VRCON_VRR_POSN equ 0005h
VRCON_VRR_POSITION equ 0005h
VRCON_VRR_SIZE equ 0001h
VRCON_VRR_LENGTH equ 0001h
VRCON_VRR_MASK equ 0020h
VRCON_VROE_POSN equ 0006h
VRCON_VROE_POSITION equ 0006h
VRCON_VROE_SIZE equ 0001h
VRCON_VROE_LENGTH equ 0001h
VRCON_VROE_MASK equ 0040h
VRCON_VREN_POSN equ 0007h
VRCON_VREN_POSITION equ 0007h
VRCON_VREN_SIZE equ 0001h
VRCON_VREN_LENGTH equ 0001h
VRCON_VREN_MASK equ 0080h
VRCON_VR0_POSN equ 0000h
VRCON_VR0_POSITION equ 0000h
VRCON_VR0_SIZE equ 0001h
VRCON_VR0_LENGTH equ 0001h
VRCON_VR0_MASK equ 0001h
VRCON_VR1_POSN equ 0001h
VRCON_VR1_POSITION equ 0001h
VRCON_VR1_SIZE equ 0001h
VRCON_VR1_LENGTH equ 0001h
VRCON_VR1_MASK equ 0002h
VRCON_VR2_POSN equ 0002h
VRCON_VR2_POSITION equ 0002h
VRCON_VR2_SIZE equ 0001h
VRCON_VR2_LENGTH equ 0001h
VRCON_VR2_MASK equ 0004h
VRCON_VR3_POSN equ 0003h
VRCON_VR3_POSITION equ 0003h
VRCON_VR3_SIZE equ 0001h
VRCON_VR3_LENGTH equ 0001h
VRCON_VR3_MASK equ 0008h



TXSTA equ 0098h

TXSTA_TX9D_POSN equ 0000h
TXSTA_TX9D_POSITION equ 0000h
TXSTA_TX9D_SIZE equ 0001h
TXSTA_TX9D_LENGTH equ 0001h
TXSTA_TX9D_MASK equ 0001h
TXSTA_TRMT_POSN equ 0001h
TXSTA_TRMT_POSITION equ 0001h
TXSTA_TRMT_SIZE equ 0001h
TXSTA_TRMT_LENGTH equ 0001h
TXSTA_TRMT_MASK equ 0002h
TXSTA_BRGH_POSN equ 0002h
TXSTA_BRGH_POSITION equ 0002h
TXSTA_BRGH_SIZE equ 0001h
TXSTA_BRGH_LENGTH equ 0001h
TXSTA_BRGH_MASK equ 0004h
TXSTA_SENDB_POSN equ 0003h
TXSTA_SENDB_POSITION equ 0003h
TXSTA_SENDB_SIZE equ 0001h
TXSTA_SENDB_LENGTH equ 0001h
TXSTA_SENDB_MASK equ 0008h
TXSTA_SYNC_POSN equ 0004h
TXSTA_SYNC_POSITION equ 0004h
TXSTA_SYNC_SIZE equ 0001h
TXSTA_SYNC_LENGTH equ 0001h
TXSTA_SYNC_MASK equ 0010h
TXSTA_TXEN_POSN equ 0005h
TXSTA_TXEN_POSITION equ 0005h
TXSTA_TXEN_SIZE equ 0001h
TXSTA_TXEN_LENGTH equ 0001h
TXSTA_TXEN_MASK equ 0020h
TXSTA_TX9_POSN equ 0006h
TXSTA_TX9_POSITION equ 0006h
TXSTA_TX9_SIZE equ 0001h
TXSTA_TX9_LENGTH equ 0001h
TXSTA_TX9_MASK equ 0040h
TXSTA_CSRC_POSN equ 0007h
TXSTA_CSRC_POSITION equ 0007h
TXSTA_CSRC_SIZE equ 0001h
TXSTA_CSRC_LENGTH equ 0001h
TXSTA_CSRC_MASK equ 0080h
TXSTA_TXD8_POSN equ 0000h
TXSTA_TXD8_POSITION equ 0000h
TXSTA_TXD8_SIZE equ 0001h
TXSTA_TXD8_LENGTH equ 0001h
TXSTA_TXD8_MASK equ 0001h
TXSTA_nTX8_POSN equ 0006h
TXSTA_nTX8_POSITION equ 0006h
TXSTA_nTX8_SIZE equ 0001h
TXSTA_nTX8_LENGTH equ 0001h
TXSTA_nTX8_MASK equ 0040h
TXSTA_TX8_9_POSN equ 0006h
TXSTA_TX8_9_POSITION equ 0006h
TXSTA_TX8_9_SIZE equ 0001h
TXSTA_TX8_9_LENGTH equ 0001h
TXSTA_TX8_9_MASK equ 0040h



SPBRG equ 0099h

SPBRG_BRG0_POSN equ 0000h
SPBRG_BRG0_POSITION equ 0000h
SPBRG_BRG0_SIZE equ 0001h
SPBRG_BRG0_LENGTH equ 0001h
SPBRG_BRG0_MASK equ 0001h
SPBRG_BRG1_POSN equ 0001h
SPBRG_BRG1_POSITION equ 0001h
SPBRG_BRG1_SIZE equ 0001h
SPBRG_BRG1_LENGTH equ 0001h
SPBRG_BRG1_MASK equ 0002h
SPBRG_BRG2_POSN equ 0002h
SPBRG_BRG2_POSITION equ 0002h
SPBRG_BRG2_SIZE equ 0001h
SPBRG_BRG2_LENGTH equ 0001h
SPBRG_BRG2_MASK equ 0004h
SPBRG_BRG3_POSN equ 0003h
SPBRG_BRG3_POSITION equ 0003h
SPBRG_BRG3_SIZE equ 0001h
SPBRG_BRG3_LENGTH equ 0001h
SPBRG_BRG3_MASK equ 0008h
SPBRG_BRG4_POSN equ 0004h
SPBRG_BRG4_POSITION equ 0004h
SPBRG_BRG4_SIZE equ 0001h
SPBRG_BRG4_LENGTH equ 0001h
SPBRG_BRG4_MASK equ 0010h
SPBRG_BRG5_POSN equ 0005h
SPBRG_BRG5_POSITION equ 0005h
SPBRG_BRG5_SIZE equ 0001h
SPBRG_BRG5_LENGTH equ 0001h
SPBRG_BRG5_MASK equ 0020h
SPBRG_BRG6_POSN equ 0006h
SPBRG_BRG6_POSITION equ 0006h
SPBRG_BRG6_SIZE equ 0001h
SPBRG_BRG6_LENGTH equ 0001h
SPBRG_BRG6_MASK equ 0040h
SPBRG_BRG7_POSN equ 0007h
SPBRG_BRG7_POSITION equ 0007h
SPBRG_BRG7_SIZE equ 0001h
SPBRG_BRG7_LENGTH equ 0001h
SPBRG_BRG7_MASK equ 0080h



SPBRGH equ 009Ah

SPBRGH_SPBRGH_POSN equ 0000h
SPBRGH_SPBRGH_POSITION equ 0000h
SPBRGH_SPBRGH_SIZE equ 0008h
SPBRGH_SPBRGH_LENGTH equ 0008h
SPBRGH_SPBRGH_MASK equ 00FFh
SPBRGH_BRG8_POSN equ 0000h
SPBRGH_BRG8_POSITION equ 0000h
SPBRGH_BRG8_SIZE equ 0001h
SPBRGH_BRG8_LENGTH equ 0001h
SPBRGH_BRG8_MASK equ 0001h
SPBRGH_BRG9_POSN equ 0001h
SPBRGH_BRG9_POSITION equ 0001h
SPBRGH_BRG9_SIZE equ 0001h
SPBRGH_BRG9_LENGTH equ 0001h
SPBRGH_BRG9_MASK equ 0002h
SPBRGH_BRG10_POSN equ 0002h
SPBRGH_BRG10_POSITION equ 0002h
SPBRGH_BRG10_SIZE equ 0001h
SPBRGH_BRG10_LENGTH equ 0001h
SPBRGH_BRG10_MASK equ 0004h
SPBRGH_BRG11_POSN equ 0003h
SPBRGH_BRG11_POSITION equ 0003h
SPBRGH_BRG11_SIZE equ 0001h
SPBRGH_BRG11_LENGTH equ 0001h
SPBRGH_BRG11_MASK equ 0008h
SPBRGH_BRG12_POSN equ 0004h
SPBRGH_BRG12_POSITION equ 0004h
SPBRGH_BRG12_SIZE equ 0001h
SPBRGH_BRG12_LENGTH equ 0001h
SPBRGH_BRG12_MASK equ 0010h
SPBRGH_BRG13_POSN equ 0005h
SPBRGH_BRG13_POSITION equ 0005h
SPBRGH_BRG13_SIZE equ 0001h
SPBRGH_BRG13_LENGTH equ 0001h
SPBRGH_BRG13_MASK equ 0020h
SPBRGH_BRG14_POSN equ 0006h
SPBRGH_BRG14_POSITION equ 0006h
SPBRGH_BRG14_SIZE equ 0001h
SPBRGH_BRG14_LENGTH equ 0001h
SPBRGH_BRG14_MASK equ 0040h
SPBRGH_BRG15_POSN equ 0007h
SPBRGH_BRG15_POSITION equ 0007h
SPBRGH_BRG15_SIZE equ 0001h
SPBRGH_BRG15_LENGTH equ 0001h
SPBRGH_BRG15_MASK equ 0080h



PWM1CON equ 009Bh

PWM1CON_PDC_POSN equ 0000h
PWM1CON_PDC_POSITION equ 0000h
PWM1CON_PDC_SIZE equ 0007h
PWM1CON_PDC_LENGTH equ 0007h
PWM1CON_PDC_MASK equ 007Fh
PWM1CON_PRSEN_POSN equ 0007h
PWM1CON_PRSEN_POSITION equ 0007h
PWM1CON_PRSEN_SIZE equ 0001h
PWM1CON_PRSEN_LENGTH equ 0001h
PWM1CON_PRSEN_MASK equ 0080h
PWM1CON_PDC0_POSN equ 0000h
PWM1CON_PDC0_POSITION equ 0000h
PWM1CON_PDC0_SIZE equ 0001h
PWM1CON_PDC0_LENGTH equ 0001h
PWM1CON_PDC0_MASK equ 0001h
PWM1CON_PDC1_POSN equ 0001h
PWM1CON_PDC1_POSITION equ 0001h
PWM1CON_PDC1_SIZE equ 0001h
PWM1CON_PDC1_LENGTH equ 0001h
PWM1CON_PDC1_MASK equ 0002h
PWM1CON_PDC2_POSN equ 0002h
PWM1CON_PDC2_POSITION equ 0002h
PWM1CON_PDC2_SIZE equ 0001h
PWM1CON_PDC2_LENGTH equ 0001h
PWM1CON_PDC2_MASK equ 0004h
PWM1CON_PDC3_POSN equ 0003h
PWM1CON_PDC3_POSITION equ 0003h
PWM1CON_PDC3_SIZE equ 0001h
PWM1CON_PDC3_LENGTH equ 0001h
PWM1CON_PDC3_MASK equ 0008h
PWM1CON_PDC4_POSN equ 0004h
PWM1CON_PDC4_POSITION equ 0004h
PWM1CON_PDC4_SIZE equ 0001h
PWM1CON_PDC4_LENGTH equ 0001h
PWM1CON_PDC4_MASK equ 0010h
PWM1CON_PDC5_POSN equ 0005h
PWM1CON_PDC5_POSITION equ 0005h
PWM1CON_PDC5_SIZE equ 0001h
PWM1CON_PDC5_LENGTH equ 0001h
PWM1CON_PDC5_MASK equ 0020h
PWM1CON_PDC6_POSN equ 0006h
PWM1CON_PDC6_POSITION equ 0006h
PWM1CON_PDC6_SIZE equ 0001h
PWM1CON_PDC6_LENGTH equ 0001h
PWM1CON_PDC6_MASK equ 0040h



ECCPAS equ 009Ch

ECCPAS_PSSBD_POSN equ 0000h
ECCPAS_PSSBD_POSITION equ 0000h
ECCPAS_PSSBD_SIZE equ 0002h
ECCPAS_PSSBD_LENGTH equ 0002h
ECCPAS_PSSBD_MASK equ 0003h
ECCPAS_PSSAC_POSN equ 0002h
ECCPAS_PSSAC_POSITION equ 0002h
ECCPAS_PSSAC_SIZE equ 0002h
ECCPAS_PSSAC_LENGTH equ 0002h
ECCPAS_PSSAC_MASK equ 000Ch
ECCPAS_ECCPAS_POSN equ 0004h
ECCPAS_ECCPAS_POSITION equ 0004h
ECCPAS_ECCPAS_SIZE equ 0003h
ECCPAS_ECCPAS_LENGTH equ 0003h
ECCPAS_ECCPAS_MASK equ 0070h
ECCPAS_ECCPASE_POSN equ 0007h
ECCPAS_ECCPASE_POSITION equ 0007h
ECCPAS_ECCPASE_SIZE equ 0001h
ECCPAS_ECCPASE_LENGTH equ 0001h
ECCPAS_ECCPASE_MASK equ 0080h
ECCPAS_PSSBD0_POSN equ 0000h
ECCPAS_PSSBD0_POSITION equ 0000h
ECCPAS_PSSBD0_SIZE equ 0001h
ECCPAS_PSSBD0_LENGTH equ 0001h
ECCPAS_PSSBD0_MASK equ 0001h
ECCPAS_PSSBD1_POSN equ 0001h
ECCPAS_PSSBD1_POSITION equ 0001h
ECCPAS_PSSBD1_SIZE equ 0001h
ECCPAS_PSSBD1_LENGTH equ 0001h
ECCPAS_PSSBD1_MASK equ 0002h
ECCPAS_PSSAC0_POSN equ 0002h
ECCPAS_PSSAC0_POSITION equ 0002h
ECCPAS_PSSAC0_SIZE equ 0001h
ECCPAS_PSSAC0_LENGTH equ 0001h
ECCPAS_PSSAC0_MASK equ 0004h
ECCPAS_PSSAC1_POSN equ 0003h
ECCPAS_PSSAC1_POSITION equ 0003h
ECCPAS_PSSAC1_SIZE equ 0001h
ECCPAS_PSSAC1_LENGTH equ 0001h
ECCPAS_PSSAC1_MASK equ 0008h
ECCPAS_ECCPAS0_POSN equ 0004h
ECCPAS_ECCPAS0_POSITION equ 0004h
ECCPAS_ECCPAS0_SIZE equ 0001h
ECCPAS_ECCPAS0_LENGTH equ 0001h
ECCPAS_ECCPAS0_MASK equ 0010h
ECCPAS_ECCPAS1_POSN equ 0005h
ECCPAS_ECCPAS1_POSITION equ 0005h
ECCPAS_ECCPAS1_SIZE equ 0001h
ECCPAS_ECCPAS1_LENGTH equ 0001h
ECCPAS_ECCPAS1_MASK equ 0020h
ECCPAS_ECCPAS2_POSN equ 0006h
ECCPAS_ECCPAS2_POSITION equ 0006h
ECCPAS_ECCPAS2_SIZE equ 0001h
ECCPAS_ECCPAS2_LENGTH equ 0001h
ECCPAS_ECCPAS2_MASK equ 0040h



PSTRCON equ 009Dh

PSTRCON_STRA_POSN equ 0000h
PSTRCON_STRA_POSITION equ 0000h
PSTRCON_STRA_SIZE equ 0001h
PSTRCON_STRA_LENGTH equ 0001h
PSTRCON_STRA_MASK equ 0001h
PSTRCON_STRB_POSN equ 0001h
PSTRCON_STRB_POSITION equ 0001h
PSTRCON_STRB_SIZE equ 0001h
PSTRCON_STRB_LENGTH equ 0001h
PSTRCON_STRB_MASK equ 0002h
PSTRCON_STRC_POSN equ 0002h
PSTRCON_STRC_POSITION equ 0002h
PSTRCON_STRC_SIZE equ 0001h
PSTRCON_STRC_LENGTH equ 0001h
PSTRCON_STRC_MASK equ 0004h
PSTRCON_STRD_POSN equ 0003h
PSTRCON_STRD_POSITION equ 0003h
PSTRCON_STRD_SIZE equ 0001h
PSTRCON_STRD_LENGTH equ 0001h
PSTRCON_STRD_MASK equ 0008h
PSTRCON_STRSYNC_POSN equ 0004h
PSTRCON_STRSYNC_POSITION equ 0004h
PSTRCON_STRSYNC_SIZE equ 0001h
PSTRCON_STRSYNC_LENGTH equ 0001h
PSTRCON_STRSYNC_MASK equ 0010h



ADRESL equ 009Eh



ADCON1 equ 009Fh

ADCON1_VCFG0_POSN equ 0004h
ADCON1_VCFG0_POSITION equ 0004h
ADCON1_VCFG0_SIZE equ 0001h
ADCON1_VCFG0_LENGTH equ 0001h
ADCON1_VCFG0_MASK equ 0010h
ADCON1_VCFG1_POSN equ 0005h
ADCON1_VCFG1_POSITION equ 0005h
ADCON1_VCFG1_SIZE equ 0001h
ADCON1_VCFG1_LENGTH equ 0001h
ADCON1_VCFG1_MASK equ 0020h
ADCON1_ADFM_POSN equ 0007h
ADCON1_ADFM_POSITION equ 0007h
ADCON1_ADFM_SIZE equ 0001h
ADCON1_ADFM_LENGTH equ 0001h
ADCON1_ADFM_MASK equ 0080h



WDTCON equ 0105h

WDTCON_SWDTEN_POSN equ 0000h
WDTCON_SWDTEN_POSITION equ 0000h
WDTCON_SWDTEN_SIZE equ 0001h
WDTCON_SWDTEN_LENGTH equ 0001h
WDTCON_SWDTEN_MASK equ 0001h
WDTCON_WDTPS_POSN equ 0001h
WDTCON_WDTPS_POSITION equ 0001h
WDTCON_WDTPS_SIZE equ 0004h
WDTCON_WDTPS_LENGTH equ 0004h
WDTCON_WDTPS_MASK equ 001Eh
WDTCON_WDTPS0_POSN equ 0001h
WDTCON_WDTPS0_POSITION equ 0001h
WDTCON_WDTPS0_SIZE equ 0001h
WDTCON_WDTPS0_LENGTH equ 0001h
WDTCON_WDTPS0_MASK equ 0002h
WDTCON_WDTPS1_POSN equ 0002h
WDTCON_WDTPS1_POSITION equ 0002h
WDTCON_WDTPS1_SIZE equ 0001h
WDTCON_WDTPS1_LENGTH equ 0001h
WDTCON_WDTPS1_MASK equ 0004h
WDTCON_WDTPS2_POSN equ 0003h
WDTCON_WDTPS2_POSITION equ 0003h
WDTCON_WDTPS2_SIZE equ 0001h
WDTCON_WDTPS2_LENGTH equ 0001h
WDTCON_WDTPS2_MASK equ 0008h
WDTCON_WDTPS3_POSN equ 0004h
WDTCON_WDTPS3_POSITION equ 0004h
WDTCON_WDTPS3_SIZE equ 0001h
WDTCON_WDTPS3_LENGTH equ 0001h
WDTCON_WDTPS3_MASK equ 0010h



CM1CON0 equ 0107h

CM1CON0_C1CH_POSN equ 0000h
CM1CON0_C1CH_POSITION equ 0000h
CM1CON0_C1CH_SIZE equ 0002h
CM1CON0_C1CH_LENGTH equ 0002h
CM1CON0_C1CH_MASK equ 0003h
CM1CON0_C1R_POSN equ 0002h
CM1CON0_C1R_POSITION equ 0002h
CM1CON0_C1R_SIZE equ 0001h
CM1CON0_C1R_LENGTH equ 0001h
CM1CON0_C1R_MASK equ 0004h
CM1CON0_C1POL_POSN equ 0004h
CM1CON0_C1POL_POSITION equ 0004h
CM1CON0_C1POL_SIZE equ 0001h
CM1CON0_C1POL_LENGTH equ 0001h
CM1CON0_C1POL_MASK equ 0010h
CM1CON0_C1OE_POSN equ 0005h
CM1CON0_C1OE_POSITION equ 0005h
CM1CON0_C1OE_SIZE equ 0001h
CM1CON0_C1OE_LENGTH equ 0001h
CM1CON0_C1OE_MASK equ 0020h
CM1CON0_C1OUT_POSN equ 0006h
CM1CON0_C1OUT_POSITION equ 0006h
CM1CON0_C1OUT_SIZE equ 0001h
CM1CON0_C1OUT_LENGTH equ 0001h
CM1CON0_C1OUT_MASK equ 0040h
CM1CON0_C1ON_POSN equ 0007h
CM1CON0_C1ON_POSITION equ 0007h
CM1CON0_C1ON_SIZE equ 0001h
CM1CON0_C1ON_LENGTH equ 0001h
CM1CON0_C1ON_MASK equ 0080h
CM1CON0_C1CH0_POSN equ 0000h
CM1CON0_C1CH0_POSITION equ 0000h
CM1CON0_C1CH0_SIZE equ 0001h
CM1CON0_C1CH0_LENGTH equ 0001h
CM1CON0_C1CH0_MASK equ 0001h
CM1CON0_C1CH1_POSN equ 0001h
CM1CON0_C1CH1_POSITION equ 0001h
CM1CON0_C1CH1_SIZE equ 0001h
CM1CON0_C1CH1_LENGTH equ 0001h
CM1CON0_C1CH1_MASK equ 0002h



CM2CON0 equ 0108h

CM2CON0_C2CH_POSN equ 0000h
CM2CON0_C2CH_POSITION equ 0000h
CM2CON0_C2CH_SIZE equ 0002h
CM2CON0_C2CH_LENGTH equ 0002h
CM2CON0_C2CH_MASK equ 0003h
CM2CON0_C2R_POSN equ 0002h
CM2CON0_C2R_POSITION equ 0002h
CM2CON0_C2R_SIZE equ 0001h
CM2CON0_C2R_LENGTH equ 0001h
CM2CON0_C2R_MASK equ 0004h
CM2CON0_C2POL_POSN equ 0004h
CM2CON0_C2POL_POSITION equ 0004h
CM2CON0_C2POL_SIZE equ 0001h
CM2CON0_C2POL_LENGTH equ 0001h
CM2CON0_C2POL_MASK equ 0010h
CM2CON0_C2OE_POSN equ 0005h
CM2CON0_C2OE_POSITION equ 0005h
CM2CON0_C2OE_SIZE equ 0001h
CM2CON0_C2OE_LENGTH equ 0001h
CM2CON0_C2OE_MASK equ 0020h
CM2CON0_C2OUT_POSN equ 0006h
CM2CON0_C2OUT_POSITION equ 0006h
CM2CON0_C2OUT_SIZE equ 0001h
CM2CON0_C2OUT_LENGTH equ 0001h
CM2CON0_C2OUT_MASK equ 0040h
CM2CON0_C2ON_POSN equ 0007h
CM2CON0_C2ON_POSITION equ 0007h
CM2CON0_C2ON_SIZE equ 0001h
CM2CON0_C2ON_LENGTH equ 0001h
CM2CON0_C2ON_MASK equ 0080h
CM2CON0_C2CH0_POSN equ 0000h
CM2CON0_C2CH0_POSITION equ 0000h
CM2CON0_C2CH0_SIZE equ 0001h
CM2CON0_C2CH0_LENGTH equ 0001h
CM2CON0_C2CH0_MASK equ 0001h
CM2CON0_C2CH1_POSN equ 0001h
CM2CON0_C2CH1_POSITION equ 0001h
CM2CON0_C2CH1_SIZE equ 0001h
CM2CON0_C2CH1_LENGTH equ 0001h
CM2CON0_C2CH1_MASK equ 0002h



CM2CON1 equ 0109h

CM2CON1_C2SYNC_POSN equ 0000h
CM2CON1_C2SYNC_POSITION equ 0000h
CM2CON1_C2SYNC_SIZE equ 0001h
CM2CON1_C2SYNC_LENGTH equ 0001h
CM2CON1_C2SYNC_MASK equ 0001h
CM2CON1_T1GSS_POSN equ 0001h
CM2CON1_T1GSS_POSITION equ 0001h
CM2CON1_T1GSS_SIZE equ 0001h
CM2CON1_T1GSS_LENGTH equ 0001h
CM2CON1_T1GSS_MASK equ 0002h
CM2CON1_C2RSEL_POSN equ 0004h
CM2CON1_C2RSEL_POSITION equ 0004h
CM2CON1_C2RSEL_SIZE equ 0001h
CM2CON1_C2RSEL_LENGTH equ 0001h
CM2CON1_C2RSEL_MASK equ 0010h
CM2CON1_C1RSEL_POSN equ 0005h
CM2CON1_C1RSEL_POSITION equ 0005h
CM2CON1_C1RSEL_SIZE equ 0001h
CM2CON1_C1RSEL_LENGTH equ 0001h
CM2CON1_C1RSEL_MASK equ 0020h
CM2CON1_MC2OUT_POSN equ 0006h
CM2CON1_MC2OUT_POSITION equ 0006h
CM2CON1_MC2OUT_SIZE equ 0001h
CM2CON1_MC2OUT_LENGTH equ 0001h
CM2CON1_MC2OUT_MASK equ 0040h
CM2CON1_MC1OUT_POSN equ 0007h
CM2CON1_MC1OUT_POSITION equ 0007h
CM2CON1_MC1OUT_SIZE equ 0001h
CM2CON1_MC1OUT_LENGTH equ 0001h
CM2CON1_MC1OUT_MASK equ 0080h



EEDATA equ 010Ch



EEADR equ 010Dh



EEDATH equ 010Eh



EEADRH equ 010Fh



SRCON equ 0185h

SRCON_FVREN_POSN equ 0000h
SRCON_FVREN_POSITION equ 0000h
SRCON_FVREN_SIZE equ 0001h
SRCON_FVREN_LENGTH equ 0001h
SRCON_FVREN_MASK equ 0001h
SRCON_PULSR_POSN equ 0002h
SRCON_PULSR_POSITION equ 0002h
SRCON_PULSR_SIZE equ 0001h
SRCON_PULSR_LENGTH equ 0001h
SRCON_PULSR_MASK equ 0004h
SRCON_PULSS_POSN equ 0003h
SRCON_PULSS_POSITION equ 0003h
SRCON_PULSS_SIZE equ 0001h
SRCON_PULSS_LENGTH equ 0001h
SRCON_PULSS_MASK equ 0008h
SRCON_C2REN_POSN equ 0004h
SRCON_C2REN_POSITION equ 0004h
SRCON_C2REN_SIZE equ 0001h
SRCON_C2REN_LENGTH equ 0001h
SRCON_C2REN_MASK equ 0010h
SRCON_C1SEN_POSN equ 0005h
SRCON_C1SEN_POSITION equ 0005h
SRCON_C1SEN_SIZE equ 0001h
SRCON_C1SEN_LENGTH equ 0001h
SRCON_C1SEN_MASK equ 0020h
SRCON_SR0_POSN equ 0006h
SRCON_SR0_POSITION equ 0006h
SRCON_SR0_SIZE equ 0001h
SRCON_SR0_LENGTH equ 0001h
SRCON_SR0_MASK equ 0040h
SRCON_SR1_POSN equ 0007h
SRCON_SR1_POSITION equ 0007h
SRCON_SR1_SIZE equ 0001h
SRCON_SR1_LENGTH equ 0001h
SRCON_SR1_MASK equ 0080h



BAUDCTL equ 0187h

BAUDCTL_ABDEN_POSN equ 0000h
BAUDCTL_ABDEN_POSITION equ 0000h
BAUDCTL_ABDEN_SIZE equ 0001h
BAUDCTL_ABDEN_LENGTH equ 0001h
BAUDCTL_ABDEN_MASK equ 0001h
BAUDCTL_WUE_POSN equ 0001h
BAUDCTL_WUE_POSITION equ 0001h
BAUDCTL_WUE_SIZE equ 0001h
BAUDCTL_WUE_LENGTH equ 0001h
BAUDCTL_WUE_MASK equ 0002h
BAUDCTL_BRG16_POSN equ 0003h
BAUDCTL_BRG16_POSITION equ 0003h
BAUDCTL_BRG16_SIZE equ 0001h
BAUDCTL_BRG16_LENGTH equ 0001h
BAUDCTL_BRG16_MASK equ 0008h
BAUDCTL_SCKP_POSN equ 0004h
BAUDCTL_SCKP_POSITION equ 0004h
BAUDCTL_SCKP_SIZE equ 0001h
BAUDCTL_SCKP_LENGTH equ 0001h
BAUDCTL_SCKP_MASK equ 0010h
BAUDCTL_RCIDL_POSN equ 0006h
BAUDCTL_RCIDL_POSITION equ 0006h
BAUDCTL_RCIDL_SIZE equ 0001h
BAUDCTL_RCIDL_LENGTH equ 0001h
BAUDCTL_RCIDL_MASK equ 0040h
BAUDCTL_ABDOVF_POSN equ 0007h
BAUDCTL_ABDOVF_POSITION equ 0007h
BAUDCTL_ABDOVF_SIZE equ 0001h
BAUDCTL_ABDOVF_LENGTH equ 0001h
BAUDCTL_ABDOVF_MASK equ 0080h



ANSEL equ 0188h

ANSEL_ANS0_POSN equ 0000h
ANSEL_ANS0_POSITION equ 0000h
ANSEL_ANS0_SIZE equ 0001h
ANSEL_ANS0_LENGTH equ 0001h
ANSEL_ANS0_MASK equ 0001h
ANSEL_ANS1_POSN equ 0001h
ANSEL_ANS1_POSITION equ 0001h
ANSEL_ANS1_SIZE equ 0001h
ANSEL_ANS1_LENGTH equ 0001h
ANSEL_ANS1_MASK equ 0002h
ANSEL_ANS2_POSN equ 0002h
ANSEL_ANS2_POSITION equ 0002h
ANSEL_ANS2_SIZE equ 0001h
ANSEL_ANS2_LENGTH equ 0001h
ANSEL_ANS2_MASK equ 0004h
ANSEL_ANS3_POSN equ 0003h
ANSEL_ANS3_POSITION equ 0003h
ANSEL_ANS3_SIZE equ 0001h
ANSEL_ANS3_LENGTH equ 0001h
ANSEL_ANS3_MASK equ 0008h
ANSEL_ANS4_POSN equ 0004h
ANSEL_ANS4_POSITION equ 0004h
ANSEL_ANS4_SIZE equ 0001h
ANSEL_ANS4_LENGTH equ 0001h
ANSEL_ANS4_MASK equ 0010h
ANSEL_ANS5_POSN equ 0005h
ANSEL_ANS5_POSITION equ 0005h
ANSEL_ANS5_SIZE equ 0001h
ANSEL_ANS5_LENGTH equ 0001h
ANSEL_ANS5_MASK equ 0020h
ANSEL_ANS6_POSN equ 0006h
ANSEL_ANS6_POSITION equ 0006h
ANSEL_ANS6_SIZE equ 0001h
ANSEL_ANS6_LENGTH equ 0001h
ANSEL_ANS6_MASK equ 0040h
ANSEL_ANS7_POSN equ 0007h
ANSEL_ANS7_POSITION equ 0007h
ANSEL_ANS7_SIZE equ 0001h
ANSEL_ANS7_LENGTH equ 0001h
ANSEL_ANS7_MASK equ 0080h



ANSELH equ 0189h

ANSELH_ANS8_POSN equ 0000h
ANSELH_ANS8_POSITION equ 0000h
ANSELH_ANS8_SIZE equ 0001h
ANSELH_ANS8_LENGTH equ 0001h
ANSELH_ANS8_MASK equ 0001h
ANSELH_ANS9_POSN equ 0001h
ANSELH_ANS9_POSITION equ 0001h
ANSELH_ANS9_SIZE equ 0001h
ANSELH_ANS9_LENGTH equ 0001h
ANSELH_ANS9_MASK equ 0002h
ANSELH_ANS10_POSN equ 0002h
ANSELH_ANS10_POSITION equ 0002h
ANSELH_ANS10_SIZE equ 0001h
ANSELH_ANS10_LENGTH equ 0001h
ANSELH_ANS10_MASK equ 0004h
ANSELH_ANS11_POSN equ 0003h
ANSELH_ANS11_POSITION equ 0003h
ANSELH_ANS11_SIZE equ 0001h
ANSELH_ANS11_LENGTH equ 0001h
ANSELH_ANS11_MASK equ 0008h
ANSELH_ANS12_POSN equ 0004h
ANSELH_ANS12_POSITION equ 0004h
ANSELH_ANS12_SIZE equ 0001h
ANSELH_ANS12_LENGTH equ 0001h
ANSELH_ANS12_MASK equ 0010h
ANSELH_ANS13_POSN equ 0005h
ANSELH_ANS13_POSITION equ 0005h
ANSELH_ANS13_SIZE equ 0001h
ANSELH_ANS13_LENGTH equ 0001h
ANSELH_ANS13_MASK equ 0020h



EECON1 equ 018Ch

EECON1_RD_POSN equ 0000h
EECON1_RD_POSITION equ 0000h
EECON1_RD_SIZE equ 0001h
EECON1_RD_LENGTH equ 0001h
EECON1_RD_MASK equ 0001h
EECON1_WR_POSN equ 0001h
EECON1_WR_POSITION equ 0001h
EECON1_WR_SIZE equ 0001h
EECON1_WR_LENGTH equ 0001h
EECON1_WR_MASK equ 0002h
EECON1_WREN_POSN equ 0002h
EECON1_WREN_POSITION equ 0002h
EECON1_WREN_SIZE equ 0001h
EECON1_WREN_LENGTH equ 0001h
EECON1_WREN_MASK equ 0004h
EECON1_WRERR_POSN equ 0003h
EECON1_WRERR_POSITION equ 0003h
EECON1_WRERR_SIZE equ 0001h
EECON1_WRERR_LENGTH equ 0001h
EECON1_WRERR_MASK equ 0008h
EECON1_EEPGD_POSN equ 0007h
EECON1_EEPGD_POSITION equ 0007h
EECON1_EEPGD_SIZE equ 0001h
EECON1_EEPGD_LENGTH equ 0001h
EECON1_EEPGD_MASK equ 0080h



EECON2 equ 018Dh
# 2816 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\proc\\pic16f887.inc" 3
psect udata_shr,class=COMMON,space=1,noexec
psect udata,class=RAM,space=1,noexec
psect udata_bank0,class=BANK0,space=1,noexec
psect udata_bank1,class=BANK1,space=1,noexec
psect udata_bank2,class=BANK2,space=1,noexec
psect udata_bank3,class=BANK3,space=1,noexec
psect code,class=CODE,space=0,delta=2
psect data,class=STRCODE,space=0,delta=2,noexec
psect edata,class=EEDATA,space=3,delta=2,noexec
# 2734 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\pic_as_chip_select.inc" 2 3
# 4 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\pic.inc" 2 3




stk_offset SET 0
auto_size SET 0


; stack_auto defines a symbol /name/_offset which equates to the
; stack offset of the auto object in question

stack_auto MACRO name, size
name&_offset EQU stk_offset-size
stk_offset SET name&_offset
auto_size SET -stk_offset
ENDM


; stack_param defines a symbol /name/_offset which equates to the
; stack offset of the parameter object in question

stack_param MACRO name, size
name&_offset EQU stk_offset-size
stk_offset SET name&_offset
ENDM


; alloc_stack adjusts the SP to allocate space for auto objects
; it also links in to the btemp symbol so that can be used

alloc_stack MACRO
GLOBAL btemp
addfsr FSR1,auto_size
ENDM


; restore_stack adjusts the SP to remove all auto and parameter
; objects from the stack prior to returning from a function

restore_stack MACRO
addfsr FSR1,stk_offset
stk_offset SET 0
auto_size SET 0
ENDM
# 7 "C:\\Program Files\\Microchip\\xc8\\v2.31\\pic\\include\\xc.inc" 2 3
# 18 "proyecto1.s" 2

;CONFIGURATION WORD 1
CONFIG FOSC=INTRC_NOCLKOUT;Oscilador interno sin salida
CONFIG WDTE=OFF ;Reinicio repetitivo del pic
CONFIG PWRTE=ON ;espera de 72 ms al iniciar el pic
CONFIG MCLRE=OFF ;El pin MCLR se utiliza como entrada/salida
CONFIG CP=OFF ;Sin protecci√≥n de c√≥digo
CONFIG CPD=OFF ;Sin protecci√≥n de datos

CONFIG BOREN=OFF ;Sin reinicio cuando el input voltage es inferior a 4V
CONFIG IESO=OFF ;Reinicio sin cambio de reloj de interno a externo
CONFIG FCMEN=OFF ;Cambio de reloj externo a interno en caso de fallas
CONFIG LVP=ON ;Programaci√≥n en low voltage permitida

;CONFIGURATION WORD 2
CONFIG WRT=OFF ;Proteccion de autoescritura por el programa desactivada
CONFIG BOR4V=BOR40V ;Reinicio abajo de 4V
;----------------------variables a usar-----------------------------------------
PSECT udata_bank0 ;variable para:
    banderas: DS 1 ;activar cada display
    bestados: DS 1 ;boton presionado
    estadvar: DS 1 ;identificar el modo actual
    semaforo: DS 1 ;variable temp para modificar el valor en verde del sem
    numerador: DS 1 ;almacenar el valor de las unidades
    cocientedec: DS 1 ;almacenar el valor de las decenas
    dispconf0: DS 1 ;dos displays de configuracion
    dispconf1: DS 1
    dispdecsem0: DS 1 ;decenas para display de cada via
    dispdecsem1: DS 1
    dispdecsem2: DS 1
    dispnumsem0: DS 1 ;unidades para display de cada via
    dispnumsem1: DS 1
    dispnumsem2: DS 1
    sem0: DS 1 ;tiempo restante de cada semaforo
    sem1: DS 1
    sem2: DS 1
    redsem0: DS 1 ;tiempo de cada semaforo en rojo
    redsem1: DS 1
    redsem2: DS 1
    gresem0: DS 1 ;tiempo de cada semaforo en verde
    gresem1: DS 1
    gresem2: DS 1
    config0: DS 1 ;tiempo de configuracion de duracion de verde de cada
    config1: DS 1 ;semaforo
    config2: DS 1
    configmisc: DS 1 ;comodin para guardar variable temporal de configuracion
    togglevar: DS 1 ;toggle para intercambiar entre tiempo en verde y tiempo
    togglevar1: DS 1 ;en rojo de cada semaforo
    togglevar2: DS 1
    bandactual: DS 1 ;para cargar los valores correctos luego de un reset
    contcomp: DS 1 ;contador que se compara con el valor en verde del sem0
    yelsign: DS 1 ;bandera para semaforos amarillos
    cont_big: DS 1 ;variables para elaborar un delay de cerca de 1 s
    cont_small: DS 1
    cont_mini: DS 1
    titila: DS 1 ;toggle para titileo cada 250 ms
    bandi: DS 1 ;bandera para comenzar titileo cuando falten 6s en verde
PSECT udata_shr ;memoria compartida
    w_temp: DS 1; variable para guardar w temporalmente
    s_temp: DS 1; variable para guardar status temporalmente
    sevseg: DS 1; Variable para el 7 seg del contador

;---------------instrucciones vector reset--------------------------------------
PSECT resVect, class=CODE, abs, delta=2
;---------------------------------vector reset----------------------------------
ORG 00h
resetVec:
    PAGESEL main
    goto main
;----------------vector de interrupciones---------------------------------------
PSECT intVect, class = CODE, abs, delta = 2
ORG 04h
push:
    movwf w_temp ;guardar w en una variable temporal
    swapf STATUS, w
    movwf s_temp

isr:
    btfsc ((INTCON) and 07Fh), 0 ;chequear la bandera de la interrupcion por cambio
    call int_ocb ;llama a la subrutina del boton
    btfsc ((INTCON) and 07Fh), 2 ;chequear la bandera de la interrupcion del tmr0
    call int_tmr0 ;llama a la subrutina del tmr0
    btfsc ((PIR1) and 07Fh), 0 ;chequear la bandera de la interrupcion del tmr1
    call int_tmr1 ;llama a la suburutina del tmr1
    btfsc ((PIR1) and 07Fh), 1 ;chequear la bandera de la interrupcion del tmr2
    call int_tmr2 ;llama a la subrutina de la interrupcion del tmr2

pop:
    swapf s_temp, w ;regresar el w temporal a w
    movwf STATUS ;y regresar status temporal a status
    swapf w_temp, f
    swapf w_temp, w
    retfie

;---------------configuracion del micro-----------------------------------------
PSECT code, delta=2, abs
ORG 100h
tabla: ;7 segmentos
    clrf PCLATH
    bsf PCLATH, 0 ; PCLATH = 01 y PCL = 02
    andlw 0x0F ; se pone como limite F
    addwf PCL ; PCL = PCLATH + PCL + W
    retlw 00111111B ; 0
    retlw 00000110B ; 1
    retlw 01011011B ; 2
    retlw 01001111B ; 3
    retlw 01100110B ; 4
    retlw 01101101B ; 5
    retlw 01111101B ; 6
    retlw 00000111B ; 7
    retlw 01111111B ; 8
    retlw 01101111B ; 9
    retlw 01110111B ; A
    retlw 01111100B ; b
    retlw 00111001B ; C
    retlw 01011110B ; d
    retlw 01111001B ; E
    retlw 01110001B ; F

main:
    call config_reloj ;se configura el reloj
    call config_io ;((PORTB) and 07Fh), 0, ((PORTB) and 07Fh), 1 y ((PORTB) and 07Fh), 2 in y puertos A, C, D y E out
    call config_iocb ;configuracion del interrupt on change
    call config_inten ;se configura el habilitador de interrupciones
    call config_tmr0 ;se configura el tmr0
    call config_tmr1 ;se configura el tmr1
    call config_tmr2 ;se configura el tmr2
    bsf banderas, 0 ;se inicializa el primer display
    movlw 10 ;se inicializan los tiempos de configuracion en verde
    movwf config0 ;con un valor de 10s
    movwf config1
    movwf config2
    call aceptar ;se hace un reset
    movlw 0 ;se inicializa el toggle del semaforo 1 en 0 y los
    movwf togglevar ;demas en 1
    movlw 1
    movwf togglevar1
    movwf togglevar2
    movwf titila
    clrf bandi ;se limpia la bandera de titileo

;---------------------------loop principal--------------------------------------
loop:
    btfsc bestados, 0 ;se chequea si se presiono el boton de modo
    call selestado
    call modos ;se chequea constantemente el modo en el que esta

    bcf STATUS, 2
    btfss yelsign, 0 ;se compara el tiempo de semaforo0 cuando esta en verde
    goto $+14 ;y cuando falten 6s levanta la bandera de titileo de
    movlw 6 ;primer semaforo
    subwf sem0, w
    btfss STATUS, 2
    goto $+2
    bsf bandi, 0

    bcf STATUS, 2 ;se compara el tiempo de semaforo0 cuando esta en verde
    movlw 3 ;y cuando falten 3s se apaga el verde titilante y se
    subwf sem0, w ;enciende el amarillo
    btfss STATUS, 2
    goto $+4
    bcf bandi, 0
    bsf PORTC, 1
    bcf PORTC, 2

    bcf STATUS, 2 ;se compara el tiempo de semaforo1 cuando esta en verde
    btfss yelsign, 1 ;y cuando falten 6s levanta la bandera de titileo de
    goto $+14 ;segundo semaforo
    movlw 6
    subwf sem1, w
    btfss STATUS, 2
    goto $+2
    bsf bandi, 1

    bcf STATUS, 2 ;se compara el tiempo de semaforo1 cuando esta en verde
    movlw 3 ;y cuando falten 3s se apaga el verde titilante y se
    subwf sem1, w ;enciende el amarillo
    btfss STATUS, 2
    goto $+4
    bcf bandi, 1
    bsf PORTC, 4
    bcf PORTC, 5

    bcf STATUS, 2 ;se compara el tiempo de semaforo2 cuando esta en verde
    btfss yelsign, 2 ;y cuando falten 6s levanta la bandera de titileo de
    goto $+14 ;tercer semaforo
    movlw 6
    subwf sem2, w
    btfss STATUS, 2
    goto $+2
    bsf bandi, 2

    bcf STATUS, 2 ;se compara el tiempo de semaforo1 cuando esta en verde
    movlw 3 ;y cuando falten 3s se apaga el verde titilante y se
    subwf sem2, w ;enciende el amarillo
    btfss STATUS, 2
    goto $+4
    bcf bandi, 2
    bsf PORTC, 7
    bcf PORTE, 0
    goto loop
;-------------------subrutinas de interrupcion----------------------------------

;subrutina de interrupcion de boton presionado
int_ocb:
    banksel PORTB
    btfss PORTB, 0 ;antirebote boton modos
    bsf bestados, 0
    btfss PORTB, 1 ;antirebote boton subir
    bsf bestados, 1
    btfss PORTB, 2 ;antirebote boton bajar
    bsf bestados, 2
    bcf ((INTCON) and 07Fh), 0 ;limpieza de bandera de interrupt on change
    return

;subrutina de interrupcion de tmr0 (ocurre cada 10ms)
int_tmr0:
    banksel PORTA
    call rst_tmr0 ;se resetea el tmr0
    clrf PORTD ;se limpia el puerto D (para los transistores)
    btfsc banderas, 0;se van chequeando cada una de las banderas y si no se han
    goto display0 ; levantado entonces se enciende el display especifico
    btfsc banderas, 1
    goto display1
    btfsc banderas, 2
    goto display2
    btfsc banderas, 3
    goto display3
    btfsc banderas, 4
    goto display4
    btfsc banderas, 5
    goto display5
    btfsc banderas, 6
    goto display6
    btfsc banderas, 7
    goto display7

;los displays se encienden con las banderas asi: se apaga la bandera del display
;encendido actualmente y se enciende la bandera del siguiente display

;display de decenas de configuracion
display0:
    movf dispconf1, w ;se enciende el disp de decenas de config
    movwf PORTA
    bsf PORTD, 0 ;se activa el transistor que enciende dicho display
    bcf banderas, 0 ;se apaga la bandera del display actual
    bsf banderas, 1 ;y se enciende la del siguiente display
    return

;display de unidades de configuracion
display1:
    movf dispconf0, w ;se enciende el disp de unidades de config
    movwf PORTA
    bsf PORTD, 1 ;se activa el transistor que enciende dicho display
    bcf banderas, 1 ;se apaga la bandera del display actual
    bsf banderas, 2 ;y se enciende la del siguiente display
    return

;display de decenas de semaforo0
display2:
    movf dispdecsem0, w ;se enciende el disp de decenas 0
    movwf PORTA
    bsf PORTD, 2 ;se activa el transistor que enciende dicho display
    bcf banderas, 2 ;se apaga la bandera del display actual
    bsf banderas, 3 ;y se enciende la del siguiente display
    return

;display de unidades de semaforo0
display3:
    movf dispnumsem0, w ;se enciende el disp de unidades 0
    movwf PORTA
    bsf PORTD, 3
    bcf banderas, 3 ;se repite lo mismo que en el disp2 para encender disp3
    bsf banderas, 4
    return

;display de decenas de semaforo1
display4:
    movf dispdecsem1, w ;se enciende el disp de decenas 1
    movwf PORTA
    bsf PORTD, 4
    bcf banderas, 4 ;se repite lo mismo que en el disp3 pero para el disp4
    bsf banderas, 5
    return

;display de unidades de semaforo1
display5:
    movf dispnumsem1, w ;se enciende el disp de unidades 1
    movwf PORTA
    bsf PORTD, 5
    bcf banderas, 5 ;se repite lo mismo que en el disp4 pero para el disp5
    bsf banderas, 6
    return

;display de decenas de semaforo2
display6:
    movf dispdecsem2, w ;se enciende el disp de decenas 2
    movwf PORTA
    bsf PORTD, 6
    bcf banderas, 6 ;se repite lo mismo que en el disp5 pero para el disp6
    bsf banderas, 7
    return

;display de unidades de semaforo2
display7:
    movf dispnumsem2, w ;se enciende el display con la posicion de las unidades
    movwf PORTA
    bsf PORTD, 7
    bcf banderas, 7 ;se repite lo mismo que en el disp6 pero para el disp7
    bsf banderas, 0
    return

;subrutina de interrupcion del tmr1 (ocurre cada 1s)
int_tmr1:
    banksel PORTA
    call rst_tmr1

    ;actualizacion del semaforo0
    decf sem0 ;se decrementa en 1 segundo el valor actual del semaforo0

    bcf STATUS, 2 ;se compara el valor actual del semaforo0 y si es igual a
    movlw 0 ;0 entonces se carga el valor del siguiente tiempo
    subwf sem0 , w ;(oscila entre tiempo en verde y tiempo en rojo cada
    btfss STATUS, 2 ;underflow
    goto $+7
    incf togglevar ;toggle del semaforo0 (ocurre cada underflow)
    btfsc togglevar, 0 ;si el primer toggle es 1 el primer semaforo pasa a
    call luzroja0 ;estado en rojo
    btfss togglevar, 0 ;si el primer toggle es 0 el primer semaforo pasa a
    call luzverde0 ;estado en verde
    movwf sem0 ;dependiendo del primer toggle se carga un valor verde
                         ;o rojo al semaforo0

    ;actualizacion del semaforo1
    decf sem1 ;se decrementa en 1 segundo el valor actual del semaforo1

    bcf STATUS, 2 ;se repite el procedimiento del semaforo0 pero para el
    movlw 0 ;semaforo1 usando la segunda variable de toggle
    subwf sem1 , w
    btfss STATUS, 2
    goto $+7
    incf togglevar1
    btfsc togglevar1, 0
    call luzroja1
    btfss togglevar1, 0
    call luzverde1
    movwf sem1

    ;actualizacion del semaforo2
    decf sem2 ;funciona igual que el semaforo1 y semaforo0
    bcf STATUS, 2
    movlw 0
    subwf sem2 , w
    btfss STATUS, 2
    goto $+7
    incf togglevar2
    btfsc togglevar2, 0
    call luzroja2
    btfss togglevar2, 0
    call luzverde2
    movwf sem2

    ;primera corrida luego de aceptar cambios
    bcf STATUS, 2
    btfss bandactual, 0 ;se chequea la bandera de la primera corrida
    goto $+11
    movf gresem0, w ;se compara el tiempo en verde con un contador
    subwf contcomp, w ;que comienza luego de aceptar cambios
    btfss STATUS, 2
    goto $+3
    incf contcomp ;se incrementa contador
    goto $+5
    movf gresem0, w ;se actualiza el valor en rojo1 para el funcionamiento
    addwf gresem2, w ;general del semaforo luego de la primera corrida
    movwf redsem1 ;luego de aceptar cambios
    bcf bandactual, 0 ;se limpia la bandera de la primera corrida
    return

;modo rojo semaforo0
luzroja0:
    movf redsem0, w ;se actualiza w con el valor en rojo del semaforo0
    bsf PORTC, 0 ;se enciende el rojo
    bcf PORTC, 1 ;se apaga el amarillo
    bcf PORTC, 2 ;se apaga el verde
    bcf yelsign, 0 ;se apaga la bandera de que el semaforo0 esta en verde
    return

luzroja1:
    movf redsem1, w ;se actualiza w con el valor en rojo del semaforo1
    bsf PORTC, 3 ;se enciende el rojo
    bcf PORTC, 4 ;se apaga el amarillo
    bcf PORTC, 5 ;se apaga el verde
    bcf yelsign, 1 ;se apaga la bandera de que el semaforo1 esta en verde
    return

luzroja2:
    movf redsem2, w ;se actualiza w con el valor en rojo del semaforo2
    bsf PORTC, 6 ;se enciende el rojo
    bcf PORTC, 7 ;se apaga el amarillo
    bcf PORTE, 0 ;se apaga el verde
    bcf yelsign, 2 ;se apaga la bandera de que el semaforo2 esta en verde
    return

luzverde0:
    movf gresem0, w ;se actualiza w con el valor en verde del semaforo0
    bcf PORTC, 0 ;se enciende el rojo
    bcf PORTC, 1 ;se apaga el amarillo
    bsf PORTC, 2 ;se apaga el verde
    bsf yelsign, 0 ;se enciende la bandera de que el semaforo0 esta en verde
    return

luzverde1:
    movf gresem1, w ;se actualiza w con el valor en verde del semaforo1
    bcf PORTC, 3 ;se enciende el rojo
    bcf PORTC, 4 ;se apaga el amarillo
    bsf PORTC, 5 ;se apaga el verde
    bsf yelsign, 1 ;se enciende la bandera de que el semaforo1 esta en verde
    return

luzverde2:
    movf gresem2, w ;se actualiza w con el valor en verde del semaforo1
    bcf PORTC, 6 ;se enciende el rojo
    bcf PORTC, 7 ;se apaga el amarillo
    bsf PORTE, 0 ;se apaga el verde
    bsf yelsign, 2 ;se enciende la bandera de que el semaforo2 esta en verde
    return

;Interrupcion del timer 2 (cada 250ms)
int_tmr2:
    banksel PIR1
    incf titila ;se incrementa el puerto D cada 250 ms (toggle cada 250ms)
    btfss bandi, 0 ;se chequea la bandera de titileo de semaforo0
    goto $+2
    goto titi0 ;titileo de verde en semaforo0
    btfss bandi, 1 ;se chequea la bandera de titileo de semaforo1
    goto $+2
    goto titi1 ;titileo de verde en semaforo1
    btfss bandi, 2 ;se chequea la bandera de titileo de semaforo2
    goto $+2
    goto titi2 ;titileo de verde en semaforo2
    bcf ((PIR1) and 07Fh), 1 ;se limpia la bandera de interrupcion del timer 2
    return


titi0:
    btfsc titila, 0 ;se chequea el toggle de titileo y si es 0 se apaga el sem0
    goto vertiti0 ;si es 1 se enciende el led
    bcf PORTC, 2 ;se apaga el verde
    bcf ((PIR1) and 07Fh), 1 ;se limpia la bandera de interrupcion del timer 2
    return

titi1:
    btfsc titila, 0 ;funciona igual que titi0 pero para el semaforo1
    goto vertiti1
    bcf PORTC, 5
    bcf ((PIR1) and 07Fh), 1
    return

titi2:
    btfsc titila, 0 ;funciona igual que titi0 pero para el semaforo2
    goto vertiti2
    bcf PORTE, 0
    bcf ((PIR1) and 07Fh), 1
    return

vertiti0:
    bsf PORTC, 2 ;se enciende el verde0
    bcf ((PIR1) and 07Fh), 1 ;limpia bandera de interrupcion de tmr2
    return

vertiti1:
    bsf PORTC, 5 ;se enciende el verde1
    bcf ((PIR1) and 07Fh), 1 ;limpia bandera de interrupcion de tmr2
    return

vertiti2:
    bsf PORTE, 0 ;se enciende el verde2
    bcf ((PIR1) and 07Fh), 1 ;limpia bandera de interrupcion de tmr2
    return

;---------------------subrutinas------------------------------------------------
selestado:
    banksel PORTA
    incf estadvar ;si se presiono el boton de modo se incrementa la bandera
    bcf STATUS, 2 ;de modo y se loopea de 0 a 4
    movlw 5
    subwf estadvar, w
    btfss STATUS, 2
    goto $+3
    movlw 0
    movwf estadvar
    bcf bestados, 0; se limpia la bandera del boton modos
    return

subir:
    banksel PORTA
    incf semaforo ;se incrementa bandera temporal de semaforo en config
    bcf STATUS, 2 ;se compara si es igual a 21 entonces se hace
    movlw 21 ;overflow y loopea a 10
    subwf semaforo , w
    btfss STATUS, 2
    goto $+3
    movlw 10
    movwf semaforo
    bcf bestados, 1 ;se limpia la bandera de boton subir
    return

bajar:
    banksel PORTA
    decf semaforo ;se incrementa bandera temporal de semaforo en config
    bcf STATUS, 2 ;se compara si es igual a 9 entonces se hace underflow
    movlw 9 ;y loopea a 20
    subwf semaforo , w
    btfss STATUS, 2
    goto $+3
    movlw 20
    movwf semaforo
    bcf bestados, 2
    return

division: ;operacion de division mediante resta
    clrf cocientedec ;unidades
    clrf numerador
    bcf STATUS, 0 ;se limpia la bandera de carry
    movwf numerador ;numerador
    movlw 10 ;se mueve 10 al denominador
    incf cocientedec ;se incrementa la variable de decenas
    subwf numerador, f ;se resta 10 al numerador
    btfsc STATUS, 0 ;se chequea la bandera de carry y si no se alter√≥ entonces
    goto $-3 ;se repite el procedimiento hasta que la resta de un resultado <= 0
    decf cocientedec ;se decrementa la variable de decenas en 1
    addwf numerador ;se suma 10 al numerador
    return

modos:
    banksel PORTA ;se va comparando (mediante bandera cero)la variable de
    bcf STATUS, 2 ;estadvar que indica el modo y dependiendo del numero en
    movlw 0 ;que esta entonces se va al modo correspondiente
    subwf estadvar, w
    btfsc STATUS, 2
    call modo_0 ;modo funcionamiento normal
    bcf STATUS, 2
    movlw 1
    subwf estadvar, w
    btfsc STATUS, 2
    call modo_1 ;modo configuracion del semaforo0
    bcf STATUS, 2
    movlw 2
    subwf estadvar, w
    btfsc STATUS, 2
    call modo_2 ;modo configuracion del semaforo1
    bcf STATUS, 2
    movlw 3
    subwf estadvar, w
    btfsc STATUS, 2
    call modo_3 ;modo configuracion del semaforo2
    bcf STATUS, 2
    movlw 4
    subwf estadvar, w
    btfsc STATUS, 2
    call modo_4 ;modo aceptar o cancelar cambios
    return

modoperm:
    movf sem0, w ;se mueve el tiempo actual del semaforo0 para
    call division ;pasarlo a decimal
    movf cocientedec, w ;se traduce el dato al display de 7segmentos
    call tabla ;la variable para encender el display de decenas
    movwf dispdecsem0
    movf numerador, w ;se traduce el dato del numerador restante al display
    call tabla ;la variable para encender el display de unidades
    movwf dispnumsem0
    movf sem1, w ;se mueve el tiempo actual del semaforo1 para
    call division ;pasarlo a decimal
    movf cocientedec, w ;se traduce el dato del numerador restante al display
    call tabla ;la variable para encender el display de decenas
    movwf dispdecsem1
    movf numerador, w ;se traduce el dato del numerador restante al display
    call tabla ;la variable para encender el display de unidades
    movwf dispnumsem1
    movf sem2, w ;se mueve el tiempo actual del semaforo2 para
    call division ;pasarlo a decimal
    movf cocientedec, w ;se traduce el dato del numerador restante al display
    call tabla ;la variable para encender el display de decenas
    movwf dispdecsem2
    movf numerador, w ;se traduce el dato del numerador restante al display
    call tabla ;la variable para encender el display de unidades
    movwf dispnumsem2
    return

;modo generalizado para subir o bajar
modoconfig:
    movwf semaforo ;se mueve w a la variable temporal de semaforo
    btfsc bestados, 1 ;dependiendo si se presiono subir o bajar, se llama
    call subir ;a la subrutina correspondiente para aumentar o
    btfsc bestados, 2 ;decrementar la variable de configuracion
    call bajar
    movf semaforo, w
    movwf configmisc ;variable temporal de configuracion
    call division ;se pasa a decimal
    movf cocientedec, w ;se traduce el dato del numerador restante al display
    call tabla ;la variable para encender el display de decenas
    movwf dispconf1
    movf numerador, w ;se traduce el dato del numerador restante al display
    call tabla ;la variable para encender el display de unidades
    movwf dispconf0
    call modoperm ;se llama al modo de funcionamiento normal de semaforo
    return


;funcionamiento normal
modo_0:
    bcf PORTB, 3 ;se apagan los leds indicadores de via en configuracion
    bcf PORTB, 4
    bcf PORTB, 5
    bcf bestados, 1 ;se limpia la bandera de botones de subir o bajar
    bcf bestados, 2
    clrf dispconf1 ;se apaga el display e configuracion
    clrf dispconf0
    call modoperm ;los semaforos siguen funcionando normalmente
    return

;primera via en configuracion
modo_1:
    bsf PORTB, 3 ;se enciende el led de primera via en configuracion
    movf config0, w ;se mueve la variable de config0 de semaforo0 a w
    call modoconfig ;se usa el modo de configuracion general
    movf configmisc, w ;se actualiza el valor de la variable de config0
    movwf config0 ;de semaforo0
    return

;segunda via en configuracion
modo_2:
    bcf PORTB, 3 ;se apaga led de primera via en configuracion
    bsf PORTB, 4 ;se enciende led de segunda via en configuracion
    movf config1, w ;se realiza el mismo procedimento que para el
    call modoconfig ;semaforo0 pero para el semaforo1
    movf configmisc, w
    movwf config1
    return

;tercera via en configuracion
modo_3:
    bcf PORTB, 3 ;se apaga led de primera via en configuracion
    bcf PORTB, 4 ;se apaga led de segunda via en configuracion
    bsf PORTB, 5 ;se enciende led de tercera via en configuracion
    movf config2, w ;se realiza el mismo procedimento que para el
    call modoconfig ;semaforo1 pero para el semaforo2
    movf configmisc, w
    movwf config2
    return

;modo aceptar o cancelar cambios
modo_4:
    bsf PORTB, 3 ;se encienden todos los leds de via en configuracion
    bsf PORTB, 4
    movlw 01110111B ; A
    movwf dispconf1
    movlw 0111001B ; C
    movwf dispconf0
    call modoperm ;los semaforos siguen funcionando normal
    btfsc bestados, 1 ;si se presiona aceptar se llama una secuencia de
    goto aceptar ;reseteo con los nuevos valores
    btfsc bestados, 2 ;si se presiona cancelar se borran los valores de
    goto cancelar ;configuracion no aplicados
    return ;que se habian elegido y se regresan a 0

;secuencia de aceptar
aceptar:
    movlw 0111110B ;se mueven valores para desplegarse en los displays
    movwf dispconf0 ;U
    movwf dispconf1 ;U
    movlw 1111011B ;palabra: reset
    movwf dispnumsem0
    movwf dispnumsem1
    movlw 0000001B
    movwf dispnumsem2
    movlw 0110001B
    movwf dispdecsem0
    movlw 1101101B
    movwf dispdecsem1
    movlw 0000111B
    movwf dispdecsem2
    call luzroja0 ;se ponen todos los semaforos en rojo
    call luzroja1
    call luzroja2
    clrf bandi ;se limpia la bandera de titileo
    call delay_big ;se llama un delay de 1.5s aproximadamente
    call luzverde0 ;se pone el primer semaforo en verde
    bsf bandactual, 0 ;se activa la bandera de reseteo (para primera corrida)
    movf config0, w ;se mueve el valor de config0 elegido para verde en el
    movwf gresem0 ;semaforo0
    movwf sem0 ;se mueve el valor al semaforo0 rojo
    movwf redsem1 ;se carga el valor de semaforo0 a semaforo1 actual
    movwf sem1 ;y semaforo1 rojo(solo primera corrida)
    movf config1, w ;se mueve el valor de config1 elegido para verde en el
    movwf gresem1 ;semaforo1
    movf config2, w ;se mueve el valor de config2 elegido para verde en el
    movwf gresem2 ;semaforo2
    movf gresem1, w ;se suma el valor del semaforo1 en verde con el
    addwf gresem2, w ;semaforo2 en verde para obtener el tiempo del semaforo0
    movwf redsem0 ;en rojo
    movf gresem0, w ;se suma el valor del semaforo0 en verde con el
    addwf gresem1, w ;semaforo1 en verde para obtener el tiempo en el
    movwf redsem2 ;semaforo2 en rojo
    movwf sem2 ;se mueve el valor al semaforo2 actual
    movlw 0 ;se pone la variable de modo en 0 para modo normal
    movwf estadvar
    movlw 10 ;se ponen los valores de configuracion en 10 por defecto
    movwf config0
    movwf config1
    movwf config2
    bcf PORTC, 0 ;se pone en verde el primer semaforo
    bcf PORTC, 1
    bsf PORTC, 2
    bsf yelsign, 0 ;se enciende la bandera de que el semaforo0 es verde
    bsf PORTC, 3 ;se pone en rojo el segundo semaforo
    bcf PORTC, 4
    bcf PORTC, 5
    bcf yelsign, 1 ;se enciende la bandera de que el semaforo1 es verde
    bsf PORTC, 6 ;se pone en rojo el tercera semaforo
    bcf PORTC, 7
    bcf PORTE, 0
    bcf yelsign, 2 ;se enciende la bandera de que el semaforo2 es verde
    movlw 0 ;se pone en cero el toggle del semaforo0
    movwf togglevar
    movlw 1 ;se pone en uno el toggle del semaforo1 o semaforo2
    movwf togglevar1
    movwf togglevar2
    return

;cancelar cambios
cancelar:
    movlw 10 ;se ponen en 0 las variables de configuracion (para editar)
    movwf config0 ;de los tres semaforos (se descartan cambios)
    movwf config1
    movwf config2
    movlw 0 ;se regresa al modo 0
    movwf estadvar
    return

;delay del reseteo 1 s aprox
delay_big:
    movlw 198
    movwf cont_big
    call delay_small
    decfsz cont_big, 1
    goto $-2
    return

delay_small:
    movlw 248
    movwf cont_small
    call delay_mini
    decfsz cont_small, 1
    goto $-1
    return

delay_mini:
    movlw 200
    movwf cont_mini
    decfsz cont_mini, 1
    goto $-1
    return

;----------------configuraciones de funciones del micro-------------------------
config_reloj:
    banksel OSCCON; Seleccion de banco
    bsf ((OSCCON) and 07Fh), 6 ; 001, Frecuencia de 1MHz
    bcf ((OSCCON) and 07Fh), 5
    bcf ((OSCCON) and 07Fh), 4
    bsf ((OSCCON) and 07Fh), 0 ; reloj interno
    return

config_io:
    banksel ANSELH ;selecciona el banco donde se encuentra la seleccion
    clrf ANSELH ;de pines digitales
    clrf ANSEL
    banksel TRISB ;Seleccion del banco donde se encuentra TRISB
    movlw 7h ;Se pasa el dato en hexa a w para poner en 1 (entradas)
    movwf TRISB ;los pines deseados en el puerto B como in(((PORTB) and 07Fh), 0, ((PORTB) and 07Fh), 1)
    clrf TRISA ;Se ponen los pines de los puertos A,C,D y E como salidas
    clrf TRISC
    clrf TRISD
    clrf TRISE
    bcf OPTION_REG, 7 ;habilitar los pull ups
    bsf WPUB, 0 ;habilitar los pullups en ((PORTB) and 07Fh), 0 y ((PORTB) and 07Fh), 1 como inputs
    bsf WPUB, 1
    bsf WPUB, 2
    banksel PORTB ;Se selecciona el banco que contiene el puerto B
    clrf PORTA ;Se ponen todos los pines de los puertos A,B,C y D en 0
    bcf PORTB, 3
    bcf PORTB, 4
    bcf PORTB, 5
    clrf PORTC
    clrf PORTD
    clrf PORTE
    return

config_iocb:
    banksel TRISA ;se configuran los pines de ((PORTB) and 07Fh), 0, ((PORTB) and 07Fh), 1 y ((PORTB) and 07Fh), 2 con int on change
    bsf IOCB, 0 ;interrupt on change para reaccionar con los pb
    bsf IOCB, 1
    bsf IOCB, 2
    banksel PORTA
    movf PORTB, w
    bcf ((INTCON) and 07Fh), 0 ;se pone en 0 la bandera de la interrupcion por cambio
    return

config_tmr0:
    banksel TRISA
    bcf ((OPTION_REG) and 07Fh), 5 ; reloj interno (low to high)
    bcf ((OPTION_REG) and 07Fh), 3 ; prescaler
    bcf ((OPTION_REG) and 07Fh), 2 ; 001, que es 1:4
    bcf ((OPTION_REG) and 07Fh), 1
    bsf ((OPTION_REG) and 07Fh), 0
    banksel PORTA
    call rst_tmr0; se resetea el timer0
    return

config_tmr1:
    banksel T1CON
    bsf ((T1CON) and 07Fh), 5 ;Prescaler de 1:4
    bcf ((T1CON) and 07Fh), 4 ;10
    bcf ((T1CON) and 07Fh), 1 ;Reloj interno
    bsf ((T1CON) and 07Fh), 0 ;timer1 habilitado
    call rst_tmr1
    return

config_tmr2:
    banksel T2CON
    bsf ((T2CON) and 07Fh), 2 ;Encender el tmr2
    bsf ((T2CON) and 07Fh), 6 ;Configuraci√≥n de postscaler 1:16
    bsf ((T2CON) and 07Fh), 5 ;1111
    bsf ((T2CON) and 07Fh), 4 ;
    bsf ((T2CON) and 07Fh), 3 ;Configuraci√≥n de prescaler 1:16
    bsf ((T2CON) and 07Fh), 1 ;1x
    banksel TRISA
    movlw 244 ;n√∫mero calculado para pasar a PR2 y que se obtenga
    movwf PR2 ;250 ms
    banksel PORTA
    bcf ((PIR1) and 07Fh), 1 ;se limpia la bandera de interrupci√≥n del tmr2
    return

rst_tmr0:
    movlw 125 ;Valor calculado con la formula aprendida en clase
    movwf TMR0 ;
    bcf ((INTCON) and 07Fh), 2 ;se pone en cero la bandera de overflow del timer0
    return

rst_tmr1:
    banksel PIR1
    movlw 11011100B;valor para que se resetee cada segundo
    movwf TMR1L
    movlw 1011B
    movwf TMR1H
    bcf ((PIR1) and 07Fh), 0
    return

config_inten:
    bsf ((INTCON) and 07Fh), 7 ;enable global de interrupts
    bsf ((INTCON) and 07Fh), 3 ;interrupt on change habilitado
    bcf ((INTCON) and 07Fh), 0 ;pone en 0 la bandera del interrupt on change
    bsf ((INTCON) and 07Fh), 5 ;habilita interrupt de overflow del tmr0
    bcf ((PIR1) and 07Fh), 0 ;pone en 0 la bandera de interrupcion de overflow de tmr1
    bsf ((PIE1) and 07Fh), 0 ;habilita la interrupcion del overflow del tmr1
    bsf ((INTCON) and 07Fh), 6 ;habilita unmasked interrupts (para tmr1)
    bsf ((PIE1) and 07Fh), 1 ;habilita la interrupcion del tmr2
    return

END
