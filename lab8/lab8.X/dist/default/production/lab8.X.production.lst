

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Apr 19 19:43:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataBANK0
   212  01FF                     __pidataBANK0:
   213                           
   214                           ;initializer for _tabla
   215  01FF  343F               	retlw	63
   216  0200  3406               	retlw	6
   217  0201  345B               	retlw	91
   218  0202  344F               	retlw	79
   219  0203  3466               	retlw	102
   220  0204  346D               	retlw	109
   221  0205  347D               	retlw	125
   222  0206  3407               	retlw	7
   223  0207  347F               	retlw	127
   224  0208  346F               	retlw	111
   225  0005                     _PORTA	set	5
   226  0005                     _PORTAbits	set	5
   227  0008                     _PORTD	set	8
   228  0006                     _PORTBbits	set	6
   229  000B                     _INTCONbits	set	11
   230  0001                     _TMR0	set	1
   231  000C                     _PIR1bits	set	12
   232  001F                     _ADCON0bits	set	31
   233  001E                     _ADRESH	set	30
   234  0007                     _PORTC	set	7
   235  005A                     _T0IF	set	90
   236  0066                     _ADIF	set	102
   237  008C                     _PIE1bits	set	140
   238  0081                     _OPTION_REGbits	set	129
   239  009F                     _ADCON1bits	set	159
   240  0088                     _TRISD	set	136
   241  0087                     _TRISC	set	135
   242  0085                     _TRISA	set	133
   243  008F                     _OSCCONbits	set	143
   244  0188                     _ANSELbits	set	392
   245  0189                     _ANSELH	set	393
   246                           
   247                           	psect	cinit
   248  0013                     start_initialization:	
   249                           ; #config settings
   250                           
   251  0013                     __initialization:
   252                           
   253                           ; Initialize objects allocated to BANK0
   254  0013  1383               	bcf	3,7	;select IRP bank0
   255  0014  302A               	movlw	low (__pdataBANK0+10)
   256  0015  00FD               	movwf	btemp+-1
   257  0016  3001               	movlw	high __pidataBANK0
   258  0017  00FE               	movwf	btemp
   259  0018  30FF               	movlw	low __pidataBANK0
   260  0019  00FF               	movwf	btemp+1
   261  001A  3020               	movlw	low __pdataBANK0
   262  001B  0084               	movwf	4
   263  001C  120A  118A  21F0  120A  118A  	fcall	init_ram0
   264                           
   265                           ; Clear objects allocated to BANK0
   266  0021  01B1               	clrf	__pbssBANK0& (0+127)
   267                           
   268                           ; Clear objects allocated to COMMON
   269  0022  01F9               	clrf	__pbssCOMMON& (0+127)
   270  0023  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   271  0024  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   272  0025  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   273  0026  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   274  0027                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  0027                     __end_of__initialization:
   278  0027  0183               	clrf	3
   279  0028  120A  118A  2998   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMMON
   282  0079                     __pbssCOMMON:
   283  0079                     _dispvar:
   284  0079                     	ds	1
   285  007A                     _cenres:
   286  007A                     	ds	1
   287  007B                     _uni:
   288  007B                     	ds	1
   289  007C                     _dec:
   290  007C                     	ds	1
   291  007D                     _cen:
   292  007D                     	ds	1
   293                           
   294                           	psect	bssBANK0
   295  0031                     __pbssBANK0:
   296  0031                     _c:
   297  0031                     	ds	1
   298                           
   299                           	psect	dataBANK0
   300  0020                     __pdataBANK0:
   301  0020                     _tabla:
   302  0020                     	ds	10
   303                           
   304                           	psect	inittext
   305  01EC                     init_fetch0:	
   306                           ;	Called with low address in FSR and high address in W
   307                           
   308  01EC  087E               	movf	btemp,w
   309  01ED  008A               	movwf	10
   310  01EE  087F               	movf	btemp+1,w
   311  01EF  0082               	movwf	2
   312  01F0                     init_ram0:	
   313                           ;Called with:
   314                           ;	high address of idata address in btemp 
   315                           ;	low address of idata address in btemp+1 
   316                           ;	low address of data in FSR
   317                           ;	high address + 1 of data in btemp-1
   318                           
   319  01F0  120A  118A  21EC  120A  118A  	fcall	init_fetch0
   320  01F5  0080               	movwf	0
   321  01F6  0A84               	incf	4,f
   322  01F7  0804               	movf	4,w
   323  01F8  067D               	xorwf	btemp+-1,w
   324  01F9  1903               	btfsc	3,2
   325  01FA  3400               	retlw	0
   326  01FB  0AFF               	incf	btemp+1,f
   327  01FC  1903               	btfsc	3,2
   328  01FD  0AFE               	incf	btemp,f
   329  01FE  29F0               	goto	init_ram0
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:
   333  0070                     ?_isr:
   334  0070                     ?_main:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?___awdiv:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?___awmod:	
   341                           ; 2 bytes @ 0x0
   342                           
   343  0070                     ___awdiv@divisor:	
   344                           ; 2 bytes @ 0x0
   345                           
   346  0070                     ___awmod@divisor:	
   347                           ; 2 bytes @ 0x0
   348                           
   349                           
   350                           ; 2 bytes @ 0x0
   351  0070                     	ds	2
   352  0072                     ___awdiv@dividend:
   353  0072                     ___awmod@dividend:	
   354                           ; 2 bytes @ 0x2
   355                           
   356                           
   357                           ; 2 bytes @ 0x2
   358  0072                     	ds	2
   359  0074                     ??___awdiv:
   360  0074                     ??___awmod:	
   361                           ; 1 bytes @ 0x4
   362                           
   363                           
   364                           ; 1 bytes @ 0x4
   365  0074                     	ds	1
   366  0075                     ___awdiv@counter:
   367  0075                     ___awmod@counter:	
   368                           ; 1 bytes @ 0x5
   369                           
   370                           
   371                           ; 1 bytes @ 0x5
   372  0075                     	ds	1
   373  0076                     ___awdiv@sign:
   374  0076                     ___awmod@sign:	
   375                           ; 1 bytes @ 0x6
   376                           
   377                           
   378                           ; 1 bytes @ 0x6
   379  0076                     	ds	1
   380  0077                     ___awdiv@quotient:
   381                           
   382                           ; 2 bytes @ 0x7
   383  0077                     	ds	2
   384                           
   385                           	psect	cstackBANK0
   386  002A                     __pcstackBANK0:
   387  002A                     ??_isr:
   388                           
   389                           ; 1 bytes @ 0x0
   390  002A                     	ds	6
   391  0030                     ??_main:
   392                           
   393                           ; 1 bytes @ 0x6
   394  0030                     	ds	1
   395                           
   396                           	psect	maintext
   397  0198                     __pmaintext:	
   398 ;;
   399 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   400 ;;
   401 ;; *************** function _main *****************
   402 ;; Defined at:
   403 ;;		line 98 in file "lab8.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0
   412 ;; Tracked objects:
   413 ;;		On entry : B00/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0
   419 ;;      Temps:          0       1       0       0       0
   420 ;;      Totals:         0       1       0       0       0
   421 ;;Total ram usage:        1 bytes
   422 ;; Hardware stack levels required when called:    2
   423 ;; This function calls:
   424 ;;		Nothing
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           
   431                           ;psect for function _main
   432  0198                     _main:
   433  0198                     l1019:	
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg+status,2+status,0]
   436                           
   437                           
   438                           ;lab8.c: 101:     INTCONbits.T0IF = 0;
   439  0198  1683               	bsf	3,5	;RP0=1, select bank1
   440  0199  1303               	bcf	3,6	;RP1=0, select bank1
   441  019A  170F               	bsf	15,6	;volatile
   442                           
   443                           ;lab8.c: 102: 
   444  019B  128F               	bcf	15,5	;volatile
   445                           
   446                           ;lab8.c: 103:     INTCONbits.GIE = 1;
   447  019C  120F               	bcf	15,4	;volatile
   448                           
   449                           ;lab8.c: 104:     INTCONbits.T0IE = 1;
   450  019D  140F               	bsf	15,0	;volatile
   451  019E                     l1021:
   452                           
   453                           ;lab8.c: 106:     PIE1bits.ADIE = 1;
   454  019E  1683               	bsf	3,5	;RP0=1, select bank3
   455  019F  1703               	bsf	3,6	;RP1=1, select bank3
   456  01A0  0189               	clrf	9	;volatile
   457  01A1                     l1023:
   458                           
   459                           ;lab8.c: 107: 
   460  01A1  1408               	bsf	8,0	;volatile
   461  01A2                     l1025:
   462                           
   463                           ;lab8.c: 108:     dispvar = 0;
   464  01A2  1488               	bsf	8,1	;volatile
   465  01A3                     l1027:
   466                           
   467                           ;lab8.c: 109:     while (1)
   468  01A3  300F               	movlw	15
   469  01A4  1683               	bsf	3,5	;RP0=1, select bank1
   470  01A5  1303               	bcf	3,6	;RP1=0, select bank1
   471  01A6  0085               	movwf	5	;volatile
   472  01A7                     l1029:
   473                           
   474                           ;lab8.c: 110:     {if (ADCON0bits.GO == 0) {
   475  01A7  0187               	clrf	7	;volatile
   476  01A8                     l1031:
   477                           
   478                           ;lab8.c: 111:         if(ADCON0bits.CHS == 0){
   479  01A8  0188               	clrf	8	;volatile
   480  01A9                     l1033:
   481                           
   482                           ;lab8.c: 112:             PORTC = ADRESH;
   483  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   484  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   485  01AB  0185               	clrf	5	;volatile
   486  01AC                     l1035:
   487                           
   488                           ;lab8.c: 113:             ADCON0bits.CHS = 1;
   489  01AC  0187               	clrf	7	;volatile
   490  01AD                     l1037:
   491                           
   492                           ;lab8.c: 114:         }
   493  01AD  0188               	clrf	8	;volatile
   494  01AE                     l1039:
   495                           
   496                           ;lab8.c: 116:             PORTD = ADRESH;
   497  01AE  303F               	movlw	-193
   498  01AF  059F               	andwf	31,f	;volatile
   499  01B0                     l1041:
   500                           
   501                           ;lab8.c: 117:             ADCON0bits.CHS = 0;
   502  01B0  111F               	bcf	31,2	;volatile
   503  01B1                     l1043:
   504                           
   505                           ;lab8.c: 118:         }
   506  01B1  141F               	bsf	31,0	;volatile
   507  01B2                     l1045:
   508                           
   509                           ;lab8.c: 119:         _delay((unsigned long)((50)*(500000/4000000.0)));
   510  01B2  149F               	bsf	31,1	;volatile
   511  01B3                     l1047:
   512                           
   513                           ;lab8.c: 120:         ADCON0bits.GO = 1;
   514  01B3  1683               	bsf	3,5	;RP0=1, select bank1
   515  01B4  1303               	bcf	3,6	;RP1=0, select bank1
   516  01B5  129F               	bcf	31,5	;volatile
   517  01B6                     l1049:
   518                           
   519                           ;lab8.c: 121:     }}
   520  01B6  121F               	bcf	31,4	;volatile
   521  01B7                     l1051:
   522                           
   523                           ;lab8.c: 122: 
   524  01B7  139F               	bcf	31,7	;volatile
   525  01B8                     l1053:
   526  01B8  1281               	bcf	1,5	;volatile
   527  01B9                     l1055:
   528  01B9  1181               	bcf	1,3	;volatile
   529  01BA                     l1057:
   530  01BA  1101               	bcf	1,2	;volatile
   531  01BB                     l1059:
   532  01BB  1481               	bsf	1,1	;volatile
   533  01BC                     l1061:
   534  01BC  1401               	bsf	1,0	;volatile
   535  01BD                     l1063:
   536  01BD  3064               	movlw	100
   537  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   538  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   539  01C0  0081               	movwf	1	;volatile
   540  01C1                     l1065:
   541  01C1  110B               	bcf	11,2	;volatile
   542  01C2                     l1067:
   543  01C2  178B               	bsf	11,7	;volatile
   544  01C3                     l1069:
   545  01C3  168B               	bsf	11,5	;volatile
   546  01C4                     l1071:
   547  01C4  170B               	bsf	11,6	;volatile
   548  01C5                     l1073:
   549  01C5  1683               	bsf	3,5	;RP0=1, select bank1
   550  01C6  1303               	bcf	3,6	;RP1=0, select bank1
   551  01C7  170C               	bsf	12,6	;volatile
   552  01C8                     l1075:
   553  01C8  01F9               	clrf	_dispvar
   554  01C9                     l1077:
   555  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   556  01CA  189F               	btfsc	31,1	;volatile
   557  01CB  29CD               	goto	u451
   558  01CC  29CE               	goto	u450
   559  01CD                     u451:
   560  01CD  29C9               	goto	l1077
   561  01CE                     u450:
   562  01CE                     l1079:
   563  01CE  0C1F               	rrf	31,w	;volatile
   564  01CF  00B0               	movwf	??_main
   565  01D0  0C30               	rrf	??_main,w
   566  01D1  390F               	andlw	15
   567  01D2  3A00               	xorlw	0
   568  01D3  1D03               	skipz
   569  01D4  29D6               	goto	u461
   570  01D5  29D7               	goto	u460
   571  01D6                     u461:
   572  01D6  29DE               	goto	l1085
   573  01D7                     u460:
   574  01D7                     l1081:
   575  01D7  081E               	movf	30,w	;volatile
   576  01D8  0087               	movwf	7	;volatile
   577  01D9                     l1083:
   578  01D9  081F               	movf	31,w	;volatile
   579  01DA  39C3               	andlw	-61
   580  01DB  3804               	iorlw	4
   581  01DC  009F               	movwf	31	;volatile
   582  01DD  29E2               	goto	l1089
   583  01DE                     l1085:
   584  01DE  081E               	movf	30,w	;volatile
   585  01DF  0088               	movwf	8	;volatile
   586  01E0                     l1087:
   587  01E0  30C3               	movlw	-61
   588  01E1  059F               	andwf	31,f	;volatile
   589  01E2                     l1089:
   590  01E2  29E3               	nop2	;2 cycle nop
   591  01E3  29E4               	nop2	;2 cycle nop
   592  01E4  29E5               	nop2	;2 cycle nop
   593  01E5                     l1091:
   594  01E5  1283               	bcf	3,5	;RP0=0, select bank0
   595  01E6  1303               	bcf	3,6	;RP1=0, select bank0
   596  01E7  149F               	bsf	31,1	;volatile
   597  01E8  29C9               	goto	l1077
   598  01E9  120A  118A  2810   	ljmp	start
   599  01EC                     __end_of_main:
   600                           
   601                           	psect	text1
   602  002B                     __ptext1:	
   603 ;; *************** function _isr *****************
   604 ;; Defined at:
   605 ;;		line 50 in file "lab8.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       6       0       0       0
   622 ;;      Totals:         0       6       0       0       0
   623 ;;Total ram usage:        6 bytes
   624 ;; Hardware stack levels used:    1
   625 ;; Hardware stack levels required when called:    1
   626 ;; This function calls:
   627 ;;		___awdiv
   628 ;;		___awmod
   629 ;; This function is called by:
   630 ;;		Interrupt level 1
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _isr
   636  002B                     _isr:
   637  002B                     i1l975:
   638                           
   639                           ;lab8.c: 52:                 PORTAbits.RA7 = 0;
   640  002B  1F0C               	btfss	12,6	;volatile
   641  002C  282E               	goto	u43_21
   642  002D  282F               	goto	u43_20
   643  002E                     u43_21:
   644  002E  2833               	goto	i1l983
   645  002F                     u43_20:
   646  002F                     i1l977:
   647                           
   648                           ;lab8.c: 53:                 PORTD = tabla[dec];
   649  002F  081E               	movf	30,w	;volatile
   650  0030  0087               	movwf	7	;volatile
   651  0031                     i1l979:
   652                           
   653                           ;lab8.c: 54:                 dispvar = 2;
   654  0031  149F               	bsf	31,1	;volatile
   655  0032                     i1l981:
   656                           
   657                           ;lab8.c: 55:                 break;
   658  0032  130C               	bcf	12,6	;volatile
   659  0033                     i1l983:
   660                           
   661                           ;lab8.c: 59:                 PORTAbits.RA7 = 1;
   662  0033  1D0B               	btfss	11,2	;volatile
   663  0034  2836               	goto	u44_21
   664  0035  2837               	goto	u44_20
   665  0036                     u44_21:
   666  0036  28CF               	goto	i1l70
   667  0037                     u44_20:
   668  0037                     i1l985:
   669                           
   670                           ;lab8.c: 60:                 PORTD = tabla[uni];
   671  0037  3064               	movlw	100
   672  0038  00F0               	movwf	___awdiv@divisor
   673  0039  3000               	movlw	0
   674  003A  00F1               	movwf	___awdiv@divisor+1
   675  003B  0807               	movf	7,w	;volatile
   676  003C  00AA               	movwf	??_isr
   677  003D  01AB               	clrf	??_isr+1
   678  003E  082A               	movf	??_isr,w
   679  003F  00F2               	movwf	___awdiv@dividend
   680  0040  082B               	movf	??_isr+1,w
   681  0041  00F3               	movwf	___awdiv@dividend+1
   682  0042  120A  118A  20D8  120A  118A  	fcall	___awdiv
   683  0047  0870               	movf	?___awdiv,w
   684  0048  1283               	bcf	3,5	;RP0=0, select bank0
   685  0049  1303               	bcf	3,6	;RP1=0, select bank0
   686  004A  00AC               	movwf	??_isr+2
   687  004B  082C               	movf	??_isr+2,w
   688  004C  00FD               	movwf	_cen
   689                           
   690                           ;lab8.c: 61:                 dispvar = 0;
   691  004D  3064               	movlw	100
   692  004E  00F0               	movwf	___awmod@divisor
   693  004F  3000               	movlw	0
   694  0050  00F1               	movwf	___awmod@divisor+1
   695  0051  0807               	movf	7,w	;volatile
   696  0052  00AA               	movwf	??_isr
   697  0053  01AB               	clrf	??_isr+1
   698  0054  082A               	movf	??_isr,w
   699  0055  00F2               	movwf	___awmod@dividend
   700  0056  082B               	movf	??_isr+1,w
   701  0057  00F3               	movwf	___awmod@dividend+1
   702  0058  120A  118A  213F  120A  118A  	fcall	___awmod
   703  005D  0870               	movf	?___awmod,w
   704  005E  1283               	bcf	3,5	;RP0=0, select bank0
   705  005F  1303               	bcf	3,6	;RP1=0, select bank0
   706  0060  00AC               	movwf	??_isr+2
   707  0061  082C               	movf	??_isr+2,w
   708  0062  00FA               	movwf	_cenres
   709                           
   710                           ;lab8.c: 62:                 break;
   711  0063  300A               	movlw	10
   712  0064  00F0               	movwf	___awdiv@divisor
   713  0065  3000               	movlw	0
   714  0066  00F1               	movwf	___awdiv@divisor+1
   715  0067  087A               	movf	_cenres,w
   716  0068  00AA               	movwf	??_isr
   717  0069  01AB               	clrf	??_isr+1
   718  006A  082A               	movf	??_isr,w
   719  006B  00F2               	movwf	___awdiv@dividend
   720  006C  082B               	movf	??_isr+1,w
   721  006D  00F3               	movwf	___awdiv@dividend+1
   722  006E  120A  118A  20D8  120A  118A  	fcall	___awdiv
   723  0073  0870               	movf	?___awdiv,w
   724  0074  1283               	bcf	3,5	;RP0=0, select bank0
   725  0075  1303               	bcf	3,6	;RP1=0, select bank0
   726  0076  00AC               	movwf	??_isr+2
   727  0077  082C               	movf	??_isr+2,w
   728  0078  00FC               	movwf	_dec
   729                           
   730                           ;lab8.c: 63:         }
   731  0079  300A               	movlw	10
   732  007A  00F0               	movwf	___awmod@divisor
   733  007B  3000               	movlw	0
   734  007C  00F1               	movwf	___awmod@divisor+1
   735  007D  087A               	movf	_cenres,w
   736  007E  00AA               	movwf	??_isr
   737  007F  01AB               	clrf	??_isr+1
   738  0080  082A               	movf	??_isr,w
   739  0081  00F2               	movwf	___awmod@dividend
   740  0082  082B               	movf	??_isr+1,w
   741  0083  00F3               	movwf	___awmod@dividend+1
   742  0084  120A  118A  213F  120A  118A  	fcall	___awmod
   743  0089  0870               	movf	?___awmod,w
   744  008A  1283               	bcf	3,5	;RP0=0, select bank0
   745  008B  1303               	bcf	3,6	;RP1=0, select bank0
   746  008C  00AC               	movwf	??_isr+2
   747  008D  082C               	movf	??_isr+2,w
   748  008E  00FB               	movwf	_uni
   749  008F                     i1l987:
   750                           
   751                           ;lab8.c: 64:     }
   752  008F  3064               	movlw	100
   753  0090  0081               	movwf	1	;volatile
   754  0091                     i1l989:
   755                           
   756                           ;lab8.c: 65: 
   757  0091  110B               	bcf	11,2	;volatile
   758  0092                     i1l991:
   759                           
   760                           ;lab8.c: 66: }
   761  0092  1106               	bcf	6,2	;volatile
   762  0093                     i1l993:
   763                           
   764                           ;lab8.c: 67: 
   765  0093  1186               	bcf	6,3	;volatile
   766  0094                     i1l995:
   767                           
   768                           ;lab8.c: 68: void main(void) {
   769  0094  1206               	bcf	6,4	;volatile
   770  0095                     i1l997:
   771                           
   772                           ;lab8.c: 69: 
   773  0095  0188               	clrf	8	;volatile
   774                           
   775                           ;lab8.c: 71:     OSCCONbits.IRCF2 = 1;
   776  0096  28BC               	goto	i1l1013
   777  0097                     i1l66:	
   778                           ;lab8.c: 72:     OSCCONbits.IRCF1 = 0;
   779                           
   780                           
   781                           ;lab8.c: 73:     OSCCONbits.IRCF0 = 0;
   782  0097  1605               	bsf	5,4	;volatile
   783                           
   784                           ;lab8.c: 74:     OSCCONbits.SCS = 1;
   785  0098  1305               	bcf	5,6	;volatile
   786                           
   787                           ;lab8.c: 75: 
   788  0099  1385               	bcf	5,7	;volatile
   789  009A                     i1l999:
   790                           
   791                           ;lab8.c: 76:     ANSELH = 0;
   792  009A  087D               	movf	_cen,w
   793  009B  3E20               	addlw	(low (_tabla| 0))& (0+255)
   794  009C  0084               	movwf	4
   795  009D  1383               	bcf	3,7	;select IRP bank0
   796  009E  0800               	movf	0,w
   797  009F  0088               	movwf	8	;volatile
   798  00A0                     i1l1001:
   799                           
   800                           ;lab8.c: 77:     ANSELbits.ANS0 = 1;
   801  00A0  01F9               	clrf	_dispvar
   802  00A1  0AF9               	incf	_dispvar,f
   803                           
   804                           ;lab8.c: 78:     ANSELbits.ANS1 = 1;
   805  00A2  28CF               	goto	i1l70
   806  00A3                     i1l68:	
   807                           ;lab8.c: 79:     TRISA = 15;
   808                           
   809                           
   810                           ;lab8.c: 80:     TRISC = 0;
   811  00A3  1205               	bcf	5,4	;volatile
   812                           
   813                           ;lab8.c: 81:     TRISD = 0;
   814  00A4  1705               	bsf	5,6	;volatile
   815                           
   816                           ;lab8.c: 82:     PORTA = 0;
   817  00A5  1385               	bcf	5,7	;volatile
   818  00A6                     i1l1003:
   819                           
   820                           ;lab8.c: 83:     PORTC = 0;
   821  00A6  087C               	movf	_dec,w
   822  00A7  3E20               	addlw	(low (_tabla| 0))& (0+255)
   823  00A8  0084               	movwf	4
   824  00A9  1383               	bcf	3,7	;select IRP bank0
   825  00AA  0800               	movf	0,w
   826  00AB  0088               	movwf	8	;volatile
   827  00AC                     i1l1005:
   828                           
   829                           ;lab8.c: 84:     PORTD = 0;
   830  00AC  3002               	movlw	2
   831  00AD  00AA               	movwf	??_isr
   832  00AE  082A               	movf	??_isr,w
   833  00AF  00F9               	movwf	_dispvar
   834                           
   835                           ;lab8.c: 85: 
   836  00B0  28CF               	goto	i1l70
   837  00B1                     i1l69:	
   838                           ;lab8.c: 86:     ADCON0bits.ADCS = 0;
   839                           
   840                           
   841                           ;lab8.c: 87:     ADCON0bits.CHS0 = 0;
   842  00B1  1205               	bcf	5,4	;volatile
   843                           
   844                           ;lab8.c: 88:     ADCON0bits.ADON = 1;
   845  00B2  1305               	bcf	5,6	;volatile
   846                           
   847                           ;lab8.c: 89:     ADCON0bits.GO = 1;
   848  00B3  1785               	bsf	5,7	;volatile
   849  00B4                     i1l1007:
   850                           
   851                           ;lab8.c: 90:     ADCON1bits.VCFG1 = 0;
   852  00B4  087B               	movf	_uni,w
   853  00B5  3E20               	addlw	(low (_tabla| 0))& (0+255)
   854  00B6  0084               	movwf	4
   855  00B7  1383               	bcf	3,7	;select IRP bank0
   856  00B8  0800               	movf	0,w
   857  00B9  0088               	movwf	8	;volatile
   858  00BA                     i1l1009:
   859                           
   860                           ;lab8.c: 91:     ADCON1bits.VCFG0 = 0;
   861  00BA  01F9               	clrf	_dispvar
   862                           
   863                           ;lab8.c: 92:     ADCON1bits.ADFM = 0;
   864  00BB  28CF               	goto	i1l70
   865  00BC                     i1l1013:
   866  00BC  0879               	movf	_dispvar,w
   867  00BD  00AA               	movwf	??_isr
   868  00BE  01AB               	clrf	??_isr+1
   869                           
   870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   871                           ; Switch size 1, requested type "simple"
   872                           ; Number of cases is 1, Range of values is 0 to 0
   873                           ; switch strategies available:
   874                           ; Name         Instructions Cycles
   875                           ; simple_byte            4     3 (average)
   876                           ; direct_byte           11     8 (fixed)
   877                           ; jumptable            260     6 (fixed)
   878                           ;	Chosen strategy is simple_byte
   879  00BF  082B               	movf	??_isr+1,w
   880  00C0  3A00               	xorlw	0	; case 0
   881  00C1  1903               	skipnz
   882  00C2  28C4               	goto	i1l1113
   883  00C3  28CF               	goto	i1l70
   884  00C4                     i1l1113:
   885                           
   886                           ; Switch size 1, requested type "simple"
   887                           ; Number of cases is 3, Range of values is 0 to 2
   888                           ; switch strategies available:
   889                           ; Name         Instructions Cycles
   890                           ; simple_byte           10     6 (average)
   891                           ; direct_byte           17     8 (fixed)
   892                           ; jumptable            260     6 (fixed)
   893                           ;	Chosen strategy is simple_byte
   894  00C4  082A               	movf	??_isr,w
   895  00C5  3A00               	xorlw	0	; case 0
   896  00C6  1903               	skipnz
   897  00C7  2897               	goto	i1l66
   898  00C8  3A01               	xorlw	1	; case 1
   899  00C9  1903               	skipnz
   900  00CA  28A3               	goto	i1l68
   901  00CB  3A03               	xorlw	3	; case 2
   902  00CC  1903               	skipnz
   903  00CD  28B1               	goto	i1l69
   904  00CE  28CF               	goto	i1l70
   905  00CF                     i1l70:
   906  00CF  082F               	movf	??_isr+5,w
   907  00D0  008A               	movwf	10
   908  00D1  082E               	movf	??_isr+4,w
   909  00D2  0084               	movwf	4
   910  00D3  0E2D               	swapf	??_isr+3,w
   911  00D4  0083               	movwf	3
   912  00D5  0EFE               	swapf	btemp,f
   913  00D6  0E7E               	swapf	btemp,w
   914  00D7  0009               	retfie
   915  00D8                     __end_of_isr:
   916                           
   917                           	psect	intentry
   918  0004                     __pintentry:	
   919                           ;incstack = 0
   920                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   921                           
   922  0004                     interrupt_function:
   923  007E                     saved_w	set	btemp
   924  0004  00FE               	movwf	btemp
   925  0005  0E03               	swapf	3,w
   926  0006  1283               	bcf	3,5	;RP0=0, select bank0
   927  0007  1303               	bcf	3,6	;RP1=0, select bank0
   928  0008  00AD               	movwf	??_isr+3
   929  0009  0804               	movf	4,w
   930  000A  00AE               	movwf	??_isr+4
   931  000B  080A               	movf	10,w
   932  000C  00AF               	movwf	??_isr+5
   933  000D  120A  118A  282B   	ljmp	_isr
   934                           
   935                           	psect	text2
   936  013F                     __ptext2:	
   937 ;; *************** function ___awmod *****************
   938 ;; Defined at:
   939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  divisor         2    0[COMMON] int 
   942 ;;  dividend        2    2[COMMON] int 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  sign            1    6[COMMON] unsigned char 
   945 ;;  counter         1    5[COMMON] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  2    0[COMMON] int 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         4       0       0       0       0
   956 ;;      Locals:         2       0       0       0       0
   957 ;;      Temps:          1       0       0       0       0
   958 ;;      Totals:         7       0       0       0       0
   959 ;;Total ram usage:        7 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_isr
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function ___awmod
   970  013F                     ___awmod:
   971  013F                     i1l937:	
   972                           ;incstack = 0
   973                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   974                           
   975  013F  01F6               	clrf	___awmod@sign
   976  0140                     i1l939:
   977  0140  1FF3               	btfss	___awmod@dividend+1,7
   978  0141  2943               	goto	u34_21
   979  0142  2944               	goto	u34_20
   980  0143                     u34_21:
   981  0143  294B               	goto	i1l945
   982  0144                     u34_20:
   983  0144                     i1l941:
   984  0144  09F2               	comf	___awmod@dividend,f
   985  0145  09F3               	comf	___awmod@dividend+1,f
   986  0146  0AF2               	incf	___awmod@dividend,f
   987  0147  1903               	skipnz
   988  0148  0AF3               	incf	___awmod@dividend+1,f
   989  0149                     i1l943:
   990  0149  01F6               	clrf	___awmod@sign
   991  014A  0AF6               	incf	___awmod@sign,f
   992  014B                     i1l945:
   993  014B  1FF1               	btfss	___awmod@divisor+1,7
   994  014C  294E               	goto	u35_21
   995  014D  294F               	goto	u35_20
   996  014E                     u35_21:
   997  014E  2954               	goto	i1l949
   998  014F                     u35_20:
   999  014F                     i1l947:
  1000  014F  09F0               	comf	___awmod@divisor,f
  1001  0150  09F1               	comf	___awmod@divisor+1,f
  1002  0151  0AF0               	incf	___awmod@divisor,f
  1003  0152  1903               	skipnz
  1004  0153  0AF1               	incf	___awmod@divisor+1,f
  1005  0154                     i1l949:
  1006  0154  0870               	movf	___awmod@divisor,w
  1007  0155  0471               	iorwf	___awmod@divisor+1,w
  1008  0156  1903               	btfsc	3,2
  1009  0157  2959               	goto	u36_21
  1010  0158  295A               	goto	u36_20
  1011  0159                     u36_21:
  1012  0159  2989               	goto	i1l967
  1013  015A                     u36_20:
  1014  015A                     i1l951:
  1015  015A  01F5               	clrf	___awmod@counter
  1016  015B  0AF5               	incf	___awmod@counter,f
  1017  015C  2968               	goto	i1l957
  1018  015D                     i1l953:
  1019  015D  3001               	movlw	1
  1020  015E                     u37_25:
  1021  015E  1003               	clrc
  1022  015F  0DF0               	rlf	___awmod@divisor,f
  1023  0160  0DF1               	rlf	___awmod@divisor+1,f
  1024  0161  3EFF               	addlw	-1
  1025  0162  1D03               	skipz
  1026  0163  295E               	goto	u37_25
  1027  0164                     i1l955:
  1028  0164  3001               	movlw	1
  1029  0165  00F4               	movwf	??___awmod
  1030  0166  0874               	movf	??___awmod,w
  1031  0167  07F5               	addwf	___awmod@counter,f
  1032  0168                     i1l957:
  1033  0168  1FF1               	btfss	___awmod@divisor+1,7
  1034  0169  296B               	goto	u38_21
  1035  016A  296C               	goto	u38_20
  1036  016B                     u38_21:
  1037  016B  295D               	goto	i1l953
  1038  016C                     u38_20:
  1039  016C                     i1l959:
  1040  016C  0871               	movf	___awmod@divisor+1,w
  1041  016D  0273               	subwf	___awmod@dividend+1,w
  1042  016E  1D03               	skipz
  1043  016F  2972               	goto	u39_25
  1044  0170  0870               	movf	___awmod@divisor,w
  1045  0171  0272               	subwf	___awmod@dividend,w
  1046  0172                     u39_25:
  1047  0172  1C03               	skipc
  1048  0173  2975               	goto	u39_21
  1049  0174  2976               	goto	u39_20
  1050  0175                     u39_21:
  1051  0175  297C               	goto	i1l963
  1052  0176                     u39_20:
  1053  0176                     i1l961:
  1054  0176  0870               	movf	___awmod@divisor,w
  1055  0177  02F2               	subwf	___awmod@dividend,f
  1056  0178  0871               	movf	___awmod@divisor+1,w
  1057  0179  1C03               	skipc
  1058  017A  03F3               	decf	___awmod@dividend+1,f
  1059  017B  02F3               	subwf	___awmod@dividend+1,f
  1060  017C                     i1l963:
  1061  017C  3001               	movlw	1
  1062  017D                     u40_25:
  1063  017D  1003               	clrc
  1064  017E  0CF1               	rrf	___awmod@divisor+1,f
  1065  017F  0CF0               	rrf	___awmod@divisor,f
  1066  0180  3EFF               	addlw	-1
  1067  0181  1D03               	skipz
  1068  0182  297D               	goto	u40_25
  1069  0183                     i1l965:
  1070  0183  3001               	movlw	1
  1071  0184  02F5               	subwf	___awmod@counter,f
  1072  0185  1D03               	btfss	3,2
  1073  0186  2988               	goto	u41_21
  1074  0187  2989               	goto	u41_20
  1075  0188                     u41_21:
  1076  0188  296C               	goto	i1l959
  1077  0189                     u41_20:
  1078  0189                     i1l967:
  1079  0189  0876               	movf	___awmod@sign,w
  1080  018A  1903               	btfsc	3,2
  1081  018B  298D               	goto	u42_21
  1082  018C  298E               	goto	u42_20
  1083  018D                     u42_21:
  1084  018D  2993               	goto	i1l971
  1085  018E                     u42_20:
  1086  018E                     i1l969:
  1087  018E  09F2               	comf	___awmod@dividend,f
  1088  018F  09F3               	comf	___awmod@dividend+1,f
  1089  0190  0AF2               	incf	___awmod@dividend,f
  1090  0191  1903               	skipnz
  1091  0192  0AF3               	incf	___awmod@dividend+1,f
  1092  0193                     i1l971:
  1093  0193  0873               	movf	___awmod@dividend+1,w
  1094  0194  00F1               	movwf	?___awmod+1
  1095  0195  0872               	movf	___awmod@dividend,w
  1096  0196  00F0               	movwf	?___awmod
  1097  0197                     i1l333:
  1098  0197  0008               	return
  1099  0198                     __end_of___awmod:
  1100                           
  1101                           	psect	text3
  1102  00D8                     __ptext3:	
  1103 ;; *************** function ___awdiv *****************
  1104 ;; Defined at:
  1105 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  divisor         2    0[COMMON] int 
  1108 ;;  dividend        2    2[COMMON] int 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  quotient        2    7[COMMON] int 
  1111 ;;  sign            1    6[COMMON] unsigned char 
  1112 ;;  counter         1    5[COMMON] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  2    0[COMMON] int 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         4       0       0       0       0
  1123 ;;      Locals:         4       0       0       0       0
  1124 ;;      Temps:          1       0       0       0       0
  1125 ;;      Totals:         9       0       0       0       0
  1126 ;;Total ram usage:        9 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_isr
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           
  1136                           ;psect for function ___awdiv
  1137  00D8                     ___awdiv:
  1138  00D8                     i1l893:	
  1139                           ;incstack = 0
  1140                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1141                           
  1142  00D8  01F6               	clrf	___awdiv@sign
  1143  00D9                     i1l895:
  1144  00D9  1FF1               	btfss	___awdiv@divisor+1,7
  1145  00DA  28DC               	goto	u24_21
  1146  00DB  28DD               	goto	u24_20
  1147  00DC                     u24_21:
  1148  00DC  28E4               	goto	i1l901
  1149  00DD                     u24_20:
  1150  00DD                     i1l897:
  1151  00DD  09F0               	comf	___awdiv@divisor,f
  1152  00DE  09F1               	comf	___awdiv@divisor+1,f
  1153  00DF  0AF0               	incf	___awdiv@divisor,f
  1154  00E0  1903               	skipnz
  1155  00E1  0AF1               	incf	___awdiv@divisor+1,f
  1156  00E2                     i1l899:
  1157  00E2  01F6               	clrf	___awdiv@sign
  1158  00E3  0AF6               	incf	___awdiv@sign,f
  1159  00E4                     i1l901:
  1160  00E4  1FF3               	btfss	___awdiv@dividend+1,7
  1161  00E5  28E7               	goto	u25_21
  1162  00E6  28E8               	goto	u25_20
  1163  00E7                     u25_21:
  1164  00E7  28F1               	goto	i1l907
  1165  00E8                     u25_20:
  1166  00E8                     i1l903:
  1167  00E8  09F2               	comf	___awdiv@dividend,f
  1168  00E9  09F3               	comf	___awdiv@dividend+1,f
  1169  00EA  0AF2               	incf	___awdiv@dividend,f
  1170  00EB  1903               	skipnz
  1171  00EC  0AF3               	incf	___awdiv@dividend+1,f
  1172  00ED                     i1l905:
  1173  00ED  3001               	movlw	1
  1174  00EE  00F4               	movwf	??___awdiv
  1175  00EF  0874               	movf	??___awdiv,w
  1176  00F0  06F6               	xorwf	___awdiv@sign,f
  1177  00F1                     i1l907:
  1178  00F1  01F7               	clrf	___awdiv@quotient
  1179  00F2  01F8               	clrf	___awdiv@quotient+1
  1180  00F3                     i1l909:
  1181  00F3  0870               	movf	___awdiv@divisor,w
  1182  00F4  0471               	iorwf	___awdiv@divisor+1,w
  1183  00F5  1903               	btfsc	3,2
  1184  00F6  28F8               	goto	u26_21
  1185  00F7  28F9               	goto	u26_20
  1186  00F8                     u26_21:
  1187  00F8  2930               	goto	i1l929
  1188  00F9                     u26_20:
  1189  00F9                     i1l911:
  1190  00F9  01F5               	clrf	___awdiv@counter
  1191  00FA  0AF5               	incf	___awdiv@counter,f
  1192  00FB  2907               	goto	i1l917
  1193  00FC                     i1l913:
  1194  00FC  3001               	movlw	1
  1195  00FD                     u27_25:
  1196  00FD  1003               	clrc
  1197  00FE  0DF0               	rlf	___awdiv@divisor,f
  1198  00FF  0DF1               	rlf	___awdiv@divisor+1,f
  1199  0100  3EFF               	addlw	-1
  1200  0101  1D03               	skipz
  1201  0102  28FD               	goto	u27_25
  1202  0103                     i1l915:
  1203  0103  3001               	movlw	1
  1204  0104  00F4               	movwf	??___awdiv
  1205  0105  0874               	movf	??___awdiv,w
  1206  0106  07F5               	addwf	___awdiv@counter,f
  1207  0107                     i1l917:
  1208  0107  1FF1               	btfss	___awdiv@divisor+1,7
  1209  0108  290A               	goto	u28_21
  1210  0109  290B               	goto	u28_20
  1211  010A                     u28_21:
  1212  010A  28FC               	goto	i1l913
  1213  010B                     u28_20:
  1214  010B                     i1l919:
  1215  010B  3001               	movlw	1
  1216  010C                     u29_25:
  1217  010C  1003               	clrc
  1218  010D  0DF7               	rlf	___awdiv@quotient,f
  1219  010E  0DF8               	rlf	___awdiv@quotient+1,f
  1220  010F  3EFF               	addlw	-1
  1221  0110  1D03               	skipz
  1222  0111  290C               	goto	u29_25
  1223  0112  0871               	movf	___awdiv@divisor+1,w
  1224  0113  0273               	subwf	___awdiv@dividend+1,w
  1225  0114  1D03               	skipz
  1226  0115  2918               	goto	u30_25
  1227  0116  0870               	movf	___awdiv@divisor,w
  1228  0117  0272               	subwf	___awdiv@dividend,w
  1229  0118                     u30_25:
  1230  0118  1C03               	skipc
  1231  0119  291B               	goto	u30_21
  1232  011A  291C               	goto	u30_20
  1233  011B                     u30_21:
  1234  011B  2923               	goto	i1l925
  1235  011C                     u30_20:
  1236  011C                     i1l921:
  1237  011C  0870               	movf	___awdiv@divisor,w
  1238  011D  02F2               	subwf	___awdiv@dividend,f
  1239  011E  0871               	movf	___awdiv@divisor+1,w
  1240  011F  1C03               	skipc
  1241  0120  03F3               	decf	___awdiv@dividend+1,f
  1242  0121  02F3               	subwf	___awdiv@dividend+1,f
  1243  0122                     i1l923:
  1244  0122  1477               	bsf	___awdiv@quotient,0
  1245  0123                     i1l925:
  1246  0123  3001               	movlw	1
  1247  0124                     u31_25:
  1248  0124  1003               	clrc
  1249  0125  0CF1               	rrf	___awdiv@divisor+1,f
  1250  0126  0CF0               	rrf	___awdiv@divisor,f
  1251  0127  3EFF               	addlw	-1
  1252  0128  1D03               	skipz
  1253  0129  2924               	goto	u31_25
  1254  012A                     i1l927:
  1255  012A  3001               	movlw	1
  1256  012B  02F5               	subwf	___awdiv@counter,f
  1257  012C  1D03               	btfss	3,2
  1258  012D  292F               	goto	u32_21
  1259  012E  2930               	goto	u32_20
  1260  012F                     u32_21:
  1261  012F  290B               	goto	i1l919
  1262  0130                     u32_20:
  1263  0130                     i1l929:
  1264  0130  0876               	movf	___awdiv@sign,w
  1265  0131  1903               	btfsc	3,2
  1266  0132  2934               	goto	u33_21
  1267  0133  2935               	goto	u33_20
  1268  0134                     u33_21:
  1269  0134  293A               	goto	i1l933
  1270  0135                     u33_20:
  1271  0135                     i1l931:
  1272  0135  09F7               	comf	___awdiv@quotient,f
  1273  0136  09F8               	comf	___awdiv@quotient+1,f
  1274  0137  0AF7               	incf	___awdiv@quotient,f
  1275  0138  1903               	skipnz
  1276  0139  0AF8               	incf	___awdiv@quotient+1,f
  1277  013A                     i1l933:
  1278  013A  0878               	movf	___awdiv@quotient+1,w
  1279  013B  00F1               	movwf	?___awdiv+1
  1280  013C  0877               	movf	___awdiv@quotient,w
  1281  013D  00F0               	movwf	?___awdiv
  1282  013E                     i1l320:
  1283  013E  0008               	return
  1284  013F                     __end_of___awdiv:
  1285  007E                     btemp	set	126	;btemp
  1286  007E                     wtemp0	set	126
  1287                           
  1288                           	psect	config
  1289                           
  1290                           ;Config register CONFIG1 @ 0x2007
  1291                           ;	Oscillator Selection bits
  1292                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1293                           ;	Watchdog Timer Enable bit
  1294                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1295                           ;	Power-up Timer Enable bit
  1296                           ;	PWRTE = ON, PWRT enabled
  1297                           ;	RE3/MCLR pin function select bit
  1298                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1299                           ;	Code Protection bit
  1300                           ;	CP = OFF, Program memory code protection is disabled
  1301                           ;	Data Code Protection bit
  1302                           ;	CPD = OFF, Data memory code protection is disabled
  1303                           ;	Brown Out Reset Selection bits
  1304                           ;	BOREN = OFF, BOR disabled
  1305                           ;	Internal External Switchover bit
  1306                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1307                           ;	Fail-Safe Clock Monitor Enabled bit
  1308                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1309                           ;	Low Voltage Programming Enable bit
  1310                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1311                           ;	In-Circuit Debugger Mode bit
  1312                           ;	DEBUG = 0x1, unprogrammed default
  1313  2007                     	org	8199
  1314  2007  30C4               	dw	12484
  1315                           
  1316                           ;Config register CONFIG2 @ 0x2008
  1317                           ;	Brown-out Reset Selection bit
  1318                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1319                           ;	Flash Program Memory Self Write Enable bits
  1320                           ;	WRT = OFF, Write protection off
  1321  2008                     	org	8200
  1322  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      7      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  6     6      0    1204
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Apr 19 19:43:54 2021

                      _c 0031                        pc 0002             ___awdiv@sign 0076  
                     fsr 0004                      u450 01CE                      u451 01CD  
                    u460 01D7                      u461 01D6                      _dec 007C  
                    _cen 007D                      _isr 002B                      fsr0 0004  
                    _uni 007B                      indf 0000             ___awmod@sign 0076  
                   l1021 019E                     l1031 01A8                     l1023 01A1  
                   l1041 01B0                     l1033 01A9                     l1025 01A2  
                   l1051 01B7                     l1043 01B1                     l1035 01AC  
                   l1027 01A3                     l1019 0198                     l1061 01BC  
                   l1053 01B8                     l1045 01B2                     l1037 01AD  
                   l1029 01A7                     l1071 01C4                     l1063 01BD  
                   l1055 01B9                     l1047 01B3                     l1039 01AE  
                   l1081 01D7                     l1073 01C5                     l1065 01C1  
                   l1057 01BA                     l1049 01B6                     l1091 01E5  
                   l1083 01D9                     l1075 01C8                     l1067 01C2  
                   l1059 01BB                     l1085 01DE                     l1077 01C9  
                   l1069 01C3                     l1087 01E0                     l1079 01CE  
                   l1089 01E2                     _ADIF 0066                     ?_isr 0070  
                   _T0IF 005A                     i1l70 00CF                     i1l66 0097  
                   i1l68 00A3                     i1l69 00B1                     _TMR0 0001  
                   _main 0198                     btemp 007E                     start 0010  
                  ??_isr 002A                    ?_main 0070          __end_of___awdiv 013F  
        __end_of___awmod 0198          ___awdiv@divisor 0070                    i1l320 013E  
                  i1l333 0197                    i1l901 00E4                    i1l911 00F9  
                  i1l903 00E8                    i1l921 011C                    i1l913 00FC  
                  i1l905 00ED                    i1l931 0135                    i1l923 0122  
                  i1l915 0103                    i1l907 00F1                    i1l933 013A  
                  i1l925 0123                    i1l917 0107                    i1l909 00F3  
                  i1l941 0144                    i1l927 012A                    i1l919 010B  
                  i1l951 015A                    i1l943 0149                    i1l929 0130  
                  i1l961 0176                    i1l953 015D                    i1l945 014B  
                  i1l937 013F                    i1l971 0193                    i1l963 017C  
                  i1l955 0164                    i1l947 014F                    i1l939 0140  
                  i1l893 00D8                    i1l965 0183                    i1l957 0168  
                  i1l949 0154                    i1l981 0032                    i1l895 00D9  
                  i1l959 016C                    i1l967 0189                    i1l991 0092  
                  i1l983 0033                    i1l975 002B                    i1l897 00DD  
                  i1l969 018E                    i1l993 0093                    i1l985 0037  
                  i1l977 002F                    i1l899 00E2                    i1l995 0094  
                  i1l987 008F                    i1l979 0031                    i1l997 0095  
                  i1l989 0091                    i1l999 009A          ___awdiv@counter 0075  
                  u30_20 011C                    u30_21 011B                    u30_25 0118  
                  u31_25 0124                    u32_20 0130                    u24_20 00DD  
                  u32_21 012F                    u24_21 00DC                    u40_25 017D  
                  u33_20 0135                    u25_20 00E8                    u41_20 0189  
                  u33_21 0134                    u25_21 00E7                    u41_21 0188  
                  u26_20 00F9                    u42_20 018E                    u34_20 0144  
                  u26_21 00F8                    u42_21 018D                    u34_21 0143  
                  u35_20 014F                    u43_20 002F                    u35_21 014E  
                  u43_21 002E                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    u27_25 00FD                    u28_20 010B  
                  u36_20 015A                    u44_20 0037                    u28_21 010A  
                  u36_21 0159                    u44_21 0036                    u29_25 010C  
                  u37_25 015E                    u38_20 016C                    u38_21 016B  
                  u39_20 0176                    u39_21 0175                    u39_25 0172  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _tabla 0020                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 01EC  
                 ??_main 0030                   _ADRESH 001E         ___awdiv@dividend 0072  
                 _ANSELH 0189                   i1l1001 00A0                   i1l1003 00A6  
                 i1l1005 00AC                   i1l1013 00BC                   i1l1007 00B4  
                 i1l1113 00C4                   i1l1009 00BA                ??___awdiv 0074  
              ??___awmod 0074                   _cenres 007A         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075                   saved_w 007E  
__end_of__initialization 0027           __pcstackCOMMON 0070             __pidataBANK0 01FF  
         _OPTION_REGbits 0081               __pbssBANK0 0031               __pmaintext 0198  
             __pintentry 0004                  ___awdiv 00D8                  ___awmod 013F  
              _ANSELbits 0188                  __ptext1 002B                  __ptext2 013F  
                __ptext3 00D8                  _dispvar 0079             __size_of_isr 00AD  
       ___awmod@dividend 0072     end_of_initialization 0027                _PORTAbits 0005  
              _PORTBbits 0006      start_initialization 0013              __end_of_isr 00D8  
             init_fetch0 01EC              __pdataBANK0 0020              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 002A                 ?___awdiv 0070  
               ?___awmod 0070        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 0067         __size_of___awmod 0059            __size_of_main 0054  
             _INTCONbits 000B                 init_ram0 01F0                 intlevel1 0000  
             _OSCCONbits 008F  
