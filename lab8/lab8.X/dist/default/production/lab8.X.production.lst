

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 00:36:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataBANK0
   212  0203                     __pidataBANK0:
   213                           
   214                           ;initializer for _tabla
   215  0203  343F               	retlw	63
   216  0204  3406               	retlw	6
   217  0205  345B               	retlw	91
   218  0206  344F               	retlw	79
   219  0207  3466               	retlw	102
   220  0208  346D               	retlw	109
   221  0209  347D               	retlw	125
   222  020A  3407               	retlw	7
   223  020B  347F               	retlw	127
   224  020C  346F               	retlw	111
   225  0005                     _PORTA	set	5
   226  0008                     _PORTD	set	8
   227  0005                     _PORTAbits	set	5
   228  000B                     _INTCONbits	set	11
   229  0001                     _TMR0	set	1
   230  000C                     _PIR1bits	set	12
   231  001E                     _ADRESH	set	30
   232  0007                     _PORTC	set	7
   233  001F                     _ADCON0bits	set	31
   234  005A                     _T0IF	set	90
   235  0066                     _ADIF	set	102
   236  008C                     _PIE1bits	set	140
   237  0081                     _OPTION_REGbits	set	129
   238  009F                     _ADCON1bits	set	159
   239  0088                     _TRISD	set	136
   240  0087                     _TRISC	set	135
   241  0085                     _TRISA	set	133
   242  008F                     _OSCCONbits	set	143
   243  0188                     _ANSELbits	set	392
   244  0189                     _ANSELH	set	393
   245                           
   246                           	psect	cinit
   247  0013                     start_initialization:	
   248                           ; #config settings
   249                           
   250  0013                     __initialization:
   251                           
   252                           ; Initialize objects allocated to BANK0
   253  0013  1383               	bcf	3,7	;select IRP bank0
   254  0014  302A               	movlw	low (__pdataBANK0+10)
   255  0015  00FD               	movwf	btemp+-1
   256  0016  3002               	movlw	high __pidataBANK0
   257  0017  00FE               	movwf	btemp
   258  0018  3003               	movlw	low __pidataBANK0
   259  0019  00FF               	movwf	btemp+1
   260  001A  3020               	movlw	low __pdataBANK0
   261  001B  0084               	movwf	4
   262  001C  120A  118A  21F4  120A  118A  	fcall	init_ram0
   263                           
   264                           ; Clear objects allocated to BANK0
   265  0021  01B0               	clrf	__pbssBANK0& (0+127)
   266  0022  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   267                           
   268                           ; Clear objects allocated to COMMON
   269  0023  01F9               	clrf	__pbssCOMMON& (0+127)
   270  0024  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   271  0025  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   272  0026  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   273  0027  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   274  0028                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  0028                     __end_of__initialization:
   278  0028  0183               	clrf	3
   279  0029  120A  118A  29B6   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	bssCOMMON
   282  0079                     __pbssCOMMON:
   283  0079                     _cenres:
   284  0079                     	ds	1
   285  007A                     _uni:
   286  007A                     	ds	1
   287  007B                     _dec:
   288  007B                     	ds	1
   289  007C                     _cen:
   290  007C                     	ds	1
   291  007D                     _c:
   292  007D                     	ds	1
   293                           
   294                           	psect	bssBANK0
   295  0030                     __pbssBANK0:
   296  0030                     _dispvar:
   297  0030                     	ds	1
   298  0031                     _d:
   299  0031                     	ds	1
   300                           
   301                           	psect	dataBANK0
   302  0020                     __pdataBANK0:
   303  0020                     _tabla:
   304  0020                     	ds	10
   305                           
   306                           	psect	inittext
   307  01F0                     init_fetch0:	
   308                           ;	Called with low address in FSR and high address in W
   309                           
   310  01F0  087E               	movf	btemp,w
   311  01F1  008A               	movwf	10
   312  01F2  087F               	movf	btemp+1,w
   313  01F3  0082               	movwf	2
   314  01F4                     init_ram0:	
   315                           ;Called with:
   316                           ;	high address of idata address in btemp 
   317                           ;	low address of idata address in btemp+1 
   318                           ;	low address of data in FSR
   319                           ;	high address + 1 of data in btemp-1
   320                           
   321  01F4  120A  118A  21F0  120A  118A  	fcall	init_fetch0
   322  01F9  0080               	movwf	0
   323  01FA  0A84               	incf	4,f
   324  01FB  0804               	movf	4,w
   325  01FC  067D               	xorwf	btemp+-1,w
   326  01FD  1903               	btfsc	3,2
   327  01FE  3400               	retlw	0
   328  01FF  0AFF               	incf	btemp+1,f
   329  0200  1903               	btfsc	3,2
   330  0201  0AFE               	incf	btemp,f
   331  0202  29F4               	goto	init_ram0
   332                           
   333                           	psect	cstackCOMMON
   334  0070                     __pcstackCOMMON:
   335  0070                     ?_isr:
   336  0070                     ?_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?___awdiv:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?___awmod:	
   343                           ; 2 bytes @ 0x0
   344                           
   345  0070                     ___awdiv@divisor:	
   346                           ; 2 bytes @ 0x0
   347                           
   348  0070                     ___awmod@divisor:	
   349                           ; 2 bytes @ 0x0
   350                           
   351                           
   352                           ; 2 bytes @ 0x0
   353  0070                     	ds	2
   354  0072                     ___awdiv@dividend:
   355  0072                     ___awmod@dividend:	
   356                           ; 2 bytes @ 0x2
   357                           
   358                           
   359                           ; 2 bytes @ 0x2
   360  0072                     	ds	2
   361  0074                     ??___awdiv:
   362  0074                     ??___awmod:	
   363                           ; 1 bytes @ 0x4
   364                           
   365                           
   366                           ; 1 bytes @ 0x4
   367  0074                     	ds	1
   368  0075                     ___awdiv@counter:
   369  0075                     ___awmod@counter:	
   370                           ; 1 bytes @ 0x5
   371                           
   372                           
   373                           ; 1 bytes @ 0x5
   374  0075                     	ds	1
   375  0076                     ___awdiv@sign:
   376  0076                     ___awmod@sign:	
   377                           ; 1 bytes @ 0x6
   378                           
   379                           
   380                           ; 1 bytes @ 0x6
   381  0076                     	ds	1
   382  0077                     ___awdiv@quotient:
   383                           
   384                           ; 2 bytes @ 0x7
   385  0077                     	ds	2
   386                           
   387                           	psect	cstackBANK0
   388  002A                     __pcstackBANK0:
   389  002A                     ??_isr:
   390                           
   391                           ; 1 bytes @ 0x0
   392  002A                     	ds	6
   393  0030                     ??_main:
   394                           
   395                           	psect	maintext
   396  01B6                     __pmaintext:	
   397                           ; 1 bytes @ 0x6
   398 ;;
   399 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   400 ;;
   401 ;; *************** function _main *****************
   402 ;; Defined at:
   403 ;;		line 109 in file "lab8.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0
   412 ;; Tracked objects:
   413 ;;		On entry : B00/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels required when called:    2
   423 ;; This function calls:
   424 ;;		Nothing
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           
   431                           ;psect for function _main
   432  01B6                     _main:
   433  01B6                     l1028:	
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg+status,2+status,0]
   436                           
   437                           
   438                           ;lab8.c: 110:     OPTION_REGbits.PS0 = 1;
   439  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   440  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   441  01B8  01B1               	clrf	_d
   442  01B9                     l1030:
   443                           
   444                           ;lab8.c: 113:     INTCONbits.T0IF = 0;
   445  01B9  1683               	bsf	3,5	;RP0=1, select bank1
   446  01BA  1303               	bcf	3,6	;RP1=0, select bank1
   447  01BB  170F               	bsf	15,6	;volatile
   448  01BC                     l1032:
   449                           
   450                           ;lab8.c: 114: 
   451  01BC  128F               	bcf	15,5	;volatile
   452  01BD                     l1034:
   453                           
   454                           ;lab8.c: 115:     INTCONbits.GIE = 1;
   455  01BD  120F               	bcf	15,4	;volatile
   456  01BE                     l1036:
   457                           
   458                           ;lab8.c: 116:     INTCONbits.T0IE = 1;
   459  01BE  140F               	bsf	15,0	;volatile
   460                           
   461                           ;lab8.c: 118:     PIE1bits.ADIE = 1;
   462  01BF  1683               	bsf	3,5	;RP0=1, select bank3
   463  01C0  1703               	bsf	3,6	;RP1=1, select bank3
   464  01C1  0189               	clrf	9	;volatile
   465  01C2                     l1038:
   466                           
   467                           ;lab8.c: 119:     dispvar = 0;
   468  01C2  1408               	bsf	8,0	;volatile
   469  01C3                     l1040:
   470                           
   471                           ;lab8.c: 120:     while (1)
   472  01C3  1488               	bsf	8,1	;volatile
   473  01C4                     l1042:
   474                           
   475                           ;lab8.c: 121:     {}
   476  01C4  3003               	movlw	3
   477  01C5  1683               	bsf	3,5	;RP0=1, select bank1
   478  01C6  1303               	bcf	3,6	;RP1=0, select bank1
   479  01C7  0085               	movwf	5	;volatile
   480  01C8                     l1044:
   481                           
   482                           ;lab8.c: 122: 
   483  01C8  0187               	clrf	7	;volatile
   484  01C9                     l1046:
   485                           
   486                           ;lab8.c: 123: }
   487  01C9  0188               	clrf	8	;volatile
   488  01CA                     l1048:
   489  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   490  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   491  01CC  0185               	clrf	5	;volatile
   492  01CD                     l1050:
   493  01CD  0187               	clrf	7	;volatile
   494  01CE                     l1052:
   495  01CE  0188               	clrf	8	;volatile
   496  01CF                     l1054:
   497  01CF  303F               	movlw	-193
   498  01D0  059F               	andwf	31,f	;volatile
   499  01D1                     l1056:
   500  01D1  111F               	bcf	31,2	;volatile
   501  01D2                     l1058:
   502  01D2  141F               	bsf	31,0	;volatile
   503  01D3                     l1060:
   504  01D3  149F               	bsf	31,1	;volatile
   505  01D4                     l1062:
   506  01D4  1683               	bsf	3,5	;RP0=1, select bank1
   507  01D5  1303               	bcf	3,6	;RP1=0, select bank1
   508  01D6  129F               	bcf	31,5	;volatile
   509  01D7                     l1064:
   510  01D7  121F               	bcf	31,4	;volatile
   511  01D8                     l1066:
   512  01D8  139F               	bcf	31,7	;volatile
   513  01D9                     l1068:
   514  01D9  1281               	bcf	1,5	;volatile
   515  01DA                     l1070:
   516  01DA  1181               	bcf	1,3	;volatile
   517  01DB                     l1072:
   518  01DB  1101               	bcf	1,2	;volatile
   519  01DC                     l1074:
   520  01DC  1481               	bsf	1,1	;volatile
   521  01DD                     l1076:
   522  01DD  1401               	bsf	1,0	;volatile
   523  01DE                     l1078:
   524  01DE  3064               	movlw	100
   525  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   526  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   527  01E1  0081               	movwf	1	;volatile
   528  01E2                     l1080:
   529  01E2  110B               	bcf	11,2	;volatile
   530  01E3                     l1082:
   531  01E3  178B               	bsf	11,7	;volatile
   532  01E4                     l1084:
   533  01E4  168B               	bsf	11,5	;volatile
   534  01E5                     l1086:
   535  01E5  170B               	bsf	11,6	;volatile
   536  01E6                     l1088:
   537  01E6  1683               	bsf	3,5	;RP0=1, select bank1
   538  01E7  1303               	bcf	3,6	;RP1=0, select bank1
   539  01E8  170C               	bsf	12,6	;volatile
   540  01E9                     l1090:
   541  01E9  1283               	bcf	3,5	;RP0=0, select bank0
   542  01EA  1303               	bcf	3,6	;RP1=0, select bank0
   543  01EB  01B0               	clrf	_dispvar
   544  01EC                     l77:
   545  01EC                     l78:
   546  01EC  29EC               	goto	l77
   547  01ED  120A  118A  2810   	ljmp	start
   548  01F0                     __end_of_main:
   549                           
   550                           	psect	text1
   551  002C                     __ptext1:	
   552 ;; *************** function _isr *****************
   553 ;; Defined at:
   554 ;;		line 51 in file "lab8.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       6       0       0       0
   571 ;;      Totals:         0       6       0       0       0
   572 ;;Total ram usage:        6 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    1
   575 ;; This function calls:
   576 ;;		___awdiv
   577 ;;		___awmod
   578 ;; This function is called by:
   579 ;;		Interrupt level 1
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           
   584                           ;psect for function _isr
   585  002C                     _isr:
   586  002C                     i1l974:
   587                           
   588                           ;lab8.c: 53:             case 0:
   589  002C  1F0C               	btfss	12,6	;volatile
   590  002D  282F               	goto	u42_21
   591  002E  2830               	goto	u42_20
   592  002F                     u42_21:
   593  002F  2851               	goto	i1l992
   594  0030                     u42_20:
   595  0030                     i1l976:
   596                           
   597                           ;lab8.c: 56:                 PORTAbits.RA7 = 0;
   598  0030  0C1F               	rrf	31,w	;volatile
   599  0031  00AA               	movwf	??_isr
   600  0032  0C2A               	rrf	??_isr,w
   601  0033  390F               	andlw	15
   602  0034  3A00               	xorlw	0
   603  0035  1D03               	skipz
   604  0036  2838               	goto	u43_21
   605  0037  2839               	goto	u43_20
   606  0038                     u43_21:
   607  0038  2840               	goto	i1l982
   608  0039                     u43_20:
   609  0039                     i1l978:
   610                           
   611                           ;lab8.c: 57:                 PORTD = tabla[cen];
   612  0039  081E               	movf	30,w	;volatile
   613  003A  0087               	movwf	7	;volatile
   614  003B                     i1l980:
   615                           
   616                           ;lab8.c: 58:                 dispvar = 1;
   617  003B  081F               	movf	31,w	;volatile
   618  003C  39C3               	andlw	-61
   619  003D  3804               	iorlw	4
   620  003E  009F               	movwf	31	;volatile
   621                           
   622                           ;lab8.c: 59:                 break;
   623  003F  2846               	goto	i1l986
   624  0040                     i1l982:
   625                           
   626                           ;lab8.c: 62:                 PORTAbits.RA6 = 1;
   627  0040  081E               	movf	30,w	;volatile
   628  0041  00AA               	movwf	??_isr
   629  0042  082A               	movf	??_isr,w
   630  0043  00FD               	movwf	_c
   631  0044                     i1l984:
   632                           
   633                           ;lab8.c: 63:                 PORTAbits.RA7 = 0;
   634  0044  30C3               	movlw	-61
   635  0045  059F               	andwf	31,f	;volatile
   636  0046                     i1l986:
   637                           
   638                           ;lab8.c: 65:                 dispvar = 2;
   639  0046  300F               	movlw	15
   640  0047  1283               	bcf	3,5	;RP0=0, select bank0
   641  0048  1303               	bcf	3,6	;RP1=0, select bank0
   642  0049  00AA               	movwf	??_isr
   643  004A                     u45_27:
   644  004A  0BAA               	decfsz	??_isr,f
   645  004B  284A               	goto	u45_27
   646  004C  284D               	nop2
   647  004D                     i1l988:
   648                           
   649                           ;lab8.c: 66:                 break;
   650  004D  1283               	bcf	3,5	;RP0=0, select bank0
   651  004E  1303               	bcf	3,6	;RP1=0, select bank0
   652  004F  130C               	bcf	12,6	;volatile
   653  0050                     i1l990:
   654                           
   655                           ;lab8.c: 67:             case 2:
   656  0050  149F               	bsf	31,1	;volatile
   657  0051                     i1l992:
   658                           
   659                           ;lab8.c: 70:                 PORTAbits.RA7 = 1;
   660  0051  1D0B               	btfss	11,2	;volatile
   661  0052  2854               	goto	u44_21
   662  0053  2855               	goto	u44_20
   663  0054                     u44_21:
   664  0054  28ED               	goto	i1l72
   665  0055                     u44_20:
   666  0055                     i1l994:
   667                           
   668                           ;lab8.c: 71:                 PORTD = tabla[uni];
   669  0055  3064               	movlw	100
   670  0056  00F0               	movwf	___awdiv@divisor
   671  0057  3000               	movlw	0
   672  0058  00F1               	movwf	___awdiv@divisor+1
   673  0059  087D               	movf	_c,w
   674  005A  00AA               	movwf	??_isr
   675  005B  01AB               	clrf	??_isr+1
   676  005C  082A               	movf	??_isr,w
   677  005D  00F2               	movwf	___awdiv@dividend
   678  005E  082B               	movf	??_isr+1,w
   679  005F  00F3               	movwf	___awdiv@dividend+1
   680  0060  120A  118A  20F6  120A  118A  	fcall	___awdiv
   681  0065  0870               	movf	?___awdiv,w
   682  0066  1283               	bcf	3,5	;RP0=0, select bank0
   683  0067  1303               	bcf	3,6	;RP1=0, select bank0
   684  0068  00AC               	movwf	??_isr+2
   685  0069  082C               	movf	??_isr+2,w
   686  006A  00FC               	movwf	_cen
   687                           
   688                           ;lab8.c: 72:                 dispvar = 0;
   689  006B  3064               	movlw	100
   690  006C  00F0               	movwf	___awmod@divisor
   691  006D  3000               	movlw	0
   692  006E  00F1               	movwf	___awmod@divisor+1
   693  006F  087D               	movf	_c,w
   694  0070  00AA               	movwf	??_isr
   695  0071  01AB               	clrf	??_isr+1
   696  0072  082A               	movf	??_isr,w
   697  0073  00F2               	movwf	___awmod@dividend
   698  0074  082B               	movf	??_isr+1,w
   699  0075  00F3               	movwf	___awmod@dividend+1
   700  0076  120A  118A  215D  120A  118A  	fcall	___awmod
   701  007B  0870               	movf	?___awmod,w
   702  007C  1283               	bcf	3,5	;RP0=0, select bank0
   703  007D  1303               	bcf	3,6	;RP1=0, select bank0
   704  007E  00AC               	movwf	??_isr+2
   705  007F  082C               	movf	??_isr+2,w
   706  0080  00F9               	movwf	_cenres
   707                           
   708                           ;lab8.c: 73:                 break;
   709  0081  300A               	movlw	10
   710  0082  00F0               	movwf	___awdiv@divisor
   711  0083  3000               	movlw	0
   712  0084  00F1               	movwf	___awdiv@divisor+1
   713  0085  0879               	movf	_cenres,w
   714  0086  00AA               	movwf	??_isr
   715  0087  01AB               	clrf	??_isr+1
   716  0088  082A               	movf	??_isr,w
   717  0089  00F2               	movwf	___awdiv@dividend
   718  008A  082B               	movf	??_isr+1,w
   719  008B  00F3               	movwf	___awdiv@dividend+1
   720  008C  120A  118A  20F6  120A  118A  	fcall	___awdiv
   721  0091  0870               	movf	?___awdiv,w
   722  0092  1283               	bcf	3,5	;RP0=0, select bank0
   723  0093  1303               	bcf	3,6	;RP1=0, select bank0
   724  0094  00AC               	movwf	??_isr+2
   725  0095  082C               	movf	??_isr+2,w
   726  0096  00FB               	movwf	_dec
   727                           
   728                           ;lab8.c: 74:         }
   729  0097  300A               	movlw	10
   730  0098  00F0               	movwf	___awmod@divisor
   731  0099  3000               	movlw	0
   732  009A  00F1               	movwf	___awmod@divisor+1
   733  009B  0879               	movf	_cenres,w
   734  009C  00AA               	movwf	??_isr
   735  009D  01AB               	clrf	??_isr+1
   736  009E  082A               	movf	??_isr,w
   737  009F  00F2               	movwf	___awmod@dividend
   738  00A0  082B               	movf	??_isr+1,w
   739  00A1  00F3               	movwf	___awmod@dividend+1
   740  00A2  120A  118A  215D  120A  118A  	fcall	___awmod
   741  00A7  0870               	movf	?___awmod,w
   742  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   743  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   744  00AA  00AC               	movwf	??_isr+2
   745  00AB  082C               	movf	??_isr+2,w
   746  00AC  00FA               	movwf	_uni
   747  00AD                     i1l996:
   748                           
   749                           ;lab8.c: 75:     }
   750  00AD  3064               	movlw	100
   751  00AE  0081               	movwf	1	;volatile
   752  00AF                     i1l998:
   753                           
   754                           ;lab8.c: 76: 
   755  00AF  110B               	bcf	11,2	;volatile
   756  00B0                     i1l1000:
   757                           
   758                           ;lab8.c: 77: }
   759  00B0  1205               	bcf	5,4	;volatile
   760  00B1                     i1l1002:
   761                           
   762                           ;lab8.c: 78: 
   763  00B1  1305               	bcf	5,6	;volatile
   764  00B2                     i1l1004:
   765                           
   766                           ;lab8.c: 79: void main(void) {
   767  00B2  1385               	bcf	5,7	;volatile
   768  00B3                     i1l1006:
   769                           
   770                           ;lab8.c: 80:     d = 0;
   771  00B3  0188               	clrf	8	;volatile
   772                           
   773                           ;lab8.c: 82: 
   774  00B4  28DA               	goto	i1l1022
   775  00B5                     i1l68:	
   776                           ;lab8.c: 83:     OSCCONbits.IRCF2 = 1;
   777                           
   778                           
   779                           ;lab8.c: 84:     OSCCONbits.IRCF1 = 0;
   780  00B5  1605               	bsf	5,4	;volatile
   781                           
   782                           ;lab8.c: 85:     OSCCONbits.IRCF0 = 0;
   783  00B6  1305               	bcf	5,6	;volatile
   784                           
   785                           ;lab8.c: 86:     OSCCONbits.SCS = 1;
   786  00B7  1385               	bcf	5,7	;volatile
   787  00B8                     i1l1008:
   788                           
   789                           ;lab8.c: 87: 
   790  00B8  087C               	movf	_cen,w
   791  00B9  3E20               	addlw	(low (_tabla| 0))& (0+255)
   792  00BA  0084               	movwf	4
   793  00BB  1383               	bcf	3,7	;select IRP bank0
   794  00BC  0800               	movf	0,w
   795  00BD  0088               	movwf	8	;volatile
   796  00BE                     i1l1010:
   797                           
   798                           ;lab8.c: 88:     ANSELH = 0;
   799  00BE  01B0               	clrf	_dispvar
   800  00BF  0AB0               	incf	_dispvar,f
   801                           
   802                           ;lab8.c: 89:     ANSELbits.ANS0 = 1;
   803  00C0  28ED               	goto	i1l72
   804  00C1                     i1l70:	
   805                           ;lab8.c: 90:     ANSELbits.ANS1 = 1;
   806                           
   807                           
   808                           ;lab8.c: 91:     TRISA = 3;
   809  00C1  1205               	bcf	5,4	;volatile
   810                           
   811                           ;lab8.c: 92:     TRISC = 0;
   812  00C2  1705               	bsf	5,6	;volatile
   813                           
   814                           ;lab8.c: 93:     TRISD = 0;
   815  00C3  1385               	bcf	5,7	;volatile
   816  00C4                     i1l1012:
   817                           
   818                           ;lab8.c: 94:     PORTA = 0;
   819  00C4  087B               	movf	_dec,w
   820  00C5  3E20               	addlw	(low (_tabla| 0))& (0+255)
   821  00C6  0084               	movwf	4
   822  00C7  1383               	bcf	3,7	;select IRP bank0
   823  00C8  0800               	movf	0,w
   824  00C9  0088               	movwf	8	;volatile
   825  00CA                     i1l1014:
   826                           
   827                           ;lab8.c: 95:     PORTC = 0;
   828  00CA  3002               	movlw	2
   829  00CB  00AA               	movwf	??_isr
   830  00CC  082A               	movf	??_isr,w
   831  00CD  00B0               	movwf	_dispvar
   832                           
   833                           ;lab8.c: 96:     PORTD = 0;
   834  00CE  28ED               	goto	i1l72
   835  00CF                     i1l71:	
   836                           ;lab8.c: 97: 
   837                           
   838                           
   839                           ;lab8.c: 98:     ADCON0bits.ADCS = 0;
   840  00CF  1205               	bcf	5,4	;volatile
   841                           
   842                           ;lab8.c: 99:     ADCON0bits.CHS0 = 0;
   843  00D0  1305               	bcf	5,6	;volatile
   844                           
   845                           ;lab8.c: 100:     ADCON0bits.ADON = 1;
   846  00D1  1785               	bsf	5,7	;volatile
   847  00D2                     i1l1016:
   848                           
   849                           ;lab8.c: 101:     ADCON0bits.GO = 1;
   850  00D2  087A               	movf	_uni,w
   851  00D3  3E20               	addlw	(low (_tabla| 0))& (0+255)
   852  00D4  0084               	movwf	4
   853  00D5  1383               	bcf	3,7	;select IRP bank0
   854  00D6  0800               	movf	0,w
   855  00D7  0088               	movwf	8	;volatile
   856  00D8                     i1l1018:
   857                           
   858                           ;lab8.c: 102:     ADCON1bits.VCFG1 = 0;
   859  00D8  01B0               	clrf	_dispvar
   860                           
   861                           ;lab8.c: 103:     ADCON1bits.VCFG0 = 0;
   862  00D9  28ED               	goto	i1l72
   863  00DA                     i1l1022:
   864  00DA  0830               	movf	_dispvar,w
   865  00DB  00AA               	movwf	??_isr
   866  00DC  01AB               	clrf	??_isr+1
   867                           
   868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   869                           ; Switch size 1, requested type "simple"
   870                           ; Number of cases is 1, Range of values is 0 to 0
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; simple_byte            4     3 (average)
   874                           ; direct_byte           11     8 (fixed)
   875                           ; jumptable            260     6 (fixed)
   876                           ;	Chosen strategy is simple_byte
   877  00DD  082B               	movf	??_isr+1,w
   878  00DE  3A00               	xorlw	0	; case 0
   879  00DF  1903               	skipnz
   880  00E0  28E2               	goto	i1l1112
   881  00E1  28ED               	goto	i1l72
   882  00E2                     i1l1112:
   883                           
   884                           ; Switch size 1, requested type "simple"
   885                           ; Number of cases is 3, Range of values is 0 to 2
   886                           ; switch strategies available:
   887                           ; Name         Instructions Cycles
   888                           ; simple_byte           10     6 (average)
   889                           ; direct_byte           17     8 (fixed)
   890                           ; jumptable            260     6 (fixed)
   891                           ;	Chosen strategy is simple_byte
   892  00E2  082A               	movf	??_isr,w
   893  00E3  3A00               	xorlw	0	; case 0
   894  00E4  1903               	skipnz
   895  00E5  28B5               	goto	i1l68
   896  00E6  3A01               	xorlw	1	; case 1
   897  00E7  1903               	skipnz
   898  00E8  28C1               	goto	i1l70
   899  00E9  3A03               	xorlw	3	; case 2
   900  00EA  1903               	skipnz
   901  00EB  28CF               	goto	i1l71
   902  00EC  28ED               	goto	i1l72
   903  00ED                     i1l72:
   904  00ED  082F               	movf	??_isr+5,w
   905  00EE  008A               	movwf	10
   906  00EF  082E               	movf	??_isr+4,w
   907  00F0  0084               	movwf	4
   908  00F1  0E2D               	swapf	??_isr+3,w
   909  00F2  0083               	movwf	3
   910  00F3  0EFE               	swapf	btemp,f
   911  00F4  0E7E               	swapf	btemp,w
   912  00F5  0009               	retfie
   913  00F6                     __end_of_isr:
   914                           
   915                           	psect	intentry
   916  0004                     __pintentry:	
   917                           ;incstack = 0
   918                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   919                           
   920  0004                     interrupt_function:
   921  007E                     saved_w	set	btemp
   922  0004  00FE               	movwf	btemp
   923  0005  0E03               	swapf	3,w
   924  0006  1283               	bcf	3,5	;RP0=0, select bank0
   925  0007  1303               	bcf	3,6	;RP1=0, select bank0
   926  0008  00AD               	movwf	??_isr+3
   927  0009  0804               	movf	4,w
   928  000A  00AE               	movwf	??_isr+4
   929  000B  080A               	movf	10,w
   930  000C  00AF               	movwf	??_isr+5
   931  000D  120A  118A  282C   	ljmp	_isr
   932                           
   933                           	psect	text2
   934  015D                     __ptext2:	
   935 ;; *************** function ___awmod *****************
   936 ;; Defined at:
   937 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  divisor         2    0[COMMON] int 
   940 ;;  dividend        2    2[COMMON] int 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  sign            1    6[COMMON] unsigned char 
   943 ;;  counter         1    5[COMMON] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2    0[COMMON] int 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         4       0       0       0       0
   954 ;;      Locals:         2       0       0       0       0
   955 ;;      Temps:          1       0       0       0       0
   956 ;;      Totals:         7       0       0       0       0
   957 ;;Total ram usage:        7 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_isr
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function ___awmod
   968  015D                     ___awmod:
   969  015D                     i1l936:	
   970                           ;incstack = 0
   971                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   972                           
   973  015D  01F6               	clrf	___awmod@sign
   974  015E                     i1l938:
   975  015E  1FF3               	btfss	___awmod@dividend+1,7
   976  015F  2961               	goto	u33_21
   977  0160  2962               	goto	u33_20
   978  0161                     u33_21:
   979  0161  2969               	goto	i1l944
   980  0162                     u33_20:
   981  0162                     i1l940:
   982  0162  09F2               	comf	___awmod@dividend,f
   983  0163  09F3               	comf	___awmod@dividend+1,f
   984  0164  0AF2               	incf	___awmod@dividend,f
   985  0165  1903               	skipnz
   986  0166  0AF3               	incf	___awmod@dividend+1,f
   987  0167                     i1l942:
   988  0167  01F6               	clrf	___awmod@sign
   989  0168  0AF6               	incf	___awmod@sign,f
   990  0169                     i1l944:
   991  0169  1FF1               	btfss	___awmod@divisor+1,7
   992  016A  296C               	goto	u34_21
   993  016B  296D               	goto	u34_20
   994  016C                     u34_21:
   995  016C  2972               	goto	i1l948
   996  016D                     u34_20:
   997  016D                     i1l946:
   998  016D  09F0               	comf	___awmod@divisor,f
   999  016E  09F1               	comf	___awmod@divisor+1,f
  1000  016F  0AF0               	incf	___awmod@divisor,f
  1001  0170  1903               	skipnz
  1002  0171  0AF1               	incf	___awmod@divisor+1,f
  1003  0172                     i1l948:
  1004  0172  0870               	movf	___awmod@divisor,w
  1005  0173  0471               	iorwf	___awmod@divisor+1,w
  1006  0174  1903               	btfsc	3,2
  1007  0175  2977               	goto	u35_21
  1008  0176  2978               	goto	u35_20
  1009  0177                     u35_21:
  1010  0177  29A7               	goto	i1l966
  1011  0178                     u35_20:
  1012  0178                     i1l950:
  1013  0178  01F5               	clrf	___awmod@counter
  1014  0179  0AF5               	incf	___awmod@counter,f
  1015  017A  2986               	goto	i1l956
  1016  017B                     i1l952:
  1017  017B  3001               	movlw	1
  1018  017C                     u36_25:
  1019  017C  1003               	clrc
  1020  017D  0DF0               	rlf	___awmod@divisor,f
  1021  017E  0DF1               	rlf	___awmod@divisor+1,f
  1022  017F  3EFF               	addlw	-1
  1023  0180  1D03               	skipz
  1024  0181  297C               	goto	u36_25
  1025  0182                     i1l954:
  1026  0182  3001               	movlw	1
  1027  0183  00F4               	movwf	??___awmod
  1028  0184  0874               	movf	??___awmod,w
  1029  0185  07F5               	addwf	___awmod@counter,f
  1030  0186                     i1l956:
  1031  0186  1FF1               	btfss	___awmod@divisor+1,7
  1032  0187  2989               	goto	u37_21
  1033  0188  298A               	goto	u37_20
  1034  0189                     u37_21:
  1035  0189  297B               	goto	i1l952
  1036  018A                     u37_20:
  1037  018A                     i1l958:
  1038  018A  0871               	movf	___awmod@divisor+1,w
  1039  018B  0273               	subwf	___awmod@dividend+1,w
  1040  018C  1D03               	skipz
  1041  018D  2990               	goto	u38_25
  1042  018E  0870               	movf	___awmod@divisor,w
  1043  018F  0272               	subwf	___awmod@dividend,w
  1044  0190                     u38_25:
  1045  0190  1C03               	skipc
  1046  0191  2993               	goto	u38_21
  1047  0192  2994               	goto	u38_20
  1048  0193                     u38_21:
  1049  0193  299A               	goto	i1l962
  1050  0194                     u38_20:
  1051  0194                     i1l960:
  1052  0194  0870               	movf	___awmod@divisor,w
  1053  0195  02F2               	subwf	___awmod@dividend,f
  1054  0196  0871               	movf	___awmod@divisor+1,w
  1055  0197  1C03               	skipc
  1056  0198  03F3               	decf	___awmod@dividend+1,f
  1057  0199  02F3               	subwf	___awmod@dividend+1,f
  1058  019A                     i1l962:
  1059  019A  3001               	movlw	1
  1060  019B                     u39_25:
  1061  019B  1003               	clrc
  1062  019C  0CF1               	rrf	___awmod@divisor+1,f
  1063  019D  0CF0               	rrf	___awmod@divisor,f
  1064  019E  3EFF               	addlw	-1
  1065  019F  1D03               	skipz
  1066  01A0  299B               	goto	u39_25
  1067  01A1                     i1l964:
  1068  01A1  3001               	movlw	1
  1069  01A2  02F5               	subwf	___awmod@counter,f
  1070  01A3  1D03               	btfss	3,2
  1071  01A4  29A6               	goto	u40_21
  1072  01A5  29A7               	goto	u40_20
  1073  01A6                     u40_21:
  1074  01A6  298A               	goto	i1l958
  1075  01A7                     u40_20:
  1076  01A7                     i1l966:
  1077  01A7  0876               	movf	___awmod@sign,w
  1078  01A8  1903               	btfsc	3,2
  1079  01A9  29AB               	goto	u41_21
  1080  01AA  29AC               	goto	u41_20
  1081  01AB                     u41_21:
  1082  01AB  29B1               	goto	i1l970
  1083  01AC                     u41_20:
  1084  01AC                     i1l968:
  1085  01AC  09F2               	comf	___awmod@dividend,f
  1086  01AD  09F3               	comf	___awmod@dividend+1,f
  1087  01AE  0AF2               	incf	___awmod@dividend,f
  1088  01AF  1903               	skipnz
  1089  01B0  0AF3               	incf	___awmod@dividend+1,f
  1090  01B1                     i1l970:
  1091  01B1  0873               	movf	___awmod@dividend+1,w
  1092  01B2  00F1               	movwf	?___awmod+1
  1093  01B3  0872               	movf	___awmod@dividend,w
  1094  01B4  00F0               	movwf	?___awmod
  1095  01B5                     i1l332:
  1096  01B5  0008               	return
  1097  01B6                     __end_of___awmod:
  1098                           
  1099                           	psect	text3
  1100  00F6                     __ptext3:	
  1101 ;; *************** function ___awdiv *****************
  1102 ;; Defined at:
  1103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  divisor         2    0[COMMON] int 
  1106 ;;  dividend        2    2[COMMON] int 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  quotient        2    7[COMMON] int 
  1109 ;;  sign            1    6[COMMON] unsigned char 
  1110 ;;  counter         1    5[COMMON] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  2    0[COMMON] int 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1120 ;;      Params:         4       0       0       0       0
  1121 ;;      Locals:         4       0       0       0       0
  1122 ;;      Temps:          1       0       0       0       0
  1123 ;;      Totals:         9       0       0       0       0
  1124 ;;Total ram usage:        9 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_isr
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function ___awdiv
  1135  00F6                     ___awdiv:
  1136  00F6                     i1l892:	
  1137                           ;incstack = 0
  1138                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1139                           
  1140  00F6  01F6               	clrf	___awdiv@sign
  1141  00F7                     i1l894:
  1142  00F7  1FF1               	btfss	___awdiv@divisor+1,7
  1143  00F8  28FA               	goto	u23_21
  1144  00F9  28FB               	goto	u23_20
  1145  00FA                     u23_21:
  1146  00FA  2902               	goto	i1l900
  1147  00FB                     u23_20:
  1148  00FB                     i1l896:
  1149  00FB  09F0               	comf	___awdiv@divisor,f
  1150  00FC  09F1               	comf	___awdiv@divisor+1,f
  1151  00FD  0AF0               	incf	___awdiv@divisor,f
  1152  00FE  1903               	skipnz
  1153  00FF  0AF1               	incf	___awdiv@divisor+1,f
  1154  0100                     i1l898:
  1155  0100  01F6               	clrf	___awdiv@sign
  1156  0101  0AF6               	incf	___awdiv@sign,f
  1157  0102                     i1l900:
  1158  0102  1FF3               	btfss	___awdiv@dividend+1,7
  1159  0103  2905               	goto	u24_21
  1160  0104  2906               	goto	u24_20
  1161  0105                     u24_21:
  1162  0105  290F               	goto	i1l906
  1163  0106                     u24_20:
  1164  0106                     i1l902:
  1165  0106  09F2               	comf	___awdiv@dividend,f
  1166  0107  09F3               	comf	___awdiv@dividend+1,f
  1167  0108  0AF2               	incf	___awdiv@dividend,f
  1168  0109  1903               	skipnz
  1169  010A  0AF3               	incf	___awdiv@dividend+1,f
  1170  010B                     i1l904:
  1171  010B  3001               	movlw	1
  1172  010C  00F4               	movwf	??___awdiv
  1173  010D  0874               	movf	??___awdiv,w
  1174  010E  06F6               	xorwf	___awdiv@sign,f
  1175  010F                     i1l906:
  1176  010F  01F7               	clrf	___awdiv@quotient
  1177  0110  01F8               	clrf	___awdiv@quotient+1
  1178  0111                     i1l908:
  1179  0111  0870               	movf	___awdiv@divisor,w
  1180  0112  0471               	iorwf	___awdiv@divisor+1,w
  1181  0113  1903               	btfsc	3,2
  1182  0114  2916               	goto	u25_21
  1183  0115  2917               	goto	u25_20
  1184  0116                     u25_21:
  1185  0116  294E               	goto	i1l928
  1186  0117                     u25_20:
  1187  0117                     i1l910:
  1188  0117  01F5               	clrf	___awdiv@counter
  1189  0118  0AF5               	incf	___awdiv@counter,f
  1190  0119  2925               	goto	i1l916
  1191  011A                     i1l912:
  1192  011A  3001               	movlw	1
  1193  011B                     u26_25:
  1194  011B  1003               	clrc
  1195  011C  0DF0               	rlf	___awdiv@divisor,f
  1196  011D  0DF1               	rlf	___awdiv@divisor+1,f
  1197  011E  3EFF               	addlw	-1
  1198  011F  1D03               	skipz
  1199  0120  291B               	goto	u26_25
  1200  0121                     i1l914:
  1201  0121  3001               	movlw	1
  1202  0122  00F4               	movwf	??___awdiv
  1203  0123  0874               	movf	??___awdiv,w
  1204  0124  07F5               	addwf	___awdiv@counter,f
  1205  0125                     i1l916:
  1206  0125  1FF1               	btfss	___awdiv@divisor+1,7
  1207  0126  2928               	goto	u27_21
  1208  0127  2929               	goto	u27_20
  1209  0128                     u27_21:
  1210  0128  291A               	goto	i1l912
  1211  0129                     u27_20:
  1212  0129                     i1l918:
  1213  0129  3001               	movlw	1
  1214  012A                     u28_25:
  1215  012A  1003               	clrc
  1216  012B  0DF7               	rlf	___awdiv@quotient,f
  1217  012C  0DF8               	rlf	___awdiv@quotient+1,f
  1218  012D  3EFF               	addlw	-1
  1219  012E  1D03               	skipz
  1220  012F  292A               	goto	u28_25
  1221  0130  0871               	movf	___awdiv@divisor+1,w
  1222  0131  0273               	subwf	___awdiv@dividend+1,w
  1223  0132  1D03               	skipz
  1224  0133  2936               	goto	u29_25
  1225  0134  0870               	movf	___awdiv@divisor,w
  1226  0135  0272               	subwf	___awdiv@dividend,w
  1227  0136                     u29_25:
  1228  0136  1C03               	skipc
  1229  0137  2939               	goto	u29_21
  1230  0138  293A               	goto	u29_20
  1231  0139                     u29_21:
  1232  0139  2941               	goto	i1l924
  1233  013A                     u29_20:
  1234  013A                     i1l920:
  1235  013A  0870               	movf	___awdiv@divisor,w
  1236  013B  02F2               	subwf	___awdiv@dividend,f
  1237  013C  0871               	movf	___awdiv@divisor+1,w
  1238  013D  1C03               	skipc
  1239  013E  03F3               	decf	___awdiv@dividend+1,f
  1240  013F  02F3               	subwf	___awdiv@dividend+1,f
  1241  0140                     i1l922:
  1242  0140  1477               	bsf	___awdiv@quotient,0
  1243  0141                     i1l924:
  1244  0141  3001               	movlw	1
  1245  0142                     u30_25:
  1246  0142  1003               	clrc
  1247  0143  0CF1               	rrf	___awdiv@divisor+1,f
  1248  0144  0CF0               	rrf	___awdiv@divisor,f
  1249  0145  3EFF               	addlw	-1
  1250  0146  1D03               	skipz
  1251  0147  2942               	goto	u30_25
  1252  0148                     i1l926:
  1253  0148  3001               	movlw	1
  1254  0149  02F5               	subwf	___awdiv@counter,f
  1255  014A  1D03               	btfss	3,2
  1256  014B  294D               	goto	u31_21
  1257  014C  294E               	goto	u31_20
  1258  014D                     u31_21:
  1259  014D  2929               	goto	i1l918
  1260  014E                     u31_20:
  1261  014E                     i1l928:
  1262  014E  0876               	movf	___awdiv@sign,w
  1263  014F  1903               	btfsc	3,2
  1264  0150  2952               	goto	u32_21
  1265  0151  2953               	goto	u32_20
  1266  0152                     u32_21:
  1267  0152  2958               	goto	i1l932
  1268  0153                     u32_20:
  1269  0153                     i1l930:
  1270  0153  09F7               	comf	___awdiv@quotient,f
  1271  0154  09F8               	comf	___awdiv@quotient+1,f
  1272  0155  0AF7               	incf	___awdiv@quotient,f
  1273  0156  1903               	skipnz
  1274  0157  0AF8               	incf	___awdiv@quotient+1,f
  1275  0158                     i1l932:
  1276  0158  0878               	movf	___awdiv@quotient+1,w
  1277  0159  00F1               	movwf	?___awdiv+1
  1278  015A  0877               	movf	___awdiv@quotient,w
  1279  015B  00F0               	movwf	?___awdiv
  1280  015C                     i1l319:
  1281  015C  0008               	return
  1282  015D                     __end_of___awdiv:
  1283  007E                     btemp	set	126	;btemp
  1284  007E                     wtemp0	set	126
  1285                           
  1286                           	psect	config
  1287                           
  1288                           ;Config register CONFIG1 @ 0x2007
  1289                           ;	Oscillator Selection bits
  1290                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1291                           ;	Watchdog Timer Enable bit
  1292                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1293                           ;	Power-up Timer Enable bit
  1294                           ;	PWRTE = ON, PWRT enabled
  1295                           ;	RE3/MCLR pin function select bit
  1296                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1297                           ;	Code Protection bit
  1298                           ;	CP = OFF, Program memory code protection is disabled
  1299                           ;	Data Code Protection bit
  1300                           ;	CPD = OFF, Data memory code protection is disabled
  1301                           ;	Brown Out Reset Selection bits
  1302                           ;	BOREN = OFF, BOR disabled
  1303                           ;	Internal External Switchover bit
  1304                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1305                           ;	Fail-Safe Clock Monitor Enabled bit
  1306                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1307                           ;	Low Voltage Programming Enable bit
  1308                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1309                           ;	In-Circuit Debugger Mode bit
  1310                           ;	DEBUG = 0x1, unprogrammed default
  1311  2007                     	org	8199
  1312  2007  30C4               	dw	12484
  1313                           
  1314                           ;Config register CONFIG2 @ 0x2008
  1315                           ;	Brown-out Reset Selection bit
  1316                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1317                           ;	Flash Program Memory Self Write Enable bits
  1318                           ;	WRT = OFF, Write protection off
  1319  2008                     	org	8200
  1320  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      6      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  6     6      0    1204
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 00:36:28 2021

                      _c 007D                        _d 0031                        pc 0002  
                     l77 01EC                       l78 01EC             ___awdiv@sign 0076  
                     fsr 0004                      _dec 007B                      _cen 007C  
                    _isr 002C                      fsr0 0004                      _uni 007A  
                    indf 0000             ___awmod@sign 0076                     l1030 01B9  
                   l1040 01C3                     l1032 01BC                     l1050 01CD  
                   l1042 01C4                     l1034 01BD                     l1060 01D3  
                   l1052 01CE                     l1044 01C8                     l1036 01BE  
                   l1028 01B6                     l1070 01DA                     l1062 01D4  
                   l1054 01CF                     l1046 01C9                     l1038 01C2  
                   l1080 01E2                     l1072 01DB                     l1064 01D7  
                   l1056 01D1                     l1048 01CA                     l1090 01E9  
                   l1082 01E3                     l1074 01DC                     l1066 01D8  
                   l1058 01D2                     l1084 01E4                     l1076 01DD  
                   l1068 01D9                     l1086 01E5                     l1078 01DE  
                   l1088 01E6                     _ADIF 0066                     ?_isr 0070  
                   _T0IF 005A                     i1l70 00C1                     i1l71 00CF  
                   i1l72 00ED                     i1l68 00B5                     _TMR0 0001  
                   _main 01B6                     btemp 007E                     start 0010  
                  ??_isr 002A                    ?_main 0070          __end_of___awdiv 015D  
        __end_of___awmod 01B6          ___awdiv@divisor 0070                    i1l332 01B5  
                  i1l319 015C                    i1l900 0102                    i1l910 0117  
                  i1l902 0106                    i1l920 013A                    i1l912 011A  
                  i1l904 010B                    i1l930 0153                    i1l922 0140  
                  i1l914 0121                    i1l906 010F                    i1l932 0158  
                  i1l924 0141                    i1l916 0125                    i1l908 0111  
                  i1l940 0162                    i1l926 0148                    i1l918 0129  
                  i1l950 0178                    i1l942 0167                    i1l928 014E  
                  i1l960 0194                    i1l952 017B                    i1l944 0169  
                  i1l936 015D                    i1l970 01B1                    i1l962 019A  
                  i1l954 0182                    i1l946 016D                    i1l938 015E  
                  i1l892 00F6                    i1l964 01A1                    i1l956 0186  
                  i1l948 0172                    i1l980 003B                    i1l894 00F7  
                  i1l958 018A                    i1l966 01A7                    i1l990 0050  
                  i1l982 0040                    i1l974 002C                    i1l896 00FB  
                  i1l968 01AC                    i1l984 0044                    i1l976 0030  
                  i1l992 0051                    i1l898 0100                    i1l994 0055  
                  i1l986 0046                    i1l978 0039                    i1l996 00AD  
                  i1l988 004D                    i1l998 00AF          ___awdiv@counter 0075  
                  u30_25 0142                    u31_20 014E                    u23_20 00FB  
                  u31_21 014D                    u23_21 00FA                    u32_20 0153  
                  u24_20 0106                    u40_20 01A7                    u32_21 0152  
                  u24_21 0105                    u40_21 01A6                    u25_20 0117  
                  u41_20 01AC                    u33_20 0162                    u25_21 0116  
                  u41_21 01AB                    u33_21 0161                    u34_20 016D  
                  u42_20 0030                    u34_21 016C                    u42_21 002F  
                  u26_25 011B                    u27_20 0129                    u35_20 0178  
                  u43_20 0039                    u27_21 0128                    u35_21 0177  
                  u43_21 0038                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    u44_20 0055                    u44_21 0054  
                  u28_25 012A                    u36_25 017C                    u29_20 013A  
                  u37_20 018A                    u29_21 0139                    u37_21 0189  
                  u29_25 0136                    u45_27 004A                    u38_20 0194  
                  u38_21 0193                    u38_25 0190                    u39_25 019B  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _tabla 0020                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 01F0  
                 ??_main 0030                   _ADRESH 001E         ___awdiv@dividend 0072  
                 _ANSELH 0189                   i1l1000 00B0                   i1l1010 00BE  
                 i1l1002 00B1                   i1l1012 00C4                   i1l1004 00B2  
                 i1l1014 00CA                   i1l1022 00DA                   i1l1006 00B3  
                 i1l1112 00E2                   i1l1016 00D2                   i1l1008 00B8  
                 i1l1018 00D8                ??___awdiv 0074                ??___awmod 0074  
                 _cenres 0079         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                   saved_w 007E  __end_of__initialization 0028  
         __pcstackCOMMON 0070             __pidataBANK0 0203           _OPTION_REGbits 0081  
             __pbssBANK0 0030               __pmaintext 01B6               __pintentry 0004  
                ___awdiv 00F6                  ___awmod 015D                _ANSELbits 0188  
                __ptext1 002C                  __ptext2 015D                  __ptext3 00F6  
                _dispvar 0030             __size_of_isr 00CA         ___awmod@dividend 0072  
   end_of_initialization 0028                _PORTAbits 0005      start_initialization 0013  
            __end_of_isr 00F6               init_fetch0 01F0              __pdataBANK0 0020  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 002A  
               ?___awdiv 0070                 ?___awmod 0070        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of___awdiv 0067         __size_of___awmod 0059  
          __size_of_main 003A               _INTCONbits 000B                 init_ram0 01F4  
               intlevel1 0000               _OSCCONbits 008F  
