

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Apr 19 20:44:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataBANK0
   212  0203                     __pidataBANK0:
   213                           
   214                           ;initializer for _tabla
   215  0203  343F               	retlw	63
   216  0204  3406               	retlw	6
   217  0205  345B               	retlw	91
   218  0206  344F               	retlw	79
   219  0207  3466               	retlw	102
   220  0208  346D               	retlw	109
   221  0209  347D               	retlw	125
   222  020A  3407               	retlw	7
   223  020B  347F               	retlw	127
   224  020C  346F               	retlw	111
   225  0005                     _PORTA	set	5
   226  0005                     _PORTAbits	set	5
   227  0008                     _PORTD	set	8
   228  0006                     _PORTBbits	set	6
   229  000B                     _INTCONbits	set	11
   230  0001                     _TMR0	set	1
   231  000C                     _PIR1bits	set	12
   232  001E                     _ADRESH	set	30
   233  0007                     _PORTC	set	7
   234  001F                     _ADCON0bits	set	31
   235  005A                     _T0IF	set	90
   236  0066                     _ADIF	set	102
   237  008C                     _PIE1bits	set	140
   238  0081                     _OPTION_REGbits	set	129
   239  009F                     _ADCON1bits	set	159
   240  0088                     _TRISD	set	136
   241  0087                     _TRISC	set	135
   242  0085                     _TRISA	set	133
   243  008F                     _OSCCONbits	set	143
   244  0188                     _ANSELbits	set	392
   245  0189                     _ANSELH	set	393
   246                           
   247                           	psect	cinit
   248  0013                     start_initialization:	
   249                           ; #config settings
   250                           
   251  0013                     __initialization:
   252                           
   253                           ; Initialize objects allocated to BANK0
   254  0013  1383               	bcf	3,7	;select IRP bank0
   255  0014  302A               	movlw	low (__pdataBANK0+10)
   256  0015  00FD               	movwf	btemp+-1
   257  0016  3002               	movlw	high __pidataBANK0
   258  0017  00FE               	movwf	btemp
   259  0018  3003               	movlw	low __pidataBANK0
   260  0019  00FF               	movwf	btemp+1
   261  001A  3020               	movlw	low __pdataBANK0
   262  001B  0084               	movwf	4
   263  001C  120A  118A  21F4  120A  118A  	fcall	init_ram0
   264                           
   265                           ; Clear objects allocated to BANK0
   266  0021  01B0               	clrf	__pbssBANK0& (0+127)
   267  0022  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   268                           
   269                           ; Clear objects allocated to COMMON
   270  0023  01F9               	clrf	__pbssCOMMON& (0+127)
   271  0024  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   272  0025  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   273  0026  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   274  0027  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   275  0028                     end_of_initialization:	
   276                           ;End of C runtime variable initialization code
   277                           
   278  0028                     __end_of__initialization:
   279  0028  0183               	clrf	3
   280  0029  120A  118A  29B6   	ljmp	_main	;jump to C main() function
   281                           
   282                           	psect	bssCOMMON
   283  0079                     __pbssCOMMON:
   284  0079                     _cenres:
   285  0079                     	ds	1
   286  007A                     _uni:
   287  007A                     	ds	1
   288  007B                     _dec:
   289  007B                     	ds	1
   290  007C                     _cen:
   291  007C                     	ds	1
   292  007D                     _c:
   293  007D                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296  0030                     __pbssBANK0:
   297  0030                     _dispvar:
   298  0030                     	ds	1
   299  0031                     _d:
   300  0031                     	ds	1
   301                           
   302                           	psect	dataBANK0
   303  0020                     __pdataBANK0:
   304  0020                     _tabla:
   305  0020                     	ds	10
   306                           
   307                           	psect	inittext
   308  01F0                     init_fetch0:	
   309                           ;	Called with low address in FSR and high address in W
   310                           
   311  01F0  087E               	movf	btemp,w
   312  01F1  008A               	movwf	10
   313  01F2  087F               	movf	btemp+1,w
   314  01F3  0082               	movwf	2
   315  01F4                     init_ram0:	
   316                           ;Called with:
   317                           ;	high address of idata address in btemp 
   318                           ;	low address of idata address in btemp+1 
   319                           ;	low address of data in FSR
   320                           ;	high address + 1 of data in btemp-1
   321                           
   322  01F4  120A  118A  21F0  120A  118A  	fcall	init_fetch0
   323  01F9  0080               	movwf	0
   324  01FA  0A84               	incf	4,f
   325  01FB  0804               	movf	4,w
   326  01FC  067D               	xorwf	btemp+-1,w
   327  01FD  1903               	btfsc	3,2
   328  01FE  3400               	retlw	0
   329  01FF  0AFF               	incf	btemp+1,f
   330  0200  1903               	btfsc	3,2
   331  0201  0AFE               	incf	btemp,f
   332  0202  29F4               	goto	init_ram0
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:
   336  0070                     ?_isr:
   337  0070                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?___awdiv:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?___awmod:	
   344                           ; 2 bytes @ 0x0
   345                           
   346  0070                     ___awdiv@divisor:	
   347                           ; 2 bytes @ 0x0
   348                           
   349  0070                     ___awmod@divisor:	
   350                           ; 2 bytes @ 0x0
   351                           
   352                           
   353                           ; 2 bytes @ 0x0
   354  0070                     	ds	2
   355  0072                     ___awdiv@dividend:
   356  0072                     ___awmod@dividend:	
   357                           ; 2 bytes @ 0x2
   358                           
   359                           
   360                           ; 2 bytes @ 0x2
   361  0072                     	ds	2
   362  0074                     ??___awdiv:
   363  0074                     ??___awmod:	
   364                           ; 1 bytes @ 0x4
   365                           
   366                           
   367                           ; 1 bytes @ 0x4
   368  0074                     	ds	1
   369  0075                     ___awdiv@counter:
   370  0075                     ___awmod@counter:	
   371                           ; 1 bytes @ 0x5
   372                           
   373                           
   374                           ; 1 bytes @ 0x5
   375  0075                     	ds	1
   376  0076                     ___awdiv@sign:
   377  0076                     ___awmod@sign:	
   378                           ; 1 bytes @ 0x6
   379                           
   380                           
   381                           ; 1 bytes @ 0x6
   382  0076                     	ds	1
   383  0077                     ___awdiv@quotient:
   384                           
   385                           ; 2 bytes @ 0x7
   386  0077                     	ds	2
   387                           
   388                           	psect	cstackBANK0
   389  002A                     __pcstackBANK0:
   390  002A                     ??_isr:
   391                           
   392                           ; 1 bytes @ 0x0
   393  002A                     	ds	6
   394  0030                     ??_main:
   395                           
   396                           	psect	maintext
   397  01B6                     __pmaintext:	
   398                           ; 1 bytes @ 0x6
   399 ;;
   400 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   401 ;;
   402 ;; *************** function _main *****************
   403 ;; Defined at:
   404 ;;		line 109 in file "lab8.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0
   413 ;; Tracked objects:
   414 ;;		On entry : B00/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels required when called:    2
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		Startup code after reset
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _main
   433  01B6                     _main:
   434  01B6                     l1030:	
   435                           ;incstack = 0
   436                           ; Regs used in _main: [wreg+status,2+status,0]
   437                           
   438                           
   439                           ;lab8.c: 110:     OPTION_REGbits.PS0 = 1;
   440  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   441  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   442  01B8  01B1               	clrf	_d
   443  01B9                     l1032:
   444                           
   445                           ;lab8.c: 113:     INTCONbits.T0IF = 0;
   446  01B9  1683               	bsf	3,5	;RP0=1, select bank1
   447  01BA  1303               	bcf	3,6	;RP1=0, select bank1
   448  01BB  170F               	bsf	15,6	;volatile
   449  01BC                     l1034:
   450                           
   451                           ;lab8.c: 114: 
   452  01BC  128F               	bcf	15,5	;volatile
   453  01BD                     l1036:
   454                           
   455                           ;lab8.c: 115:     INTCONbits.GIE = 1;
   456  01BD  120F               	bcf	15,4	;volatile
   457  01BE                     l1038:
   458                           
   459                           ;lab8.c: 116:     INTCONbits.T0IE = 1;
   460  01BE  140F               	bsf	15,0	;volatile
   461                           
   462                           ;lab8.c: 118:     PIE1bits.ADIE = 1;
   463  01BF  1683               	bsf	3,5	;RP0=1, select bank3
   464  01C0  1703               	bsf	3,6	;RP1=1, select bank3
   465  01C1  0189               	clrf	9	;volatile
   466  01C2                     l1040:
   467                           
   468                           ;lab8.c: 119:     dispvar = 0;
   469  01C2  1408               	bsf	8,0	;volatile
   470  01C3                     l1042:
   471                           
   472                           ;lab8.c: 120:     while (1)
   473  01C3  1488               	bsf	8,1	;volatile
   474  01C4                     l1044:
   475                           
   476                           ;lab8.c: 121:     {}
   477  01C4  3003               	movlw	3
   478  01C5  1683               	bsf	3,5	;RP0=1, select bank1
   479  01C6  1303               	bcf	3,6	;RP1=0, select bank1
   480  01C7  0085               	movwf	5	;volatile
   481  01C8                     l1046:
   482                           
   483                           ;lab8.c: 122: 
   484  01C8  0187               	clrf	7	;volatile
   485  01C9                     l1048:
   486                           
   487                           ;lab8.c: 123: }
   488  01C9  0188               	clrf	8	;volatile
   489  01CA                     l1050:
   490  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   491  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   492  01CC  0185               	clrf	5	;volatile
   493  01CD                     l1052:
   494  01CD  0187               	clrf	7	;volatile
   495  01CE                     l1054:
   496  01CE  0188               	clrf	8	;volatile
   497  01CF                     l1056:
   498  01CF  303F               	movlw	-193
   499  01D0  059F               	andwf	31,f	;volatile
   500  01D1                     l1058:
   501  01D1  111F               	bcf	31,2	;volatile
   502  01D2                     l1060:
   503  01D2  141F               	bsf	31,0	;volatile
   504  01D3                     l1062:
   505  01D3  149F               	bsf	31,1	;volatile
   506  01D4                     l1064:
   507  01D4  1683               	bsf	3,5	;RP0=1, select bank1
   508  01D5  1303               	bcf	3,6	;RP1=0, select bank1
   509  01D6  129F               	bcf	31,5	;volatile
   510  01D7                     l1066:
   511  01D7  121F               	bcf	31,4	;volatile
   512  01D8                     l1068:
   513  01D8  139F               	bcf	31,7	;volatile
   514  01D9                     l1070:
   515  01D9  1281               	bcf	1,5	;volatile
   516  01DA                     l1072:
   517  01DA  1181               	bcf	1,3	;volatile
   518  01DB                     l1074:
   519  01DB  1101               	bcf	1,2	;volatile
   520  01DC                     l1076:
   521  01DC  1481               	bsf	1,1	;volatile
   522  01DD                     l1078:
   523  01DD  1401               	bsf	1,0	;volatile
   524  01DE                     l1080:
   525  01DE  3064               	movlw	100
   526  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   527  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   528  01E1  0081               	movwf	1	;volatile
   529  01E2                     l1082:
   530  01E2  110B               	bcf	11,2	;volatile
   531  01E3                     l1084:
   532  01E3  178B               	bsf	11,7	;volatile
   533  01E4                     l1086:
   534  01E4  168B               	bsf	11,5	;volatile
   535  01E5                     l1088:
   536  01E5  170B               	bsf	11,6	;volatile
   537  01E6                     l1090:
   538  01E6  1683               	bsf	3,5	;RP0=1, select bank1
   539  01E7  1303               	bcf	3,6	;RP1=0, select bank1
   540  01E8  170C               	bsf	12,6	;volatile
   541  01E9                     l1092:
   542  01E9  1283               	bcf	3,5	;RP0=0, select bank0
   543  01EA  1303               	bcf	3,6	;RP1=0, select bank0
   544  01EB  01B0               	clrf	_dispvar
   545  01EC                     l79:
   546  01EC                     l80:
   547  01EC  29EC               	goto	l79
   548  01ED  120A  118A  2810   	ljmp	start
   549  01F0                     __end_of_main:
   550                           
   551                           	psect	text1
   552  002C                     __ptext1:	
   553 ;; *************** function _isr *****************
   554 ;; Defined at:
   555 ;;		line 51 in file "lab8.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   569 ;;      Params:         0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0
   571 ;;      Temps:          0       6       0       0       0
   572 ;;      Totals:         0       6       0       0       0
   573 ;;Total ram usage:        6 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    1
   576 ;; This function calls:
   577 ;;		___awdiv
   578 ;;		___awmod
   579 ;; This function is called by:
   580 ;;		Interrupt level 1
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           
   585                           ;psect for function _isr
   586  002C                     _isr:
   587  002C                     i1l976:
   588                           
   589                           ;lab8.c: 53:             case 0:
   590  002C  1F0C               	btfss	12,6	;volatile
   591  002D  282F               	goto	u42_21
   592  002E  2830               	goto	u42_20
   593  002F                     u42_21:
   594  002F  2851               	goto	i1l994
   595  0030                     u42_20:
   596  0030                     i1l978:
   597                           
   598                           ;lab8.c: 56:                 PORTAbits.RA7 = 0;
   599  0030  0C1F               	rrf	31,w	;volatile
   600  0031  00AA               	movwf	??_isr
   601  0032  0C2A               	rrf	??_isr,w
   602  0033  390F               	andlw	15
   603  0034  3A00               	xorlw	0
   604  0035  1D03               	skipz
   605  0036  2838               	goto	u43_21
   606  0037  2839               	goto	u43_20
   607  0038                     u43_21:
   608  0038  2840               	goto	i1l984
   609  0039                     u43_20:
   610  0039                     i1l980:
   611                           
   612                           ;lab8.c: 57:                 PORTD = tabla[cen];
   613  0039  081E               	movf	30,w	;volatile
   614  003A  0087               	movwf	7	;volatile
   615  003B                     i1l982:
   616                           
   617                           ;lab8.c: 58:                 dispvar = 1;
   618  003B  081F               	movf	31,w	;volatile
   619  003C  39C3               	andlw	-61
   620  003D  3804               	iorlw	4
   621  003E  009F               	movwf	31	;volatile
   622                           
   623                           ;lab8.c: 59:                 break;
   624  003F  2846               	goto	i1l988
   625  0040                     i1l984:
   626                           
   627                           ;lab8.c: 62:                 PORTAbits.RA6 = 1;
   628  0040  081E               	movf	30,w	;volatile
   629  0041  00AA               	movwf	??_isr
   630  0042  082A               	movf	??_isr,w
   631  0043  00FD               	movwf	_c
   632  0044                     i1l986:
   633                           
   634                           ;lab8.c: 63:                 PORTAbits.RA7 = 0;
   635  0044  30C3               	movlw	-61
   636  0045  059F               	andwf	31,f	;volatile
   637  0046                     i1l988:
   638                           
   639                           ;lab8.c: 65:                 dispvar = 2;
   640  0046  300F               	movlw	15
   641  0047  1283               	bcf	3,5	;RP0=0, select bank0
   642  0048  1303               	bcf	3,6	;RP1=0, select bank0
   643  0049  00AA               	movwf	??_isr
   644  004A                     u45_27:
   645  004A  0BAA               	decfsz	??_isr,f
   646  004B  284A               	goto	u45_27
   647  004C  284D               	nop2
   648  004D                     i1l990:
   649                           
   650                           ;lab8.c: 66:                 break;
   651  004D  1283               	bcf	3,5	;RP0=0, select bank0
   652  004E  1303               	bcf	3,6	;RP1=0, select bank0
   653  004F  130C               	bcf	12,6	;volatile
   654  0050                     i1l992:
   655                           
   656                           ;lab8.c: 67:             case 2:
   657  0050  149F               	bsf	31,1	;volatile
   658  0051                     i1l994:
   659                           
   660                           ;lab8.c: 70:                 PORTAbits.RA7 = 1;
   661  0051  1D0B               	btfss	11,2	;volatile
   662  0052  2854               	goto	u44_21
   663  0053  2855               	goto	u44_20
   664  0054                     u44_21:
   665  0054  28ED               	goto	i1l74
   666  0055                     u44_20:
   667  0055                     i1l996:
   668                           
   669                           ;lab8.c: 71:                 PORTD = tabla[uni];
   670  0055  3064               	movlw	100
   671  0056  00F0               	movwf	___awdiv@divisor
   672  0057  3000               	movlw	0
   673  0058  00F1               	movwf	___awdiv@divisor+1
   674  0059  087D               	movf	_c,w
   675  005A  00AA               	movwf	??_isr
   676  005B  01AB               	clrf	??_isr+1
   677  005C  082A               	movf	??_isr,w
   678  005D  00F2               	movwf	___awdiv@dividend
   679  005E  082B               	movf	??_isr+1,w
   680  005F  00F3               	movwf	___awdiv@dividend+1
   681  0060  120A  118A  20F6  120A  118A  	fcall	___awdiv
   682  0065  0870               	movf	?___awdiv,w
   683  0066  1283               	bcf	3,5	;RP0=0, select bank0
   684  0067  1303               	bcf	3,6	;RP1=0, select bank0
   685  0068  00AC               	movwf	??_isr+2
   686  0069  082C               	movf	??_isr+2,w
   687  006A  00FC               	movwf	_cen
   688                           
   689                           ;lab8.c: 72:                 dispvar = 0;
   690  006B  3064               	movlw	100
   691  006C  00F0               	movwf	___awmod@divisor
   692  006D  3000               	movlw	0
   693  006E  00F1               	movwf	___awmod@divisor+1
   694  006F  087D               	movf	_c,w
   695  0070  00AA               	movwf	??_isr
   696  0071  01AB               	clrf	??_isr+1
   697  0072  082A               	movf	??_isr,w
   698  0073  00F2               	movwf	___awmod@dividend
   699  0074  082B               	movf	??_isr+1,w
   700  0075  00F3               	movwf	___awmod@dividend+1
   701  0076  120A  118A  215D  120A  118A  	fcall	___awmod
   702  007B  0870               	movf	?___awmod,w
   703  007C  1283               	bcf	3,5	;RP0=0, select bank0
   704  007D  1303               	bcf	3,6	;RP1=0, select bank0
   705  007E  00AC               	movwf	??_isr+2
   706  007F  082C               	movf	??_isr+2,w
   707  0080  00F9               	movwf	_cenres
   708                           
   709                           ;lab8.c: 73:                 break;
   710  0081  300A               	movlw	10
   711  0082  00F0               	movwf	___awdiv@divisor
   712  0083  3000               	movlw	0
   713  0084  00F1               	movwf	___awdiv@divisor+1
   714  0085  0879               	movf	_cenres,w
   715  0086  00AA               	movwf	??_isr
   716  0087  01AB               	clrf	??_isr+1
   717  0088  082A               	movf	??_isr,w
   718  0089  00F2               	movwf	___awdiv@dividend
   719  008A  082B               	movf	??_isr+1,w
   720  008B  00F3               	movwf	___awdiv@dividend+1
   721  008C  120A  118A  20F6  120A  118A  	fcall	___awdiv
   722  0091  0870               	movf	?___awdiv,w
   723  0092  1283               	bcf	3,5	;RP0=0, select bank0
   724  0093  1303               	bcf	3,6	;RP1=0, select bank0
   725  0094  00AC               	movwf	??_isr+2
   726  0095  082C               	movf	??_isr+2,w
   727  0096  00FB               	movwf	_dec
   728                           
   729                           ;lab8.c: 74:         }
   730  0097  300A               	movlw	10
   731  0098  00F0               	movwf	___awmod@divisor
   732  0099  3000               	movlw	0
   733  009A  00F1               	movwf	___awmod@divisor+1
   734  009B  0879               	movf	_cenres,w
   735  009C  00AA               	movwf	??_isr
   736  009D  01AB               	clrf	??_isr+1
   737  009E  082A               	movf	??_isr,w
   738  009F  00F2               	movwf	___awmod@dividend
   739  00A0  082B               	movf	??_isr+1,w
   740  00A1  00F3               	movwf	___awmod@dividend+1
   741  00A2  120A  118A  215D  120A  118A  	fcall	___awmod
   742  00A7  0870               	movf	?___awmod,w
   743  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   744  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   745  00AA  00AC               	movwf	??_isr+2
   746  00AB  082C               	movf	??_isr+2,w
   747  00AC  00FA               	movwf	_uni
   748  00AD                     i1l998:
   749                           
   750                           ;lab8.c: 75:     }
   751  00AD  3064               	movlw	100
   752  00AE  0081               	movwf	1	;volatile
   753  00AF                     i1l1000:
   754                           
   755                           ;lab8.c: 76: 
   756  00AF  110B               	bcf	11,2	;volatile
   757  00B0                     i1l1002:
   758                           
   759                           ;lab8.c: 77: }
   760  00B0  1106               	bcf	6,2	;volatile
   761  00B1                     i1l1004:
   762                           
   763                           ;lab8.c: 78: 
   764  00B1  1186               	bcf	6,3	;volatile
   765  00B2                     i1l1006:
   766                           
   767                           ;lab8.c: 79: void main(void) {
   768  00B2  1206               	bcf	6,4	;volatile
   769  00B3                     i1l1008:
   770                           
   771                           ;lab8.c: 80:     d = 0;
   772  00B3  0188               	clrf	8	;volatile
   773                           
   774                           ;lab8.c: 82: 
   775  00B4  28DA               	goto	i1l1024
   776  00B5                     i1l70:	
   777                           ;lab8.c: 83:     OSCCONbits.IRCF2 = 1;
   778                           
   779                           
   780                           ;lab8.c: 84:     OSCCONbits.IRCF1 = 0;
   781  00B5  1605               	bsf	5,4	;volatile
   782                           
   783                           ;lab8.c: 85:     OSCCONbits.IRCF0 = 0;
   784  00B6  1305               	bcf	5,6	;volatile
   785                           
   786                           ;lab8.c: 86:     OSCCONbits.SCS = 1;
   787  00B7  1385               	bcf	5,7	;volatile
   788  00B8                     i1l1010:
   789                           
   790                           ;lab8.c: 87: 
   791  00B8  087C               	movf	_cen,w
   792  00B9  3E20               	addlw	(low (_tabla| 0))& (0+255)
   793  00BA  0084               	movwf	4
   794  00BB  1383               	bcf	3,7	;select IRP bank0
   795  00BC  0800               	movf	0,w
   796  00BD  0088               	movwf	8	;volatile
   797  00BE                     i1l1012:
   798                           
   799                           ;lab8.c: 88:     ANSELH = 0;
   800  00BE  01B0               	clrf	_dispvar
   801  00BF  0AB0               	incf	_dispvar,f
   802                           
   803                           ;lab8.c: 89:     ANSELbits.ANS0 = 1;
   804  00C0  28ED               	goto	i1l74
   805  00C1                     i1l72:	
   806                           ;lab8.c: 90:     ANSELbits.ANS1 = 1;
   807                           
   808                           
   809                           ;lab8.c: 91:     TRISA = 3;
   810  00C1  1205               	bcf	5,4	;volatile
   811                           
   812                           ;lab8.c: 92:     TRISC = 0;
   813  00C2  1705               	bsf	5,6	;volatile
   814                           
   815                           ;lab8.c: 93:     TRISD = 0;
   816  00C3  1385               	bcf	5,7	;volatile
   817  00C4                     i1l1014:
   818                           
   819                           ;lab8.c: 94:     PORTA = 0;
   820  00C4  087B               	movf	_dec,w
   821  00C5  3E20               	addlw	(low (_tabla| 0))& (0+255)
   822  00C6  0084               	movwf	4
   823  00C7  1383               	bcf	3,7	;select IRP bank0
   824  00C8  0800               	movf	0,w
   825  00C9  0088               	movwf	8	;volatile
   826  00CA                     i1l1016:
   827                           
   828                           ;lab8.c: 95:     PORTC = 0;
   829  00CA  3002               	movlw	2
   830  00CB  00AA               	movwf	??_isr
   831  00CC  082A               	movf	??_isr,w
   832  00CD  00B0               	movwf	_dispvar
   833                           
   834                           ;lab8.c: 96:     PORTD = 0;
   835  00CE  28ED               	goto	i1l74
   836  00CF                     i1l73:	
   837                           ;lab8.c: 97: 
   838                           
   839                           
   840                           ;lab8.c: 98:     ADCON0bits.ADCS = 0;
   841  00CF  1205               	bcf	5,4	;volatile
   842                           
   843                           ;lab8.c: 99:     ADCON0bits.CHS0 = 0;
   844  00D0  1305               	bcf	5,6	;volatile
   845                           
   846                           ;lab8.c: 100:     ADCON0bits.ADON = 1;
   847  00D1  1785               	bsf	5,7	;volatile
   848  00D2                     i1l1018:
   849                           
   850                           ;lab8.c: 101:     ADCON0bits.GO = 1;
   851  00D2  087A               	movf	_uni,w
   852  00D3  3E20               	addlw	(low (_tabla| 0))& (0+255)
   853  00D4  0084               	movwf	4
   854  00D5  1383               	bcf	3,7	;select IRP bank0
   855  00D6  0800               	movf	0,w
   856  00D7  0088               	movwf	8	;volatile
   857  00D8                     i1l1020:
   858                           
   859                           ;lab8.c: 102:     ADCON1bits.VCFG1 = 0;
   860  00D8  01B0               	clrf	_dispvar
   861                           
   862                           ;lab8.c: 103:     ADCON1bits.VCFG0 = 0;
   863  00D9  28ED               	goto	i1l74
   864  00DA                     i1l1024:
   865  00DA  0830               	movf	_dispvar,w
   866  00DB  00AA               	movwf	??_isr
   867  00DC  01AB               	clrf	??_isr+1
   868                           
   869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   870                           ; Switch size 1, requested type "simple"
   871                           ; Number of cases is 1, Range of values is 0 to 0
   872                           ; switch strategies available:
   873                           ; Name         Instructions Cycles
   874                           ; simple_byte            4     3 (average)
   875                           ; direct_byte           11     8 (fixed)
   876                           ; jumptable            260     6 (fixed)
   877                           ;	Chosen strategy is simple_byte
   878  00DD  082B               	movf	??_isr+1,w
   879  00DE  3A00               	xorlw	0	; case 0
   880  00DF  1903               	skipnz
   881  00E0  28E2               	goto	i1l1114
   882  00E1  28ED               	goto	i1l74
   883  00E2                     i1l1114:
   884                           
   885                           ; Switch size 1, requested type "simple"
   886                           ; Number of cases is 3, Range of values is 0 to 2
   887                           ; switch strategies available:
   888                           ; Name         Instructions Cycles
   889                           ; simple_byte           10     6 (average)
   890                           ; direct_byte           17     8 (fixed)
   891                           ; jumptable            260     6 (fixed)
   892                           ;	Chosen strategy is simple_byte
   893  00E2  082A               	movf	??_isr,w
   894  00E3  3A00               	xorlw	0	; case 0
   895  00E4  1903               	skipnz
   896  00E5  28B5               	goto	i1l70
   897  00E6  3A01               	xorlw	1	; case 1
   898  00E7  1903               	skipnz
   899  00E8  28C1               	goto	i1l72
   900  00E9  3A03               	xorlw	3	; case 2
   901  00EA  1903               	skipnz
   902  00EB  28CF               	goto	i1l73
   903  00EC  28ED               	goto	i1l74
   904  00ED                     i1l74:
   905  00ED  082F               	movf	??_isr+5,w
   906  00EE  008A               	movwf	10
   907  00EF  082E               	movf	??_isr+4,w
   908  00F0  0084               	movwf	4
   909  00F1  0E2D               	swapf	??_isr+3,w
   910  00F2  0083               	movwf	3
   911  00F3  0EFE               	swapf	btemp,f
   912  00F4  0E7E               	swapf	btemp,w
   913  00F5  0009               	retfie
   914  00F6                     __end_of_isr:
   915                           
   916                           	psect	intentry
   917  0004                     __pintentry:	
   918                           ;incstack = 0
   919                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   920                           
   921  0004                     interrupt_function:
   922  007E                     saved_w	set	btemp
   923  0004  00FE               	movwf	btemp
   924  0005  0E03               	swapf	3,w
   925  0006  1283               	bcf	3,5	;RP0=0, select bank0
   926  0007  1303               	bcf	3,6	;RP1=0, select bank0
   927  0008  00AD               	movwf	??_isr+3
   928  0009  0804               	movf	4,w
   929  000A  00AE               	movwf	??_isr+4
   930  000B  080A               	movf	10,w
   931  000C  00AF               	movwf	??_isr+5
   932  000D  120A  118A  282C   	ljmp	_isr
   933                           
   934                           	psect	text2
   935  015D                     __ptext2:	
   936 ;; *************** function ___awmod *****************
   937 ;; Defined at:
   938 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  divisor         2    0[COMMON] int 
   941 ;;  dividend        2    2[COMMON] int 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  sign            1    6[COMMON] unsigned char 
   944 ;;  counter         1    5[COMMON] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  2    0[COMMON] int 
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         4       0       0       0       0
   955 ;;      Locals:         2       0       0       0       0
   956 ;;      Temps:          1       0       0       0       0
   957 ;;      Totals:         7       0       0       0       0
   958 ;;Total ram usage:        7 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_isr
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function ___awmod
   969  015D                     ___awmod:
   970  015D                     i1l938:	
   971                           ;incstack = 0
   972                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   973                           
   974  015D  01F6               	clrf	___awmod@sign
   975  015E                     i1l940:
   976  015E  1FF3               	btfss	___awmod@dividend+1,7
   977  015F  2961               	goto	u33_21
   978  0160  2962               	goto	u33_20
   979  0161                     u33_21:
   980  0161  2969               	goto	i1l946
   981  0162                     u33_20:
   982  0162                     i1l942:
   983  0162  09F2               	comf	___awmod@dividend,f
   984  0163  09F3               	comf	___awmod@dividend+1,f
   985  0164  0AF2               	incf	___awmod@dividend,f
   986  0165  1903               	skipnz
   987  0166  0AF3               	incf	___awmod@dividend+1,f
   988  0167                     i1l944:
   989  0167  01F6               	clrf	___awmod@sign
   990  0168  0AF6               	incf	___awmod@sign,f
   991  0169                     i1l946:
   992  0169  1FF1               	btfss	___awmod@divisor+1,7
   993  016A  296C               	goto	u34_21
   994  016B  296D               	goto	u34_20
   995  016C                     u34_21:
   996  016C  2972               	goto	i1l950
   997  016D                     u34_20:
   998  016D                     i1l948:
   999  016D  09F0               	comf	___awmod@divisor,f
  1000  016E  09F1               	comf	___awmod@divisor+1,f
  1001  016F  0AF0               	incf	___awmod@divisor,f
  1002  0170  1903               	skipnz
  1003  0171  0AF1               	incf	___awmod@divisor+1,f
  1004  0172                     i1l950:
  1005  0172  0870               	movf	___awmod@divisor,w
  1006  0173  0471               	iorwf	___awmod@divisor+1,w
  1007  0174  1903               	btfsc	3,2
  1008  0175  2977               	goto	u35_21
  1009  0176  2978               	goto	u35_20
  1010  0177                     u35_21:
  1011  0177  29A7               	goto	i1l968
  1012  0178                     u35_20:
  1013  0178                     i1l952:
  1014  0178  01F5               	clrf	___awmod@counter
  1015  0179  0AF5               	incf	___awmod@counter,f
  1016  017A  2986               	goto	i1l958
  1017  017B                     i1l954:
  1018  017B  3001               	movlw	1
  1019  017C                     u36_25:
  1020  017C  1003               	clrc
  1021  017D  0DF0               	rlf	___awmod@divisor,f
  1022  017E  0DF1               	rlf	___awmod@divisor+1,f
  1023  017F  3EFF               	addlw	-1
  1024  0180  1D03               	skipz
  1025  0181  297C               	goto	u36_25
  1026  0182                     i1l956:
  1027  0182  3001               	movlw	1
  1028  0183  00F4               	movwf	??___awmod
  1029  0184  0874               	movf	??___awmod,w
  1030  0185  07F5               	addwf	___awmod@counter,f
  1031  0186                     i1l958:
  1032  0186  1FF1               	btfss	___awmod@divisor+1,7
  1033  0187  2989               	goto	u37_21
  1034  0188  298A               	goto	u37_20
  1035  0189                     u37_21:
  1036  0189  297B               	goto	i1l954
  1037  018A                     u37_20:
  1038  018A                     i1l960:
  1039  018A  0871               	movf	___awmod@divisor+1,w
  1040  018B  0273               	subwf	___awmod@dividend+1,w
  1041  018C  1D03               	skipz
  1042  018D  2990               	goto	u38_25
  1043  018E  0870               	movf	___awmod@divisor,w
  1044  018F  0272               	subwf	___awmod@dividend,w
  1045  0190                     u38_25:
  1046  0190  1C03               	skipc
  1047  0191  2993               	goto	u38_21
  1048  0192  2994               	goto	u38_20
  1049  0193                     u38_21:
  1050  0193  299A               	goto	i1l964
  1051  0194                     u38_20:
  1052  0194                     i1l962:
  1053  0194  0870               	movf	___awmod@divisor,w
  1054  0195  02F2               	subwf	___awmod@dividend,f
  1055  0196  0871               	movf	___awmod@divisor+1,w
  1056  0197  1C03               	skipc
  1057  0198  03F3               	decf	___awmod@dividend+1,f
  1058  0199  02F3               	subwf	___awmod@dividend+1,f
  1059  019A                     i1l964:
  1060  019A  3001               	movlw	1
  1061  019B                     u39_25:
  1062  019B  1003               	clrc
  1063  019C  0CF1               	rrf	___awmod@divisor+1,f
  1064  019D  0CF0               	rrf	___awmod@divisor,f
  1065  019E  3EFF               	addlw	-1
  1066  019F  1D03               	skipz
  1067  01A0  299B               	goto	u39_25
  1068  01A1                     i1l966:
  1069  01A1  3001               	movlw	1
  1070  01A2  02F5               	subwf	___awmod@counter,f
  1071  01A3  1D03               	btfss	3,2
  1072  01A4  29A6               	goto	u40_21
  1073  01A5  29A7               	goto	u40_20
  1074  01A6                     u40_21:
  1075  01A6  298A               	goto	i1l960
  1076  01A7                     u40_20:
  1077  01A7                     i1l968:
  1078  01A7  0876               	movf	___awmod@sign,w
  1079  01A8  1903               	btfsc	3,2
  1080  01A9  29AB               	goto	u41_21
  1081  01AA  29AC               	goto	u41_20
  1082  01AB                     u41_21:
  1083  01AB  29B1               	goto	i1l972
  1084  01AC                     u41_20:
  1085  01AC                     i1l970:
  1086  01AC  09F2               	comf	___awmod@dividend,f
  1087  01AD  09F3               	comf	___awmod@dividend+1,f
  1088  01AE  0AF2               	incf	___awmod@dividend,f
  1089  01AF  1903               	skipnz
  1090  01B0  0AF3               	incf	___awmod@dividend+1,f
  1091  01B1                     i1l972:
  1092  01B1  0873               	movf	___awmod@dividend+1,w
  1093  01B2  00F1               	movwf	?___awmod+1
  1094  01B3  0872               	movf	___awmod@dividend,w
  1095  01B4  00F0               	movwf	?___awmod
  1096  01B5                     i1l334:
  1097  01B5  0008               	return
  1098  01B6                     __end_of___awmod:
  1099                           
  1100                           	psect	text3
  1101  00F6                     __ptext3:	
  1102 ;; *************** function ___awdiv *****************
  1103 ;; Defined at:
  1104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  divisor         2    0[COMMON] int 
  1107 ;;  dividend        2    2[COMMON] int 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  quotient        2    7[COMMON] int 
  1110 ;;  sign            1    6[COMMON] unsigned char 
  1111 ;;  counter         1    5[COMMON] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  2    0[COMMON] int 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1121 ;;      Params:         4       0       0       0       0
  1122 ;;      Locals:         4       0       0       0       0
  1123 ;;      Temps:          1       0       0       0       0
  1124 ;;      Totals:         9       0       0       0       0
  1125 ;;Total ram usage:        9 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; This function calls:
  1128 ;;		Nothing
  1129 ;; This function is called by:
  1130 ;;		_isr
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           
  1135                           ;psect for function ___awdiv
  1136  00F6                     ___awdiv:
  1137  00F6                     i1l894:	
  1138                           ;incstack = 0
  1139                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1140                           
  1141  00F6  01F6               	clrf	___awdiv@sign
  1142  00F7                     i1l896:
  1143  00F7  1FF1               	btfss	___awdiv@divisor+1,7
  1144  00F8  28FA               	goto	u23_21
  1145  00F9  28FB               	goto	u23_20
  1146  00FA                     u23_21:
  1147  00FA  2902               	goto	i1l902
  1148  00FB                     u23_20:
  1149  00FB                     i1l898:
  1150  00FB  09F0               	comf	___awdiv@divisor,f
  1151  00FC  09F1               	comf	___awdiv@divisor+1,f
  1152  00FD  0AF0               	incf	___awdiv@divisor,f
  1153  00FE  1903               	skipnz
  1154  00FF  0AF1               	incf	___awdiv@divisor+1,f
  1155  0100                     i1l900:
  1156  0100  01F6               	clrf	___awdiv@sign
  1157  0101  0AF6               	incf	___awdiv@sign,f
  1158  0102                     i1l902:
  1159  0102  1FF3               	btfss	___awdiv@dividend+1,7
  1160  0103  2905               	goto	u24_21
  1161  0104  2906               	goto	u24_20
  1162  0105                     u24_21:
  1163  0105  290F               	goto	i1l908
  1164  0106                     u24_20:
  1165  0106                     i1l904:
  1166  0106  09F2               	comf	___awdiv@dividend,f
  1167  0107  09F3               	comf	___awdiv@dividend+1,f
  1168  0108  0AF2               	incf	___awdiv@dividend,f
  1169  0109  1903               	skipnz
  1170  010A  0AF3               	incf	___awdiv@dividend+1,f
  1171  010B                     i1l906:
  1172  010B  3001               	movlw	1
  1173  010C  00F4               	movwf	??___awdiv
  1174  010D  0874               	movf	??___awdiv,w
  1175  010E  06F6               	xorwf	___awdiv@sign,f
  1176  010F                     i1l908:
  1177  010F  01F7               	clrf	___awdiv@quotient
  1178  0110  01F8               	clrf	___awdiv@quotient+1
  1179  0111                     i1l910:
  1180  0111  0870               	movf	___awdiv@divisor,w
  1181  0112  0471               	iorwf	___awdiv@divisor+1,w
  1182  0113  1903               	btfsc	3,2
  1183  0114  2916               	goto	u25_21
  1184  0115  2917               	goto	u25_20
  1185  0116                     u25_21:
  1186  0116  294E               	goto	i1l930
  1187  0117                     u25_20:
  1188  0117                     i1l912:
  1189  0117  01F5               	clrf	___awdiv@counter
  1190  0118  0AF5               	incf	___awdiv@counter,f
  1191  0119  2925               	goto	i1l918
  1192  011A                     i1l914:
  1193  011A  3001               	movlw	1
  1194  011B                     u26_25:
  1195  011B  1003               	clrc
  1196  011C  0DF0               	rlf	___awdiv@divisor,f
  1197  011D  0DF1               	rlf	___awdiv@divisor+1,f
  1198  011E  3EFF               	addlw	-1
  1199  011F  1D03               	skipz
  1200  0120  291B               	goto	u26_25
  1201  0121                     i1l916:
  1202  0121  3001               	movlw	1
  1203  0122  00F4               	movwf	??___awdiv
  1204  0123  0874               	movf	??___awdiv,w
  1205  0124  07F5               	addwf	___awdiv@counter,f
  1206  0125                     i1l918:
  1207  0125  1FF1               	btfss	___awdiv@divisor+1,7
  1208  0126  2928               	goto	u27_21
  1209  0127  2929               	goto	u27_20
  1210  0128                     u27_21:
  1211  0128  291A               	goto	i1l914
  1212  0129                     u27_20:
  1213  0129                     i1l920:
  1214  0129  3001               	movlw	1
  1215  012A                     u28_25:
  1216  012A  1003               	clrc
  1217  012B  0DF7               	rlf	___awdiv@quotient,f
  1218  012C  0DF8               	rlf	___awdiv@quotient+1,f
  1219  012D  3EFF               	addlw	-1
  1220  012E  1D03               	skipz
  1221  012F  292A               	goto	u28_25
  1222  0130  0871               	movf	___awdiv@divisor+1,w
  1223  0131  0273               	subwf	___awdiv@dividend+1,w
  1224  0132  1D03               	skipz
  1225  0133  2936               	goto	u29_25
  1226  0134  0870               	movf	___awdiv@divisor,w
  1227  0135  0272               	subwf	___awdiv@dividend,w
  1228  0136                     u29_25:
  1229  0136  1C03               	skipc
  1230  0137  2939               	goto	u29_21
  1231  0138  293A               	goto	u29_20
  1232  0139                     u29_21:
  1233  0139  2941               	goto	i1l926
  1234  013A                     u29_20:
  1235  013A                     i1l922:
  1236  013A  0870               	movf	___awdiv@divisor,w
  1237  013B  02F2               	subwf	___awdiv@dividend,f
  1238  013C  0871               	movf	___awdiv@divisor+1,w
  1239  013D  1C03               	skipc
  1240  013E  03F3               	decf	___awdiv@dividend+1,f
  1241  013F  02F3               	subwf	___awdiv@dividend+1,f
  1242  0140                     i1l924:
  1243  0140  1477               	bsf	___awdiv@quotient,0
  1244  0141                     i1l926:
  1245  0141  3001               	movlw	1
  1246  0142                     u30_25:
  1247  0142  1003               	clrc
  1248  0143  0CF1               	rrf	___awdiv@divisor+1,f
  1249  0144  0CF0               	rrf	___awdiv@divisor,f
  1250  0145  3EFF               	addlw	-1
  1251  0146  1D03               	skipz
  1252  0147  2942               	goto	u30_25
  1253  0148                     i1l928:
  1254  0148  3001               	movlw	1
  1255  0149  02F5               	subwf	___awdiv@counter,f
  1256  014A  1D03               	btfss	3,2
  1257  014B  294D               	goto	u31_21
  1258  014C  294E               	goto	u31_20
  1259  014D                     u31_21:
  1260  014D  2929               	goto	i1l920
  1261  014E                     u31_20:
  1262  014E                     i1l930:
  1263  014E  0876               	movf	___awdiv@sign,w
  1264  014F  1903               	btfsc	3,2
  1265  0150  2952               	goto	u32_21
  1266  0151  2953               	goto	u32_20
  1267  0152                     u32_21:
  1268  0152  2958               	goto	i1l934
  1269  0153                     u32_20:
  1270  0153                     i1l932:
  1271  0153  09F7               	comf	___awdiv@quotient,f
  1272  0154  09F8               	comf	___awdiv@quotient+1,f
  1273  0155  0AF7               	incf	___awdiv@quotient,f
  1274  0156  1903               	skipnz
  1275  0157  0AF8               	incf	___awdiv@quotient+1,f
  1276  0158                     i1l934:
  1277  0158  0878               	movf	___awdiv@quotient+1,w
  1278  0159  00F1               	movwf	?___awdiv+1
  1279  015A  0877               	movf	___awdiv@quotient,w
  1280  015B  00F0               	movwf	?___awdiv
  1281  015C                     i1l321:
  1282  015C  0008               	return
  1283  015D                     __end_of___awdiv:
  1284  007E                     btemp	set	126	;btemp
  1285  007E                     wtemp0	set	126
  1286                           
  1287                           	psect	config
  1288                           
  1289                           ;Config register CONFIG1 @ 0x2007
  1290                           ;	Oscillator Selection bits
  1291                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1292                           ;	Watchdog Timer Enable bit
  1293                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1294                           ;	Power-up Timer Enable bit
  1295                           ;	PWRTE = ON, PWRT enabled
  1296                           ;	RE3/MCLR pin function select bit
  1297                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1298                           ;	Code Protection bit
  1299                           ;	CP = OFF, Program memory code protection is disabled
  1300                           ;	Data Code Protection bit
  1301                           ;	CPD = OFF, Data memory code protection is disabled
  1302                           ;	Brown Out Reset Selection bits
  1303                           ;	BOREN = OFF, BOR disabled
  1304                           ;	Internal External Switchover bit
  1305                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1306                           ;	Fail-Safe Clock Monitor Enabled bit
  1307                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1308                           ;	Low Voltage Programming Enable bit
  1309                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1310                           ;	In-Circuit Debugger Mode bit
  1311                           ;	DEBUG = 0x1, unprogrammed default
  1312  2007                     	org	8199
  1313  2007  30C4               	dw	12484
  1314                           
  1315                           ;Config register CONFIG2 @ 0x2008
  1316                           ;	Brown-out Reset Selection bit
  1317                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1318                           ;	Flash Program Memory Self Write Enable bits
  1319                           ;	WRT = OFF, Write protection off
  1320  2008                     	org	8200
  1321  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80      6      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  6     6      0    1204
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Apr 19 20:44:24 2021

                      _c 007D                        _d 0031                        pc 0002  
                     l80 01EC                       l79 01EC             ___awdiv@sign 0076  
                     fsr 0004                      _dec 007B                      _cen 007C  
                    _isr 002C                      fsr0 0004                      _uni 007A  
                    indf 0000             ___awmod@sign 0076                     l1030 01B6  
                   l1040 01C2                     l1032 01B9                     l1050 01CA  
                   l1042 01C3                     l1034 01BC                     l1060 01D2  
                   l1052 01CD                     l1044 01C4                     l1036 01BD  
                   l1070 01D9                     l1062 01D3                     l1054 01CE  
                   l1046 01C8                     l1038 01BE                     l1080 01DE  
                   l1072 01DA                     l1064 01D4                     l1056 01CF  
                   l1048 01C9                     l1090 01E6                     l1082 01E2  
                   l1074 01DB                     l1066 01D7                     l1058 01D1  
                   l1092 01E9                     l1084 01E3                     l1076 01DC  
                   l1068 01D8                     l1086 01E4                     l1078 01DD  
                   l1088 01E5                     _ADIF 0066                     ?_isr 0070  
                   _T0IF 005A                     i1l70 00B5                     i1l72 00C1  
                   i1l73 00CF                     i1l74 00ED                     _TMR0 0001  
                   _main 01B6                     btemp 007E                     start 0010  
                  ??_isr 002A                    ?_main 0070          __end_of___awdiv 015D  
        __end_of___awmod 01B6          ___awdiv@divisor 0070                    i1l321 015C  
                  i1l334 01B5                    i1l900 0100                    i1l910 0111  
                  i1l902 0102                    i1l920 0129                    i1l912 0117  
                  i1l904 0106                    i1l922 013A                    i1l914 011A  
                  i1l930 014E                    i1l906 010B                    i1l932 0153  
                  i1l924 0140                    i1l916 0121                    i1l908 010F  
                  i1l940 015E                    i1l934 0158                    i1l926 0141  
                  i1l918 0125                    i1l950 0172                    i1l942 0162  
                  i1l928 0148                    i1l960 018A                    i1l952 0178  
                  i1l944 0167                    i1l970 01AC                    i1l962 0194  
                  i1l954 017B                    i1l946 0169                    i1l938 015D  
                  i1l972 01B1                    i1l964 019A                    i1l956 0182  
                  i1l948 016D                    i1l980 0039                    i1l894 00F6  
                  i1l966 01A1                    i1l958 0186                    i1l990 004D  
                  i1l982 003B                    i1l896 00F7                    i1l968 01A7  
                  i1l992 0050                    i1l984 0040                    i1l976 002C  
                  i1l898 00FB                    i1l986 0044                    i1l978 0030  
                  i1l994 0051                    i1l996 0055                    i1l988 0046  
                  i1l998 00AD          ___awdiv@counter 0075                    u30_25 0142  
                  u31_20 014E                    u23_20 00FB                    u31_21 014D  
                  u23_21 00FA                    u32_20 0153                    u24_20 0106  
                  u40_20 01A7                    u32_21 0152                    u24_21 0105  
                  u40_21 01A6                    u25_20 0117                    u41_20 01AC  
                  u33_20 0162                    u25_21 0116                    u41_21 01AB  
                  u33_21 0161                    u34_20 016D                    u42_20 0030  
                  u34_21 016C                    u42_21 002F                    u26_25 011B  
                  u27_20 0129                    u35_20 0178                    u43_20 0039  
                  u27_21 0128                    u35_21 0177                    u43_21 0038  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  u44_20 0055                    u44_21 0054                    u28_25 012A  
                  u36_25 017C                    u29_20 013A                    u37_20 018A  
                  u29_21 0139                    u37_21 0189                    u29_25 0136  
                  u45_27 004A                    u38_20 0194                    u38_21 0193  
                  u38_25 0190                    u39_25 019B                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _tabla 0020  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0013             __end_of_main 01F0                   ??_main 0030  
                 _ADRESH 001E         ___awdiv@dividend 0072                   _ANSELH 0189  
                 i1l1000 00AF                   i1l1010 00B8                   i1l1002 00B0  
                 i1l1020 00D8                   i1l1012 00BE                   i1l1004 00B1  
                 i1l1014 00C4                   i1l1006 00B2                   i1l1016 00CA  
                 i1l1024 00DA                   i1l1008 00B3                   i1l1114 00E2  
                 i1l1018 00D2                ??___awdiv 0074                ??___awmod 0074  
                 _cenres 0079         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075                   saved_w 007E  __end_of__initialization 0028  
         __pcstackCOMMON 0070             __pidataBANK0 0203           _OPTION_REGbits 0081  
             __pbssBANK0 0030               __pmaintext 01B6               __pintentry 0004  
                ___awdiv 00F6                  ___awmod 015D                _ANSELbits 0188  
                __ptext1 002C                  __ptext2 015D                  __ptext3 00F6  
                _dispvar 0030             __size_of_isr 00CA         ___awmod@dividend 0072  
   end_of_initialization 0028                _PORTAbits 0005                _PORTBbits 0006  
    start_initialization 0013              __end_of_isr 00F6               init_fetch0 01F0  
            __pdataBANK0 0020              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 002A                 ?___awdiv 0070                 ?___awmod 0070  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of___awdiv 0067  
       __size_of___awmod 0059            __size_of_main 003A               _INTCONbits 000B  
               init_ram0 01F4                 intlevel1 0000               _OSCCONbits 008F  
